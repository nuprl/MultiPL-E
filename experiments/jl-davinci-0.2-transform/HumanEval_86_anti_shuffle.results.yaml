language: jl
name: HumanEval_86_anti_shuffle
results:
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split string into words\n \
    \   words = split(s, \" \")\n    # sort each word\n    for i in 1:length(words)\n\
    \        words[i] = sort(words[i])\n    end\n    # join words back into a string\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp5_hzlt26.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp5_hzlt26.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp5_hzlt26.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5_hzlt26.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5_hzlt26.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp5_hzlt26.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp5_hzlt26.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5_hzlt26.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5_hzlt26.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp5_hzlt2"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split the string into words\n\
    \    words = split(s, \" \")\n    # sort each word\n    for i in 1:length(words)\n\
    \        words[i] = sort(words[i])\n    end\n    # join the words back together\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp3qz97m9r.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp3qz97m9r.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp3qz97m9r.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3qz97m9r.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3qz97m9r.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp3qz97m9r.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp3qz97m9r.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3qz97m9r.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3qz97m9r.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp3qz97m9"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        new_words = append!(new_words,\
    \ sort(collect(word)))\n    end\n    return join(new_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpko4qacal.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpko4qacal.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"e h l l o\" == \"ehllo\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"b e m n r u\" == \"bemnru\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"a b c d\" == \"abcd\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"H e l l o ! ! ! W d l o r\" == \"Hello\
    \ !!!Wdlor\"\nStacktrace:\n [1] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return\
    \ join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_nxhlsig.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp_nxhlsig.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsig.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsi"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s = split(s, \" \")\n    for\
    \ i in 1:length(s)\n        s[i] = sort(s[i])\n    end\n    return join(s, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpon6xlg7y.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpon6xlg7y.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpon6xlg7y.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpon6xlg7y.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpon6xlg7y.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpon6xlg7y.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpon6xlg7y.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpon6xlg7y.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpon6xlg7y.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpon6xlg7"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    new_s = \"\"\n    for word in\
    \ split(s)\n        new_s *= join(sort(collect(word)))\n        new_s *= \" \"\
    \n    end\n    return new_s\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\"\
    ) == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpv9xz21vj.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpv9xz21vj.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"Hi \" == \"Hi\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv9xz21vj.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9xz21vj.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpv9xz21vj.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"ehllo \" == \"ehllo\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv9xz21vj.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9xz21vj.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpv9xz21vj.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"bemnru \" == \"bemnru\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv9xz21vj.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9xz21vj.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpv9xz21vj.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"abcd \" == \"abcd\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpv9xz21vj.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9xz21vj.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpv9xz21vj.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"Hello !!!Wdlor \" == \"Hello !!!Wdlor\"\
    \nStacktrace:\n [1] macro expansion\n   @ "
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # Split the string into words\n\
    \    words = split(s)\n    # Sort each word\n    sorted_words = [sort(word) for\
    \ word in words]\n    # Join the words back into a string\n    return join(sorted_words)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpsunfoevo.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpsunfoevo.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmpsunfoevo.jl:20\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpsunfoevo.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpsunfoevo.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpsunfoevo.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmpsunfoevo.jl:20\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/sha"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # convert string to array of\
    \ characters\n    s_array = collect(s)\n    # find the index of the first space\n\
    \    first_space = findfirst(s_array, \" \")\n    # if no space, return the sorted\
    \ string\n    if first_space == nothing\n        return sort(s)\n    end\n   \
    \ # if there is a space, split the string into two parts\n    # and recursively\
    \ call the function on each part\n    # then return the concatenation of the two\
    \ parts\n    return anti_shuffle(join(s_array[1:first_space-1])) * \" \" * anti_shuffle(join(s_array[first_space+1:end]))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmph8kmoxzb.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmph8kmoxzb.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ findfirst(::Vector{Char}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmph8kmoxzb.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph8kmoxzb.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph8kmoxzb.jl:34\ntest set:\
    \ Error During Test at /tmp/tmph8kmoxzb.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching findfirst(::Vector{Char},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmph8kmoxzb.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph8kmoxzb.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph8kmoxzb.jl:34\ntest set:\
    \ Error During T"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        new_words = push!(new_words,\
    \ sort(collect(word)))\n    end\n    return join(new_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzwf6p27t.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpzwf6p27t.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"['H', 'i']\" == \"Hi\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"['e', 'h', 'l', 'l', 'o']\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"['b', 'e', 'm', 'n', 'r', 'u']\" == \"bemnru\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"['a', 'b', 'c', 'd']\" == \"abcd\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"['H', 'e', "
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    return join(sort(split(s)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq6tj_tlw.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpq6tj_tlw.jl:25\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:26\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"number\" == \"bemnru\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:28\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"HelloWorld!!!\" == \"Hello !!!Wdlor\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:30\n  Expression: candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\n  \
    \ Evaluated: \"Hi.HowMisterMyRobot.areisnameyou?\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\nTest Summary:\
    \ | P"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split string into words\n \
    \   words = split(s, \" \")\n    # sort each word\n    for i in 1:length(words)\n\
    \        words[i] = sort(words[i])\n    end\n    # join words back together\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpstekcysm.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpstekcysm.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpstekcysm.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpstekcysm.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpstekcysm.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpstekcysm.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpstekcysm.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpstekcysm.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpstekcysm.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpstekcysm.jl:33\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s, \" \")\n \
    \   s_split_sorted = []\n    for i in s_split\n        push!(s_split_sorted, sort(i))\n\
    \    end\n    return join(s_split_sorted, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t\
    @test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"\
    bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"Hello\
    \ World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp6cg1oqzz.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp6cg1oqzz.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp6cg1oqzz.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6cg1oqzz.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6cg1oqzz.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp6cg1oqzz.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp6cg1oqzz.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6cg1oqzz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6cg1oqzz.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp6cg1oqzz.jl:31\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800214
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s, \" \")\n \
    \   s_split_sorted = [sort(i) for i in s_split]\n    s_joined = join(s_split_sorted,\
    \ \" \")\n    return s_joined\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpovl7um58.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpovl7um58.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(i::SubString{String})\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n\
    \     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n     @ Main\
    \ /tmp/tmpovl7um58.jl:18\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpovl7um58.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpovl7um58.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpovl7um58.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(i::SubString{String})\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n\
    \     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n     @ Main\
    \ /tmp/tmpovl7um58.jl:18\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    if length(s) == 1\n        return\
    \ s\n    end\n    s = split(s)\n    for i in 1:length(s)\n        s[i] = sort(s[i])\n\
    \    end\n    return join(s)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\"\
    ) == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp69z277n2.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp69z277n2.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp69z277n2.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp69z277n2.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp69z277n2.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp69z277n2.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp69z277n2.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp69z277n2.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp69z277n2.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp69z277n2.jl:33\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800214
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s = split(s, \" \")\n    for\
    \ i in 1:length(s)\n        s[i] = sort(collect(s[i]))\n    end\n    return join(s,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpkp6j1vtb.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpkp6j1vtb.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:54\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpkp6j1vtb.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkp6j1vtb.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkp6j1vtb.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpkp6j1vtb.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:54\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpkp6j1vtb.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyg"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s = split(s, \" \")\n    for\
    \ i in 1:length(s)\n        s[i] = sort(s[i])\n    end\n    return join(s, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpon6xlg7y.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpon6xlg7y.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpon6xlg7y.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpon6xlg7y.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpon6xlg7y.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpon6xlg7y.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpon6xlg7y.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpon6xlg7y.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpon6xlg7y.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpon6xlg7"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s)\n    for i\
    \ in 1:length(s_split)\n        s_split[i] = sort(s_split[i])\n    end\n    return\
    \ join(s_split)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp4xt57wxu.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp4xt57wxu.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp4xt57wxu.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4xt57wxu.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4xt57wxu.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp4xt57wxu.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp4xt57wxu.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4xt57wxu.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4xt57wxu.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp4xt57wxu.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split string into words\n \
    \   words = split(s, \" \")\n    # sort each word\n    for i in 1:length(words)\n\
    \        words[i] = sort(words[i])\n    end\n    # join words back into a sentence\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp01clvh4f.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp01clvh4f.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp01clvh4f.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp01clvh4f.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp01clvh4f.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp01clvh4f.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp01clvh4f.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp01clvh4f.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp01clvh4f.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp01clvh4f.jl:33\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return\
    \ join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_nxhlsig.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp_nxhlsig.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsig.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsi"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # your code here\n    return\
    \ s\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfn03ez13.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpfn03ez13.jl:26\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfn03ez13.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfn03ez13.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpfn03ez13.jl:27\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"number\" == \"bemnru\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfn03ez13.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfn03ez13.jl:24\ntest set: Test Failed at /tmp/tmpfn03ez13.jl:29\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"Hello World!!!\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfn03ez13.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfn03ez13.jl:24\ntest set: Test Failed at /tmp/tmpfn03ez13.jl:31\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \"Hi. My name is Mister\
    \ Robot. How are you?\" == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfn03ez13.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfn03ez13.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      "
  timestamp: 1659800213
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split the string into words\n\
    \    words = split(s)\n    # sort each word\n    for i in 1:length(words)\n  \
    \      words[i] = sort(words[i])\n    end\n    # join the words back together\n\
    \    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpgb3n2yy9.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpgb3n2yy9.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpgb3n2yy9.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgb3n2yy9.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgb3n2yy9.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpgb3n2yy9.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpgb3n2yy9.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgb3n2yy9.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgb3n2yy9.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpgb3n2yy9.jl:33\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    return join(sort(split(s)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq6tj_tlw.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpq6tj_tlw.jl:25\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:26\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"number\" == \"bemnru\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:28\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"HelloWorld!!!\" == \"Hello !!!Wdlor\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:30\n  Expression: candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\n  \
    \ Evaluated: \"Hi.HowMisterMyRobot.areisnameyou?\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\nTest Summary:\
    \ | P"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split string into words\n \
    \   words = split(s, \" \")\n    # sort each word\n    for i in 1:length(words)\n\
    \        words[i] = sort(words[i])\n    end\n    # join words back together\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpstekcysm.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpstekcysm.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpstekcysm.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpstekcysm.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpstekcysm.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpstekcysm.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpstekcysm.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpstekcysm.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpstekcysm.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpstekcysm.jl:33\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_list = split(s, \" \")\n  \
    \  for i in 1:length(s_list)\n        s_list[i] = sort(s_list[i])\n    end\n \
    \   return join(s_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmps9lx4i1n.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmps9lx4i1n.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmps9lx4i1n.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps9lx4i1n.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps9lx4i1n.jl:27\ntest set:\
    \ Error During Test at /tmp/tmps9lx4i1n.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmps9lx4i1n.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps9lx4i1n.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps9lx4i1n.jl:27\ntest set:\
    \ Error During Test at /tmp/tmps9lx4i1n.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # Split the string into words\n\
    \    words = split(s)\n    # Sort each word\n    for i in 1:length(words)\n  \
    \      words[i] = sort(words[i])\n    end\n    # Join the words back together\n\
    \    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpwtb277eo.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpwtb277eo.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpwtb277eo.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwtb277eo.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwtb277eo.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpwtb277eo.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpwtb277eo.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwtb277eo.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwtb277eo.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpwtb277eo.jl:33\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split string into words\n \
    \   words = split(s, \" \")\n    # sort each word\n    for i in 1:length(words)\n\
    \        words[i] = sort(words[i])\n    end\n    # join words\n    return join(words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpiqsu8wzg.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpiqsu8wzg.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpiqsu8wzg.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiqsu8wzg.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiqsu8wzg.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpiqsu8wzg.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpiqsu8wzg.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiqsu8wzg.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiqsu8wzg.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpiqsu8wzg.jl:33\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_arr = split(s, \" \")\n   \
    \ for i in 1:length(s_arr)\n        s_arr[i] = sort(s_arr[i])\n    end\n    return\
    \ join(s_arr, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpvji8mlzb.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpvji8mlzb.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpvji8mlzb.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvji8mlzb.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvji8mlzb.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvji8mlzb.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpvji8mlzb.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvji8mlzb.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvji8mlzb.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvji8mlzb.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800214
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_arr = split(s, \" \")\n   \
    \ for i in 1:length(s_arr)\n        s_arr[i] = sort(s_arr[i])\n    end\n    return\
    \ join(s_arr, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpvji8mlzb.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpvji8mlzb.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpvji8mlzb.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvji8mlzb.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvji8mlzb.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvji8mlzb.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpvji8mlzb.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvji8mlzb.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvji8mlzb.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvji8mlzb.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800214
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        new_words = append!(new_words,\
    \ sort(collect(word)))\n    end\n    return join(new_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpko4qacal.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpko4qacal.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"e h l l o\" == \"ehllo\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"b e m n r u\" == \"bemnru\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"a b c d\" == \"abcd\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"H e l l o ! ! ! W d l o r\" == \"Hello\
    \ !!!Wdlor\"\nStacktrace:\n [1] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return join(words)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpezt28vj2.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpezt28vj2.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpezt28vj2.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpezt28vj2.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpezt28vj2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpezt28vj2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpezt28vj2.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpezt28vj2.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpezt28vj2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpezt28vj2.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return\
    \ join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_nxhlsig.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp_nxhlsig.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsig.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsi"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    return join(sort(split(s)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq6tj_tlw.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpq6tj_tlw.jl:25\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:26\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"number\" == \"bemnru\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:28\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"HelloWorld!!!\" == \"Hello !!!Wdlor\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:30\n  Expression: candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\n  \
    \ Evaluated: \"Hi.HowMisterMyRobot.areisnameyou?\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\nTest Summary:\
    \ | P"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        new_words = push!(new_words,\
    \ sort(collect(word)))\n    end\n    return join(new_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzwf6p27t.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpzwf6p27t.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"['H', 'i']\" == \"Hi\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"['e', 'h', 'l', 'l', 'o']\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"['b', 'e', 'm', 'n', 'r', 'u']\" == \"bemnru\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"['a', 'b', 'c', 'd']\" == \"abcd\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"['H', 'e', "
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s = split(s, \" \")\n    for\
    \ i in 1:length(s)\n        s[i] = sort(s[i])\n    end\n    return join(s, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpon6xlg7y.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpon6xlg7y.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpon6xlg7y.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpon6xlg7y.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpon6xlg7y.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpon6xlg7y.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpon6xlg7y.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpon6xlg7y.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpon6xlg7y.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpon6xlg7"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return\
    \ join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_nxhlsig.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp_nxhlsig.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsig.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsi"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s, \" \")\n \
    \   s_split_sorted = [sort(x) for x in s_split]\n    return join(s_split_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpymg49gwx.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpymg49gwx.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::SubString{String})\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n\
    \     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n     @ Main\
    \ /tmp/tmpymg49gwx.jl:18\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpymg49gwx.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpymg49gwx.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpymg49gwx.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::SubString{String})\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n\
    \     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n     @ Main\
    \ /tmp/tmpymg49gwx.jl:18\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]"
  timestamp: 1659800214
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    word_list = split(s)\n    for\
    \ i in 1:length(word_list)\n        word_list[i] = sort(collect(word_list[i]))\n\
    \    end\n    return join(word_list)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpp1ji318p.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpp1ji318p.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:54\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpp1ji318p.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpp1ji318p.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpp1ji318p.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpp1ji318p.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:54\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpp1ji318p.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyg"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return join(words)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpezt28vj2.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpezt28vj2.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpezt28vj2.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpezt28vj2.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpezt28vj2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpezt28vj2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpezt28vj2.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpezt28vj2.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpezt28vj2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpezt28vj2.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return join(words)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpezt28vj2.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpezt28vj2.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpezt28vj2.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpezt28vj2.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpezt28vj2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpezt28vj2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpezt28vj2.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpezt28vj2.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpezt28vj2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpezt28vj2.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split string into words\n \
    \   words = split(s, \" \")\n    # sort each word\n    for i in 1:length(words)\n\
    \        words[i] = sort(words[i])\n    end\n    # join words back into a string\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp5_hzlt26.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp5_hzlt26.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp5_hzlt26.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5_hzlt26.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5_hzlt26.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp5_hzlt26.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp5_hzlt26.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5_hzlt26.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5_hzlt26.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp5_hzlt2"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split the string into words\n\
    \    words = split(s, \" \")\n    # map each word to a new word where the characters\
    \ are sorted\n    # join the words back together with spaces in between\n    join(map(sort,\
    \ words), \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpq5agnqbd.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpq5agnqbd.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47 [inlined]\n\
    \   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n  \
    \   @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] anti_shuffle(s::String)\n     @ Main /tmp/tmpq5agnqbd.jl:21\n   [6] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpq5agnqbd.jl:28 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpq5agnqbd.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpq5agnqbd.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47 [inlined]\n\
    \   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n  \
    \   @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] anti_shuffle(s::String)\n     @ Main /tmp/tmpq5agnqbd.jl:21\n   [6] macro\
    \ expans"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split string into words\n \
    \   words = split(s, \" \")\n    # sort each word\n    sorted_words = [sort(word)\
    \ for word in words]\n    # join the words back together\n    return join(sorted_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpnw5cyp5e.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpnw5cyp5e.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmpnw5cyp5e.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnw5cyp5e.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnw5cyp5e.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpnw5cyp5e.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmpnw5cyp5e.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [in"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    new_words\
    \ = []\n    for word in words\n        new_words = append!(new_words, sort(word))\n\
    \    end\n    return join(new_words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpiijzqmdx.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpiijzqmdx.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpiijzqmdx.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiijzqmdx.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiijzqmdx.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpiijzqmdx.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpiijzqmdx.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiijzqmdx.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiijzqmdx.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpiijzqmdx.jl:31\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = [sort(word) for word in words]\n    return join(new_words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpb5thx2bm.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpb5thx2bm.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmpb5thx2bm.jl:18\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpb5thx2bm.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpb5thx2bm.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpb5thx2bm.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmpb5thx2bm.jl:18\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [in"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp5p3jofto.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp5p3jofto.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:54\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp5p3jofto.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5p3jofto.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5p3jofto.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5p3jofto.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:54\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp5p3jofto.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyg"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s, \" \")\n \
    \   for i in 1:length(s_split)\n        s_split[i] = sort(s_split[i])\n    end\n\
    \    return join(s_split, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpbtv3xex8.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpbtv3xex8.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpbtv3xex8.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbtv3xex8.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbtv3xex8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpbtv3xex8.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpbtv3xex8.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbtv3xex8.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbtv3xex8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpbtv3xex8.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s, \" \")\n \
    \   s_split_sorted = []\n    for i in s_split\n        push!(s_split_sorted, sort(collect(i)))\n\
    \    end\n    return join(s_split_sorted, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t\
    @test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"\
    bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"Hello\
    \ World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjxr3env3.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpjxr3env3.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"['H', 'i']\" == \"Hi\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjxr3env3.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjxr3env3.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpjxr3env3.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"['e', 'h', 'l', 'l', 'o']\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjxr3env3.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjxr3env3.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpjxr3env3.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"['b', 'e', 'm', 'n', 'r', 'u']\" == \"bemnru\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjxr3env3.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjxr3env3.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpjxr3env3.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"['a', 'b', 'c', 'd']\" == \"abcd\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjxr3env3.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjxr3env3.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpjxr3env3.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"['H', 'e', 'l', 'l', 'o'] ['!', '!',\
    \ '!', 'W', 'd',"
  timestamp: 1659800213
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return\
    \ join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_nxhlsig.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp_nxhlsig.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsig.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsi"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ eachindex(words)\n        words[i] = sort(words[i])\n    end\n    return join(words)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpetx9uwib.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpetx9uwib.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpetx9uwib.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpetx9uwib.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpetx9uwib.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpetx9uwib.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpetx9uwib.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpetx9uwib.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpetx9uwib.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpetx9uwib.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800217
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s, \" \")\n \
    \   s_split_sorted = []\n    for i in s_split\n        push!(s_split_sorted, sort(i))\n\
    \    end\n    return join(s_split_sorted, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t\
    @test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"\
    bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"Hello\
    \ World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp6cg1oqzz.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp6cg1oqzz.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp6cg1oqzz.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6cg1oqzz.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6cg1oqzz.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp6cg1oqzz.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp6cg1oqzz.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6cg1oqzz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6cg1oqzz.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp6cg1oqzz.jl:31\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800214
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split string into words\n \
    \   words = split(s, \" \")\n    # sort each word\n    for i in 1:length(words)\n\
    \        words[i] = sort(words[i])\n    end\n    # join words into a string\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp2xk_do10.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp2xk_do10.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp2xk_do10.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2xk_do10.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2xk_do10.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp2xk_do10.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp2xk_do10.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2xk_do10.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2xk_do10.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp2xk_do10.jl:33\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800217
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        new_words = append!(new_words,\
    \ sort(collect(word)))\n    end\n    return join(new_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpko4qacal.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpko4qacal.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"e h l l o\" == \"ehllo\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"b e m n r u\" == \"bemnru\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"a b c d\" == \"abcd\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"H e l l o ! ! ! W d l o r\" == \"Hello\
    \ !!!Wdlor\"\nStacktrace:\n [1] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    return join(map(sort, split(s,\
    \ \" \")), \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpceglwo03.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpceglwo03.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47 [inlined]\n\
    \   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n  \
    \   @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] anti_shuffle(s::String)\n     @ Main /tmp/tmpceglwo03.jl:17\n   [6] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpceglwo03.jl:24 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpceglwo03.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpceglwo03.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47 [inlined]\n\
    \   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n  \
    \   @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] anti_shuffle(s::String)\n     @ Main /tmp/tmpceglwo03.jl:17\n   [6] macro\
    \ expans"
  timestamp: 1659800219
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    new_words\
    \ = []\n    for word in words\n        new_words = push!(new_words, sort(collect(word)))\n\
    \    end\n    return join(new_words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc9zh6rgj.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpc9zh6rgj.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"['H', 'i']\" == \"Hi\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9zh6rgj.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9zh6rgj.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpc9zh6rgj.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"['e', 'h', 'l', 'l', 'o']\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9zh6rgj.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9zh6rgj.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpc9zh6rgj.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"['b', 'e', 'm', 'n', 'r', 'u']\" == \"bemnru\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9zh6rgj.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9zh6rgj.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpc9zh6rgj.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"['a', 'b', 'c', 'd']\" == \"abcd\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9zh6rgj.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9zh6rgj.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpc9zh6rgj.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"['H', 'e', 'l', 'l', 'o']['!', '!', '!',\
    \ 'W', 'd', "
  timestamp: 1659800217
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split string into words\n \
    \   words = split(s)\n    # sort each word\n    sorted_words = [sort(word) for\
    \ word in words]\n    # join words back into string\n    return join(sorted_words)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpd8ikga9c.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpd8ikga9c.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmpd8ikga9c.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpd8ikga9c.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpd8ikga9c.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpd8ikga9c.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmpd8ikga9c.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [in"
  timestamp: 1659800219
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s, \" \")\n \
    \   s_split_sorted = []\n    for i in s_split\n        push!(s_split_sorted, sort(i))\n\
    \    end\n    return join(s_split_sorted, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t\
    @test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"\
    bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"Hello\
    \ World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp6cg1oqzz.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp6cg1oqzz.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp6cg1oqzz.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6cg1oqzz.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6cg1oqzz.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp6cg1oqzz.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp6cg1oqzz.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6cg1oqzz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6cg1oqzz.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp6cg1oqzz.jl:31\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800214
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    return\
    \ join(map(sort, words), \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmptll_nqoz.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmptll_nqoz.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47 [inlined]\n\
    \   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n  \
    \   @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] anti_shuffle(s::String)\n     @ Main /tmp/tmptll_nqoz.jl:18\n   [6] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmptll_nqoz.jl:25 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmptll_nqoz.jl:24\ntest set:\
    \ Error During Test at /tmp/tmptll_nqoz.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47 [inlined]\n\
    \   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n  \
    \   @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] anti_shuffle(s::String)\n     @ Main /tmp/tmptll_nqoz.jl:18\n   [6] macro\
    \ expans"
  timestamp: 1659800219
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    new_words\
    \ = []\n    for word in words\n        push!(new_words, sort(collect(word)))\n\
    \    end\n    return join(new_words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphlxblxis.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmphlxblxis.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"['H', 'i']\" == \"Hi\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlxblxis.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlxblxis.jl:28\ntest set: Test\
    \ Failed at /tmp/tmphlxblxis.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"['e', 'h', 'l', 'l', 'o']\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlxblxis.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlxblxis.jl:28\ntest set: Test\
    \ Failed at /tmp/tmphlxblxis.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"['b', 'e', 'm', 'n', 'r', 'u']\" == \"bemnru\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlxblxis.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlxblxis.jl:28\ntest set: Test\
    \ Failed at /tmp/tmphlxblxis.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"['a', 'b', 'c', 'd']\" == \"abcd\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlxblxis.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlxblxis.jl:28\ntest set: Test\
    \ Failed at /tmp/tmphlxblxis.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"['H', 'e', 'l', 'l', 'o']['!', '!', '!',\
    \ 'W', 'd', "
  timestamp: 1659800217
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # Split the string into words\n\
    \    words = split(s, \" \")\n    # For each word, sort the characters\n    for\
    \ i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    # Join the words back together\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpxzo273ib.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpxzo273ib.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:54\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpxzo273ib.jl:21\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxzo273ib.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxzo273ib.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpxzo273ib.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:54\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpxzo273ib.jl:21\n   [3] macro expansion\n     @ ~/.conda/envs/polyg"
  timestamp: 1659800219
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s, \" \")\n \
    \   s_split_sorted = []\n    for i in s_split\n        push!(s_split_sorted, sort(i))\n\
    \    end\n    return join(s_split_sorted, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t\
    @test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"\
    bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"Hello\
    \ World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp6cg1oqzz.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp6cg1oqzz.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp6cg1oqzz.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6cg1oqzz.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6cg1oqzz.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp6cg1oqzz.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp6cg1oqzz.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6cg1oqzz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6cg1oqzz.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp6cg1oqzz.jl:31\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800214
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split string into words\n \
    \   words = split(s, \" \")\n    # sort each word\n    for i in 1:length(words)\n\
    \        words[i] = sort(words[i])\n    end\n    # join words back together\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpstekcysm.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpstekcysm.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpstekcysm.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpstekcysm.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpstekcysm.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpstekcysm.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpstekcysm.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpstekcysm.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpstekcysm.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpstekcysm.jl:33\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split the string into words\n\
    \    words = split(s, \" \")\n    # sort the characters in each word\n    sorted_words\
    \ = [sort(word) for word in words]\n    # join the words back together\n    return\
    \ join(sorted_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\"\
    ) == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpot_g1cfy.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpot_g1cfy.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmpot_g1cfy.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpot_g1cfy.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpot_g1cfy.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpot_g1cfy.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmpot_g1cfy.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [in"
  timestamp: 1659800219
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        new_words = push!(new_words,\
    \ sort(collect(word)))\n    end\n    return join(new_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzwf6p27t.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpzwf6p27t.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"['H', 'i']\" == \"Hi\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"['e', 'h', 'l', 'l', 'o']\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"['b', 'e', 'm', 'n', 'r', 'u']\" == \"bemnru\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"['a', 'b', 'c', 'd']\" == \"abcd\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"['H', 'e', "
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return join(words)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpezt28vj2.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpezt28vj2.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpezt28vj2.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpezt28vj2.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpezt28vj2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpezt28vj2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpezt28vj2.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpezt28vj2.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpezt28vj2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpezt28vj2.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    return join(sort(split(s)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq6tj_tlw.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpq6tj_tlw.jl:25\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:26\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"number\" == \"bemnru\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:28\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"HelloWorld!!!\" == \"Hello !!!Wdlor\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:30\n  Expression: candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\n  \
    \ Evaluated: \"Hi.HowMisterMyRobot.areisnameyou?\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\nTest Summary:\
    \ | P"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        new_words = push!(new_words,\
    \ sort(collect(word)))\n    end\n    return join(new_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzwf6p27t.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpzwf6p27t.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"['H', 'i']\" == \"Hi\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"['e', 'h', 'l', 'l', 'o']\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"['b', 'e', 'm', 'n', 'r', 'u']\" == \"bemnru\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"['a', 'b', 'c', 'd']\" == \"abcd\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"['H', 'e', "
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s, \" \")\n \
    \   s_split_sorted = [sort(i) for i in s_split]\n    return join(s_split_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp80b736v8.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp80b736v8.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(i::SubString{String})\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n\
    \     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n     @ Main\
    \ /tmp/tmp80b736v8.jl:18\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp80b736v8.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp80b736v8.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp80b736v8.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(i::SubString{String})\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n\
    \     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n     @ Main\
    \ /tmp/tmp80b736v8.jl:18\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]"
  timestamp: 1659800219
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # Split the string into words\n\
    \    words = split(s, \" \")\n    # Sort the characters in each word\n    for\
    \ i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n    # Join\
    \ the words back together\n    return join(words, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\"\
    )\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") ==\
    \ \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpo4x16ppl.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpo4x16ppl.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpo4x16ppl.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo4x16ppl.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo4x16ppl.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpo4x16ppl.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpo4x16ppl.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo4x16ppl.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo4x16ppl.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpo4x16ppl.jl:33\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800219
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    new_words\
    \ = []\n    for word in words\n        push!(new_words, sort(collect(word)))\n\
    \    end\n    return join(new_words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphlxblxis.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmphlxblxis.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"['H', 'i']\" == \"Hi\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlxblxis.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlxblxis.jl:28\ntest set: Test\
    \ Failed at /tmp/tmphlxblxis.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"['e', 'h', 'l', 'l', 'o']\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlxblxis.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlxblxis.jl:28\ntest set: Test\
    \ Failed at /tmp/tmphlxblxis.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"['b', 'e', 'm', 'n', 'r', 'u']\" == \"bemnru\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlxblxis.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlxblxis.jl:28\ntest set: Test\
    \ Failed at /tmp/tmphlxblxis.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"['a', 'b', 'c', 'd']\" == \"abcd\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlxblxis.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlxblxis.jl:28\ntest set: Test\
    \ Failed at /tmp/tmphlxblxis.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"['H', 'e', 'l', 'l', 'o']['!', '!', '!',\
    \ 'W', 'd', "
  timestamp: 1659800217
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        new_words = append!(new_words,\
    \ sort(collect(word)))\n    end\n    return join(new_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpko4qacal.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpko4qacal.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"e h l l o\" == \"ehllo\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"b e m n r u\" == \"bemnru\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"a b c d\" == \"abcd\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"H e l l o ! ! ! W d l o r\" == \"Hello\
    \ !!!Wdlor\"\nStacktrace:\n [1] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_arr = split(s, \" \")\n   \
    \ for i in 1:length(s_arr)\n        s_arr[i] = sort(s_arr[i])\n    end\n    return\
    \ join(s_arr, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpvji8mlzb.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpvji8mlzb.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpvji8mlzb.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvji8mlzb.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvji8mlzb.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvji8mlzb.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpvji8mlzb.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvji8mlzb.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvji8mlzb.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvji8mlzb.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800214
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return\
    \ join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_nxhlsig.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp_nxhlsig.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsig.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsi"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return join(words)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpezt28vj2.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpezt28vj2.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpezt28vj2.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpezt28vj2.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpezt28vj2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpezt28vj2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpezt28vj2.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpezt28vj2.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpezt28vj2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpezt28vj2.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return\
    \ join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_nxhlsig.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp_nxhlsig.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsig.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsi"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ eachindex(words)\n        words[i] = sort(words[i])\n    end\n    return join(words)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpetx9uwib.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpetx9uwib.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpetx9uwib.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpetx9uwib.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpetx9uwib.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpetx9uwib.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpetx9uwib.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpetx9uwib.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpetx9uwib.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpetx9uwib.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800217
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_arr = split(s, \" \")\n   \
    \ for i in 1:length(s_arr)\n        s_arr[i] = sort(s_arr[i])\n    end\n    return\
    \ join(s_arr, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpvji8mlzb.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpvji8mlzb.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpvji8mlzb.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvji8mlzb.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvji8mlzb.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvji8mlzb.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpvji8mlzb.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvji8mlzb.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvji8mlzb.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvji8mlzb.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800214
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 0
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s = split(s, \" \")\n    for\
    \ i in 1:length(s)\n        s[i] = join(sort(collect(s[i])), \"\")\n    end\n\
    \    return join(s, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659800216
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        word = words[i]\n        word_chars = collect(word)\n\
    \        sort!(word_chars)\n        words[i] = join(word_chars)\n    end\n   \
    \ return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcllwfh9f.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpcllwfh9f.jl:35\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated: \"Hello!!!Wdlor\" == \"\
    Hello !!!Wdlor\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcllwfh9f.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcllwfh9f.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpcllwfh9f.jl:37\n  Expression: candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\n  \
    \ Evaluated: \".HiMyaemnisMeirst.RbootHowaer?ouy\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcllwfh9f.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcllwfh9f.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     2      7\n"
  timestamp: 1659800217
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # Split the string into words\n\
    \    words = split(s, \" \")\n    # Sort the characters in each word\n    sorted_words\
    \ = [sort(word) for word in words]\n    # Join the sorted words back into a string\n\
    \    return join(sorted_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmplsgc0ndx.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmplsgc0ndx.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmplsgc0ndx.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmplsgc0ndx.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmplsgc0ndx.jl:28\ntest set:\
    \ Error During Test at /tmp/tmplsgc0ndx.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmplsgc0ndx.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [in"
  timestamp: 1659800219
- exit_code: 0
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = join(sort(collect(words[i])), \"\
    \")\n    end\n    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659800216
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        new_words = append!(new_words,\
    \ sort(collect(word)))\n    end\n    return join(new_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpko4qacal.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpko4qacal.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"e h l l o\" == \"ehllo\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"b e m n r u\" == \"bemnru\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"a b c d\" == \"abcd\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"H e l l o ! ! ! W d l o r\" == \"Hello\
    \ !!!Wdlor\"\nStacktrace:\n [1] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split the string into words\n\
    \    words = split(s, \" \")\n    # sort each word\n    for i in 1:length(words)\n\
    \        words[i] = sort(words[i])\n    end\n    # join the words back together\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp3qz97m9r.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp3qz97m9r.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp3qz97m9r.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3qz97m9r.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3qz97m9r.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp3qz97m9r.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp3qz97m9r.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3qz97m9r.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3qz97m9r.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp3qz97m9"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # Split the string into words\n\
    \    words = split(s, \" \")\n    # For each word, sort the characters\n    for\
    \ i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n    # Join\
    \ the words back together\n    return join(words, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\"\
    )\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") ==\
    \ \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp80wntobu.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp80wntobu.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp80wntobu.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80wntobu.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80wntobu.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp80wntobu.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp80wntobu.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80wntobu.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80wntobu.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp80wntobu.jl:33\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800219
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split string into words\n \
    \   words = split(s, \" \")\n    # sort each word\n    for i in 1:length(words)\n\
    \        words[i] = sort(words[i])\n    end\n    # join words back into string\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmprmkgbuiv.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmprmkgbuiv.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmprmkgbuiv.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprmkgbuiv.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprmkgbuiv.jl:30\ntest set:\
    \ Error During Test at /tmp/tmprmkgbuiv.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmprmkgbuiv.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprmkgbuiv.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprmkgbuiv.jl:30\ntest set:\
    \ Error During Test at /tmp/tmprmkgbuiv.jl:33\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800219
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        push!(new_words, sort(collect(word)))\n\
    \    end\n    return join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7jt4q6cd.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp7jt4q6cd.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"['H', 'i']\" == \"Hi\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7jt4q6cd.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7jt4q6cd.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7jt4q6cd.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"['e', 'h', 'l', 'l', 'o']\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7jt4q6cd.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7jt4q6cd.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7jt4q6cd.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"['b', 'e', 'm', 'n', 'r', 'u']\" == \"bemnru\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7jt4q6cd.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7jt4q6cd.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7jt4q6cd.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"['a', 'b', 'c', 'd']\" == \"abcd\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7jt4q6cd.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7jt4q6cd.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7jt4q6cd.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"['H', 'e', 'l', 'l', 'o'] ['!', '!',\
    \ '!', 'W', 'd',"
  timestamp: 1659800217
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    return join(sort(split(s)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq6tj_tlw.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpq6tj_tlw.jl:25\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:26\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"number\" == \"bemnru\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:28\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"HelloWorld!!!\" == \"Hello !!!Wdlor\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:30\n  Expression: candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\n  \
    \ Evaluated: \"Hi.HowMisterMyRobot.areisnameyou?\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\nTest Summary:\
    \ | P"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return\
    \ join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_nxhlsig.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp_nxhlsig.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsig.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsi"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s, \" \")\n \
    \   s_split_sorted = [sort(x) for x in s_split]\n    s_split_sorted_joined = join(s_split_sorted,\
    \ \" \")\n    return s_split_sorted_joined\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpxxeyq3_p.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpxxeyq3_p.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::SubString{String})\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n\
    \     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n     @ Main\
    \ /tmp/tmpxxeyq3_p.jl:18\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpxxeyq3_p.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpxxeyq3_p.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpxxeyq3_p.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::SubString{String})\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n\
    \     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n     @ Main\
    \ /tmp/tmpxxeyq3_p.jl:18\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]"
  timestamp: 1659800219
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return\
    \ join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_nxhlsig.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp_nxhlsig.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsig.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsi"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split string into words\n \
    \   words = split(s, \" \")\n    # sort each word\n    for i in 1:length(words)\n\
    \        words[i] = sort(words[i])\n    end\n    # join words back into a string\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp5_hzlt26.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp5_hzlt26.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp5_hzlt26.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5_hzlt26.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5_hzlt26.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp5_hzlt26.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp5_hzlt26.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5_hzlt26.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5_hzlt26.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp5_hzlt2"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split string into words\n \
    \   words = split(s, \" \")\n    # sort each word\n    sorted_words = [sort(word)\
    \ for word in words]\n    # join words\n    return join(sorted_words, \" \")\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp8jusafa0.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp8jusafa0.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmp8jusafa0.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp8jusafa0.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp8jusafa0.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp8jusafa0.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmp8jusafa0.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [in"
  timestamp: 1659800219
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return\
    \ join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_nxhlsig.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp_nxhlsig.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsig.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsi"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s)\n    s_split_sorted\
    \ = [sort(i) for i in s_split]\n    s_joined = join(s_split_sorted)\n    return\
    \ s_joined\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t\
    @test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpoe0o104l.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpoe0o104l.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(i::SubString{String})\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n\
    \     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n     @ Main\
    \ /tmp/tmpoe0o104l.jl:18\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpoe0o104l.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpoe0o104l.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpoe0o104l.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(i::SubString{String})\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n\
    \     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n     @ Main\
    \ /tmp/tmpoe0o104l.jl:18\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]"
  timestamp: 1659800219
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 0
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, r\"\\s+\")\n\
    \    for i in 1:length(words)\n        words[i] = join(sort(collect(words[i])),\
    \ \"\")\n    end\n    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659800216
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s, \" \")\n \
    \   s_split_sorted = [sort(i) for i in s_split]\n    return join(s_split_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp80b736v8.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp80b736v8.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(i::SubString{String})\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n\
    \     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n     @ Main\
    \ /tmp/tmp80b736v8.jl:18\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp80b736v8.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp80b736v8.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp80b736v8.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(i::SubString{String})\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n\
    \     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n     @ Main\
    \ /tmp/tmp80b736v8.jl:18\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]"
  timestamp: 1659800219
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # Split the string into a list\
    \ of words\n    words = split(s)\n    # Create a new list of words\n    new_words\
    \ = []\n    # Iterate over the words\n    for word in words\n        # Sort the\
    \ characters in the word\n        sorted_word = sort(word)\n        # Append the\
    \ sorted word to the new list\n        push!(new_words, sorted_word)\n    end\n\
    \    # Join the new list of words into a string\n    return join(new_words)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpr6fyvu7s.jl:33

    '
  stdout: "test set: Error During Test at /tmp/tmpr6fyvu7s.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpr6fyvu7s.jl:24\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr6fyvu7s.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr6fyvu7s.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpr6fyvu7s.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpr6fyvu7s.jl:24\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr6fyvu7s.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr6fyvu7s.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpr6fyvu7s.jl:38\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800219
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for w in words\n        push!(new_words, sort(collect(w)))\n\
    \    end\n    return join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6win7tmi.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp6win7tmi.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"['H', 'i']\" == \"Hi\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6win7tmi.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6win7tmi.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp6win7tmi.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"['e', 'h', 'l', 'l', 'o']\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6win7tmi.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6win7tmi.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp6win7tmi.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"['b', 'e', 'm', 'n', 'r', 'u']\" == \"bemnru\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6win7tmi.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6win7tmi.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp6win7tmi.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"['a', 'b', 'c', 'd']\" == \"abcd\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6win7tmi.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6win7tmi.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp6win7tmi.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"['H', 'e', 'l', 'l', 'o'] ['!', '!',\
    \ '!', 'W', 'd',"
  timestamp: 1659800218
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return\
    \ join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_nxhlsig.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp_nxhlsig.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsig.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsi"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return join(words)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpezt28vj2.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpezt28vj2.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpezt28vj2.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpezt28vj2.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpezt28vj2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpezt28vj2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpezt28vj2.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpezt28vj2.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpezt28vj2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpezt28vj2.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split the string into words\n\
    \    words = split(s)\n    # sort each word\n    sorted_words = [sort(word) for\
    \ word in words]\n    # join the words back together\n    return join(sorted_words)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpjppq0i1q.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpjppq0i1q.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmpjppq0i1q.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjppq0i1q.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjppq0i1q.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpjppq0i1q.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmpjppq0i1q.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [in"
  timestamp: 1659800220
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 0
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, r\"\\s+\")\n\
    \    for i in 1:length(words)\n        words[i] = join(sort(collect(words[i])),\
    \ \"\")\n    end\n    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659800216
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, ' ')\n    for\
    \ i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, ' ')\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\"\
    ) == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpi0skmcy4.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpi0skmcy4.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:54\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpi0skmcy4.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpi0skmcy4.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpi0skmcy4.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpi0skmcy4.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:54\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpi0skmcy4.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyg"
  timestamp: 1659800220
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    return join(sort(split(s)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq6tj_tlw.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpq6tj_tlw.jl:25\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:26\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"number\" == \"bemnru\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:28\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"HelloWorld!!!\" == \"Hello !!!Wdlor\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:30\n  Expression: candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\n  \
    \ Evaluated: \"Hi.HowMisterMyRobot.areisnameyou?\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\nTest Summary:\
    \ | P"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split the string into words\n\
    \    words = split(s, \" \")\n    # sort each word\n    sorted_words = [sort(word)\
    \ for word in words]\n    # join the words back together\n    return join(sorted_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpenu_d94n.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpenu_d94n.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmpenu_d94n.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpenu_d94n.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpenu_d94n.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpenu_d94n.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmpenu_d94n.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [in"
  timestamp: 1659800221
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return join(words)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpezt28vj2.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpezt28vj2.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpezt28vj2.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpezt28vj2.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpezt28vj2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpezt28vj2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpezt28vj2.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpezt28vj2.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpezt28vj2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpezt28vj2.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        new_words = push!(new_words,\
    \ sort(collect(word)))\n    end\n    join(new_words, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"\
    Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\"\
    ) == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3nsnuzx0.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp3nsnuzx0.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"['H', 'i']\" == \"Hi\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3nsnuzx0.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3nsnuzx0.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3nsnuzx0.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"['e', 'h', 'l', 'l', 'o']\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3nsnuzx0.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3nsnuzx0.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3nsnuzx0.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"['b', 'e', 'm', 'n', 'r', 'u']\" == \"bemnru\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3nsnuzx0.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3nsnuzx0.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3nsnuzx0.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"['a', 'b', 'c', 'd']\" == \"abcd\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3nsnuzx0.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3nsnuzx0.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3nsnuzx0.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"['H', 'e', 'l', 'l', 'o'] ['!', '!',\
    \ '!', 'W', 'd',"
  timestamp: 1659800220
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        new_words = append!(new_words,\
    \ sort(collect(word)))\n    end\n    return join(new_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpko4qacal.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpko4qacal.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"e h l l o\" == \"ehllo\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"b e m n r u\" == \"bemnru\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"a b c d\" == \"abcd\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"H e l l o ! ! ! W d l o r\" == \"Hello\
    \ !!!Wdlor\"\nStacktrace:\n [1] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s)\n    s_split_sorted\
    \ = []\n    for word in s_split\n        push!(s_split_sorted, sort(word))\n \
    \   end\n    return join(s_split_sorted)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpgp0c6sxl.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpgp0c6sxl.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpgp0c6sxl.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgp0c6sxl.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgp0c6sxl.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpgp0c6sxl.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpgp0c6sxl.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgp0c6sxl.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgp0c6sxl.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpgp0c6sxl.jl:31\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800221
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s)\n    for i\
    \ in 1:length(s_split)\n        s_split[i] = sort(s_split[i])\n    end\n    return\
    \ join(s_split)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp4xt57wxu.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp4xt57wxu.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp4xt57wxu.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4xt57wxu.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4xt57wxu.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp4xt57wxu.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp4xt57wxu.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4xt57wxu.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4xt57wxu.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp4xt57wxu.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s)\n    for i\
    \ in 1:length(s_split)\n        s_split[i] = sort(s_split[i])\n    end\n    return\
    \ join(s_split)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp4xt57wxu.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp4xt57wxu.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp4xt57wxu.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4xt57wxu.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4xt57wxu.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp4xt57wxu.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp4xt57wxu.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4xt57wxu.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4xt57wxu.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp4xt57wxu.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    new_words\
    \ = []\n    for word in words\n        new_words = append!(new_words, sort(collect(word)))\n\
    \    end\n    return join(new_words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp33zc3x89.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp33zc3x89.jl:33\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated: \"Hello!!!Wdlor\" == \"\
    Hello !!!Wdlor\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp33zc3x89.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp33zc3x89.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp33zc3x89.jl:35\n  Expression: candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\n  \
    \ Evaluated: \".HiMyaemnisMeirst.RbootHowaer?ouy\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp33zc3x89.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp33zc3x89.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     2      7\n"
  timestamp: 1659800220
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        new_words = append!(new_words,\
    \ sort(collect(word)))\n    end\n    return join(new_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpko4qacal.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpko4qacal.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"e h l l o\" == \"ehllo\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"b e m n r u\" == \"bemnru\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"a b c d\" == \"abcd\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"H e l l o ! ! ! W d l o r\" == \"Hello\
    \ !!!Wdlor\"\nStacktrace:\n [1] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        new_words = append!(new_words,\
    \ sort(collect(word)))\n    end\n    return join(new_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpko4qacal.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpko4qacal.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"e h l l o\" == \"ehllo\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"b e m n r u\" == \"bemnru\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"a b c d\" == \"abcd\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"H e l l o ! ! ! W d l o r\" == \"Hello\
    \ !!!Wdlor\"\nStacktrace:\n [1] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # Split string into words\n \
    \   words = split(s, \" \")\n    # Sort each word\n    for i in 1:length(words)\n\
    \        words[i] = sort(words[i])\n    end\n    # Join words back together\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp8iftc7d4.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp8iftc7d4.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp8iftc7d4.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8iftc7d4.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8iftc7d4.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp8iftc7d4.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp8iftc7d4.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8iftc7d4.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8iftc7d4.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp8iftc7d4.jl:33\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800221
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 0
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s, \" \")\n \
    \   for i in 1:length(s_split)\n        s_split[i] = join(sort(collect(s_split[i])),\
    \ \"\")\n    end\n    return join(s_split, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t\
    @test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"\
    bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"Hello\
    \ World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659800218
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s, \" \")\n \
    \   for i in 1:length(s_split)\n        s_split[i] = sort(s_split[i])\n    end\n\
    \    return join(s_split, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpbtv3xex8.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpbtv3xex8.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpbtv3xex8.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbtv3xex8.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbtv3xex8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpbtv3xex8.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpbtv3xex8.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbtv3xex8.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbtv3xex8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpbtv3xex8.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    join(words)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpq9opfkge.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpq9opfkge.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:54\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpq9opfkge.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpq9opfkge.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpq9opfkge.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpq9opfkge.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:54\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpq9opfkge.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyg"
  timestamp: 1659800222
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split the string into words\n\
    \    words = split(s, \" \")\n    # sort each word\n    for i in 1:length(words)\n\
    \        words[i] = sort(words[i])\n    end\n    # join the words back into a\
    \ string\n    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpu7_36asu.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpu7_36asu.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpu7_36asu.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu7_36asu.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu7_36asu.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpu7_36asu.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpu7_36asu.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu7_36asu.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu7_36asu.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpu7_36asu.jl:33\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800222
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        new_words = push!(new_words,\
    \ sort(collect(word)))\n    end\n    return join(new_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzwf6p27t.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpzwf6p27t.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"['H', 'i']\" == \"Hi\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"['e', 'h', 'l', 'l', 'o']\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"['b', 'e', 'm', 'n', 'r', 'u']\" == \"bemnru\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"['a', 'b', 'c', 'd']\" == \"abcd\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"['H', 'e', "
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        new_words = append!(new_words,\
    \ sort(collect(word)))\n    end\n    return join(new_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpko4qacal.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpko4qacal.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"e h l l o\" == \"ehllo\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"b e m n r u\" == \"bemnru\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"a b c d\" == \"abcd\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"H e l l o ! ! ! W d l o r\" == \"Hello\
    \ !!!Wdlor\"\nStacktrace:\n [1] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # Split the string into words\n\
    \    words = split(s, \" \")\n    # Sort the characters of each word\n    for\
    \ i = 1:length(words)\n        words[i] = sort(words[i])\n    end\n    # Join\
    \ the words back together\n    return join(words, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\"\
    )\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") ==\
    \ \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpr6zbidqf.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpr6zbidqf.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpr6zbidqf.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr6zbidqf.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr6zbidqf.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpr6zbidqf.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpr6zbidqf.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr6zbidqf.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr6zbidqf.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpr6zbidqf.jl:33\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800222
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s_split = split(s, \" \")\n \
    \   for i in 1:length(s_split)\n        s_split[i] = sort(s_split[i])\n    end\n\
    \    return join(s_split, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpbtv3xex8.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpbtv3xex8.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpbtv3xex8.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbtv3xex8.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbtv3xex8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpbtv3xex8.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpbtv3xex8.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbtv3xex8.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbtv3xex8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpbtv3xex8.jl:30\n  Test threw exception\n  Expression:\
    \ candi"
  timestamp: 1659800215
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"

language: jl
name: HumanEval_86_anti_shuffle
results:
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split string into words\n \
    \   words = split(s, \" \")\n    # sort each word\n    for i in 1:length(words)\n\
    \        words[i] = sort(words[i])\n    end\n    # join words back into a string\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp5_hzlt26.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp5_hzlt26.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp5_hzlt26.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5_hzlt26.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5_hzlt26.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp5_hzlt26.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp5_hzlt26.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5_hzlt26.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5_hzlt26.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp5_hzlt2"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # split the string into words\n\
    \    words = split(s, \" \")\n    # sort each word\n    for i in 1:length(words)\n\
    \        words[i] = sort(words[i])\n    end\n    # join the words back together\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp3qz97m9r.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp3qz97m9r.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp3qz97m9r.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3qz97m9r.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3qz97m9r.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp3qz97m9r.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp3qz97m9r.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3qz97m9r.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3qz97m9r.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp3qz97m9"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        new_words = append!(new_words,\
    \ sort(collect(word)))\n    end\n    return join(new_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpko4qacal.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpko4qacal.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"e h l l o\" == \"ehllo\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"b e m n r u\" == \"bemnru\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"a b c d\" == \"abcd\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko4qacal.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko4qacal.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpko4qacal.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"H e l l o ! ! ! W d l o r\" == \"Hello\
    \ !!!Wdlor\"\nStacktrace:\n [1] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n    return\
    \ join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_nxhlsig.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp_nxhlsig.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsig.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp_nxhlsig.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nxhlsig.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nxhlsig.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_nxhlsi"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s = split(s, \" \")\n    for\
    \ i in 1:length(s)\n        s[i] = sort(s[i])\n    end\n    return join(s, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpon6xlg7y.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpon6xlg7y.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpon6xlg7y.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpon6xlg7y.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpon6xlg7y.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpon6xlg7y.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpon6xlg7y.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpon6xlg7y.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpon6xlg7y.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpon6xlg7"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    new_s = \"\"\n    for word in\
    \ split(s)\n        new_s *= join(sort(collect(word)))\n        new_s *= \" \"\
    \n    end\n    return new_s\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\"\
    ) == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpv9xz21vj.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpv9xz21vj.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"Hi \" == \"Hi\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv9xz21vj.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9xz21vj.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpv9xz21vj.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"ehllo \" == \"ehllo\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv9xz21vj.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9xz21vj.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpv9xz21vj.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"bemnru \" == \"bemnru\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv9xz21vj.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9xz21vj.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpv9xz21vj.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"abcd \" == \"abcd\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpv9xz21vj.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9xz21vj.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpv9xz21vj.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"Hello !!!Wdlor \" == \"Hello !!!Wdlor\"\
    \nStacktrace:\n [1] macro expansion\n   @ "
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # Split the string into words\n\
    \    words = split(s)\n    # Sort each word\n    sorted_words = [sort(word) for\
    \ word in words]\n    # Join the words back into a string\n    return join(sorted_words)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpsunfoevo.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpsunfoevo.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmpsunfoevo.jl:20\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpsunfoevo.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpsunfoevo.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpsunfoevo.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(word::SubString{String})\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] anti_shuffle(s::String)\n \
    \    @ Main /tmp/tmpsunfoevo.jl:20\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/sha"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # convert string to array of\
    \ characters\n    s_array = collect(s)\n    # find the index of the first space\n\
    \    first_space = findfirst(s_array, \" \")\n    # if no space, return the sorted\
    \ string\n    if first_space == nothing\n        return sort(s)\n    end\n   \
    \ # if there is a space, split the string into two parts\n    # and recursively\
    \ call the function on each part\n    # then return the concatenation of the two\
    \ parts\n    return anti_shuffle(join(s_array[1:first_space-1])) * \" \" * anti_shuffle(join(s_array[first_space+1:end]))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmph8kmoxzb.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmph8kmoxzb.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ findfirst(::Vector{Char}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmph8kmoxzb.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph8kmoxzb.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph8kmoxzb.jl:34\ntest set:\
    \ Error During Test at /tmp/tmph8kmoxzb.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching findfirst(::Vector{Char},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmph8kmoxzb.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph8kmoxzb.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph8kmoxzb.jl:34\ntest set:\
    \ Error During T"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        new_words = push!(new_words,\
    \ sort(collect(word)))\n    end\n    return join(new_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzwf6p27t.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpzwf6p27t.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"['H', 'i']\" == \"Hi\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"['e', 'h', 'l', 'l', 'o']\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"['b', 'e', 'm', 'n', 'r', 'u']\" == \"bemnru\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"['a', 'b', 'c', 'd']\" == \"abcd\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwf6p27t.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwf6p27t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzwf6p27t.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"['H', 'e', "
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    for i in\
    \ 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n    return\
    \ join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp35t4l8bq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp35t4l8bq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp35t4l8bq.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp35t4l8bq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp35t4l8bq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmp35t4l8bq.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n    end\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftkyok4v.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpftkyok4v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftkyok4v.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftkyok4v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpftkyok4v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\n  \
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] anti_shuffle(s::String)\n   \
    \  @ Main /tmp/tmpftkyok4v.jl:19\n   [3] ma"
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    return join(sort(split(s)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq6tj_tlw.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpq6tj_tlw.jl:25\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:26\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"number\" == \"bemnru\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:28\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"HelloWorld!!!\" == \"Hello !!!Wdlor\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq6tj_tlw.jl:30\n  Expression: candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\n  \
    \ Evaluated: \"Hi.HowMisterMyRobot.areisnameyou?\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6tj_tlw.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6tj_tlw.jl:23\nTest Summary:\
    \ | P"

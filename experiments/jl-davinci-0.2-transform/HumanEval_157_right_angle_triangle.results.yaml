language: jl
name: HumanEval_157_right_angle_triangle
results:
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    return (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2)\
    \ || (b^2 + c^2 == a^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a^2 + b^2 == c^2 || a^2 + c^2 == b^2 || b^2\
    \ + c^2 == a^2\n        return true\n    else\n        return false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2)\
    \ || (b^2 + c^2 == a^2)\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a^2 + b^2 == c^2 || a^2 + c^2 == b^2 || b^2\
    \ + c^2 == a^2\n        return true\n    else\n        return false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    # YOUR CODE HERE\n    return a^2 + b^2 == c^2\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvqo8lrkl.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpvqo8lrkl.jl:23\n  Expression: candidate(10,\
    \ 6, 8) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvqo8lrkl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvqo8lrkl.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     1     11\n"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a^2 + b^2 == c^2\n        return true\n \
    \   else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptqkjb_ei.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmptqkjb_ei.jl:26\n  Expression: candidate(10,\
    \ 6, 8) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptqkjb_ei.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptqkjb_ei.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     1     11\n"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a^2 + b^2 == c^2\n        return true\n \
    \   else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptqkjb_ei.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmptqkjb_ei.jl:26\n  Expression: candidate(10,\
    \ 6, 8) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptqkjb_ei.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptqkjb_ei.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     1     11\n"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a^2 + b^2 == c^2\n        return true\n \
    \   else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptqkjb_ei.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmptqkjb_ei.jl:26\n  Expression: candidate(10,\
    \ 6, 8) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptqkjb_ei.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptqkjb_ei.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     1     11\n"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b && a > c\n        return a^2 == b^2\
    \ + c^2\n    elseif b > a && b > c\n        return b^2 == a^2 + c^2\n    elseif\
    \ c > a && c > b\n        return c^2 == a^2 + b^2\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5)\
    \ == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8)\
    \ == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25)\
    \ == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13)\
    \ == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73)\
    \ == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpne57s7zb.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpne57s7zb.jl:29\n  Test threw exception\n\
    \  Expression: candidate(2, 2, 2) == false\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] right_angle_triangle(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpne57s7zb.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpne57s7zb.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpne57s7zb.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpne57s7zb.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(1, 1, 1) == false\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] right_angle_triangle(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpne57s7zb.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpne57s7zb.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    return a^2 + b^2 == c^2\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5)\
    \ == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8)\
    \ == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25)\
    \ == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13)\
    \ == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73)\
    \ == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnr7nbx9b.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpnr7nbx9b.jl:22\n  Expression: candidate(10,\
    \ 6, 8) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnr7nbx9b.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnr7nbx9b.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     1     11\n"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a^2 + b^2 == c^2\n        return true\n \
    \   else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptqkjb_ei.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmptqkjb_ei.jl:26\n  Expression: candidate(10,\
    \ 6, 8) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptqkjb_ei.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptqkjb_ei.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     1     11\n"
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    return (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2)\
    \ || (b^2 + c^2 == a^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b && a > c\n        return a^2 == b^2\
    \ + c^2\n    elseif b > a && b > c\n        return b^2 == a^2 + c^2\n    else\n\
    \        return c^2 == a^2 + b^2\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b && a > c\n        return a^2 == b^2\
    \ + c^2\n    elseif b > a && b > c\n        return b^2 == a^2 + c^2\n    else\n\
    \        return c^2 == a^2 + b^2\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a^2 + b^2 == c^2 || a^2 + c^2 == b^2 || b^2\
    \ + c^2 == a^2\n        return true\n    else\n        return false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b && a > c\n        if a^2 == b^2 + c^2\n\
    \            return true\n        else\n            return false\n        end\n\
    \    elseif b > a && b > c\n        if b^2 == a^2 + c^2\n            return true\n\
    \        else\n            return false\n        end\n    elseif c > a && c >\
    \ b\n        if c^2 == a^2 + b^2\n            return true\n        else\n    \
    \        return false\n        end\n    else\n        return false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a^2 + b^2 == c^2\n        return true\n \
    \   else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptqkjb_ei.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmptqkjb_ei.jl:26\n  Expression: candidate(10,\
    \ 6, 8) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptqkjb_ei.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptqkjb_ei.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     1     11\n"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a^2 + b^2 == c^2\n        return true\n \
    \   else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptqkjb_ei.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmptqkjb_ei.jl:26\n  Expression: candidate(10,\
    \ 6, 8) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptqkjb_ei.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptqkjb_ei.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     1     11\n"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a^2 + b^2 == c^2\n        return true\n \
    \   else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptqkjb_ei.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmptqkjb_ei.jl:26\n  Expression: candidate(10,\
    \ 6, 8) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptqkjb_ei.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptqkjb_ei.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     1     11\n"
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a^2 + b^2 == c^2 || a^2 + c^2 == b^2 || b^2\
    \ + c^2 == a^2\n        return true\n    else\n        return false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''

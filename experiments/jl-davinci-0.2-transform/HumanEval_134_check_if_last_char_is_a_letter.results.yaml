language: jl
name: HumanEval_134_check_if_last_char_is_a_letter
results:
- exit_code: 0
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isletter(txt[end])\n\
    \        if length(txt) == 1\n            return true\n        end\n        if\
    \ txt[end-1] == ' '\n            return true\n        end\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\n\
    \        if length(txt) == 1\n            return true\n        end\n        if\
    \ !isalpha(txt[end-1])\n            return true\n        end\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpg6opnw8g.jl:33

    '
  stdout: "test set: Error During Test at /tmp/tmpg6opnw8g.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"apple\") == false\n  UndefVarError: isalpha not defined\n\
    \  Stacktrace:\n   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main\
    \ /tmp/tmpg6opnw8g.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg6opnw8g.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg6opnw8g.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpg6opnw8g.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"apple pi e\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmpg6opnw8g.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg6opnw8g.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg6opnw8g.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpg6opnw8g.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"eeeee\") == false\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmpg6opnw8g.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg6opnw8g.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg6opnw8g.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpg6opnw8g.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"A\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmpg6opnw8g.jl"
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpn7yai0g2.jl:21\nin expression\
    \ starting at /tmp/tmpn7yai0g2.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp80sbnx3k.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmp80sbnx3k.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"apple\") == false\n  UndefVarError: isalpha not defined\n\
    \  Stacktrace:\n   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main\
    \ /tmp/tmp80sbnx3k.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80sbnx3k.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80sbnx3k.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp80sbnx3k.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"apple pi e\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmp80sbnx3k.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80sbnx3k.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80sbnx3k.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp80sbnx3k.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"eeeee\") == false\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmp80sbnx3k.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80sbnx3k.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80sbnx3k.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp80sbnx3k.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"A\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmp80sbnx3k.jl"
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp80sbnx3k.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmp80sbnx3k.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"apple\") == false\n  UndefVarError: isalpha not defined\n\
    \  Stacktrace:\n   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main\
    \ /tmp/tmp80sbnx3k.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80sbnx3k.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80sbnx3k.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp80sbnx3k.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"apple pi e\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmp80sbnx3k.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80sbnx3k.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80sbnx3k.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp80sbnx3k.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"eeeee\") == false\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmp80sbnx3k.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80sbnx3k.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80sbnx3k.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp80sbnx3k.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"A\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmp80sbnx3k.jl"
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpetbv11nb.jl:24\nin expression\
    \ starting at /tmp/tmpetbv11nb.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        if txt[end-1] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            return false\n        else\n            return true\n        end\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpziu3idwt.jl:21\nin expression\
    \ starting at /tmp/tmpziu3idwt.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    txt = strip(txt)\n    if length(txt) == 0\n        return false\n    end\n\
    \    if isalpha(txt[end]) && !isalpha(txt[end-1])\n        return true\n    else\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\t\
    @test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpgwnywtsi.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpgwnywtsi.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"apple\") == false\n  UndefVarError: isalpha not defined\n\
    \  Stacktrace:\n   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main\
    \ /tmp/tmpgwnywtsi.jl:22\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgwnywtsi.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgwnywtsi.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpgwnywtsi.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"apple pi e\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmpgwnywtsi.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgwnywtsi.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgwnywtsi.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpgwnywtsi.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"eeeee\") == false\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmpgwnywtsi.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgwnywtsi.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgwnywtsi.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpgwnywtsi.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"A\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmpgwnywtsi.jl"
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    txt = txt[end:-1:1]\n\
    \    if txt[1] == \" \"\n        return false\n    end\n    for i in txt\n   \
    \     if i == \" \"\n            return true\n        end\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz8mvim75.jl:34

    '
  stdout: "test set: Test Failed at /tmp/tmpz8mvim75.jl:38\n  Expression: candidate(\"\
    apple pi e\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz8mvim75.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz8mvim75.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpz8mvim75.jl:40\n  Expression: candidate(\"A\") == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz8mvim75.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz8mvim75.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpetbv11nb.jl:24\nin expression\
    \ starting at /tmp/tmpetbv11nb.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp80sbnx3k.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmp80sbnx3k.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"apple\") == false\n  UndefVarError: isalpha not defined\n\
    \  Stacktrace:\n   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main\
    \ /tmp/tmp80sbnx3k.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80sbnx3k.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80sbnx3k.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp80sbnx3k.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"apple pi e\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmp80sbnx3k.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80sbnx3k.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80sbnx3k.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp80sbnx3k.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"eeeee\") == false\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmp80sbnx3k.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80sbnx3k.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80sbnx3k.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp80sbnx3k.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"A\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmp80sbnx3k.jl"
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp80sbnx3k.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmp80sbnx3k.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"apple\") == false\n  UndefVarError: isalpha not defined\n\
    \  Stacktrace:\n   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main\
    \ /tmp/tmp80sbnx3k.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80sbnx3k.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80sbnx3k.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp80sbnx3k.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"apple pi e\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmp80sbnx3k.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80sbnx3k.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80sbnx3k.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp80sbnx3k.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"eeeee\") == false\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmp80sbnx3k.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80sbnx3k.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80sbnx3k.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp80sbnx3k.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"A\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmp80sbnx3k.jl"
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpn7yai0g2.jl:21\nin expression\
    \ starting at /tmp/tmpn7yai0g2.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpn7yai0g2.jl:21\nin expression\
    \ starting at /tmp/tmpn7yai0g2.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        if txt[end-1] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            return false\n        else\n            return true\n        end\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpziu3idwt.jl:21\nin expression\
    \ starting at /tmp/tmpziu3idwt.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyz'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp9iiq__qn.jl:24\nin expression\
    \ starting at /tmp/tmp9iiq__qn.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    txt = txt[end]\n    if txt == \" \"\n        return false\n    else\n\
    \        return true\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\t\
    @test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 7 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpyaha1_zl.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpyaha1_zl.jl:30\n  Expression: candidate(\"\
    apple\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyaha1_zl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyaha1_zl.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpyaha1_zl.jl:32\n  Expression: candidate(\"eeeee\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyaha1_zl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyaha1_zl.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpyaha1_zl.jl:34\n  Expression: candidate(\"Pumpkin pie \")\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyaha1_zl.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyaha1_zl.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpyaha1_zl.jl:35\n  Expression: candidate(\"Pumpkin pie 1\"\
    ) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyaha1_zl.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyaha1_zl.jl:29\ntest set: Error\
    \ During Test at /tmp/tmpyaha1_zl.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == false\n  BoundsError: attempt to access empty String at index\
    \ [0]\n  Stacktrace:\n   [1] checkbounds"
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpn7yai0g2.jl:21\nin expression\
    \ starting at /tmp/tmpn7yai0g2.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    return txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\
    \ && !(txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ' && txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"\
    apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"\
    eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin\
    \ pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpe_ej12jw.jl:18\nin expression\
    \ starting at /tmp/tmpe_ej12jw.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Create a function that returns True if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and False otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpn7yai0g2.jl:21\nin expression\
    \ starting at /tmp/tmpn7yai0g2.jl:21\n"
  stdout: ''

name: HumanEval_79_decimal_to_binary
language: jl
prompt: "\"\"\"You will be given a number in decimal form and your task is to convert\
  \ it to\n    binary format. The function should return a string, with each character\
  \ representing a binary\n    number. Each character in the string will be '0' or\
  \ '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
  \ and at the end of the string.\n    The extra characters are there to help with\
  \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\n\
  \    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
  \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
  \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
completions: ["    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend", "    binary = \"\"\n    while decimal > 0\n       \
    \ binary = string(decimal % 2) * binary\n        decimal = decimal \xF7 2\n  \
    \  end\n    return \"db\" * binary * \"db\"\nend", "    # your code here\nend",
  "    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend", "    binary = \"db\"\n    while decimal > 0\n     \
    \   binary = binary * decimal % 2\n        decimal = decimal \xF7 2\n    end\n\
    \    return binary * \"db\"\nend", "    binary = \"db\"\n    while decimal > 0\n\
    \        binary = binary * string(decimal % 2)\n        decimal = decimal \xF7\
    \ 2\n    end\n    return binary * \"db\"\nend", "    binary = \"db\"\n    while\
    \ decimal > 0\n        binary = binary * string(decimal % 2)\n        decimal\
    \ = decimal \xF7 2\n    end\n    binary = binary * \"db\"\n    return binary\n\
    end", "    binary_string = \"db\"\n    while decimal > 0\n        binary_string\
    \ = binary_string * string(decimal % 2)\n        decimal = decimal \xF7 2\n  \
    \  end\n    binary_string = binary_string * \"db\"\n    return binary_string\n\
    end", "    binary = \"db\"\n    while decimal > 0\n        binary = binary * decimal\
    \ % 2\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend", "    binary = \"db\"\n    while decimal > 0\n     \
    \   binary = binary * string(decimal % 2)\n        decimal = decimal \xF7 2\n\
    \    end\n    return binary * \"db\"\nend", "    binary = \"db\"\n    while decimal\
    \ > 0\n        binary = binary * string(decimal % 2)\n        decimal = decimal\
    \ \xF7 2\n    end\n    return binary * \"db\"\nend", "    binary = \"db\"\n  \
    \  while decimal > 0\n        binary = binary * string(decimal % 2)\n        decimal\
    \ = decimal \xF7 2\n    end\n    binary = binary * \"db\"\n    return binary\n\
    end", "    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end", "    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end", "    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return reverse(binary)\
    \ * \"db\"\nend", "    binary = \"\"\n    while decimal > 0\n        binary =\
    \ string(decimal % 2) * binary\n        decimal = decimal \xF7 2\n    end\n  \
    \  return \"db\" * binary * \"db\"\nend", "    binary = \"db\"\n    while decimal\
    \ > 0\n        binary = binary * decimal % 2\n        decimal = decimal \xF7 2\n\
    \    end\n    binary = binary * \"db\"\n    return binary\nend", "    binary =\
    \ \"db\"\n    while decimal > 0\n        binary = binary * string(decimal % 2)\n\
    \        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\n   \
    \ return binary\nend", "    binary = \"db\"\n    while decimal > 0\n        binary\
    \ = binary * string(decimal % 2)\n        decimal = decimal \xF7 2\n    end\n\
    \    binary = binary * \"db\"\n    return binary\nend", "    binary = \"db\"\n\
    \    while decimal > 0\n        binary = binary * string(decimal % 2)\n      \
    \  decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

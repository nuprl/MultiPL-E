language: jl
name: HumanEval_3_below_zero
results:
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ i in operations\n        balance += i\n        if balance < 0\n            return\
    \ true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([])) == false)\n\t\
    @test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1, 2, -4,\
    \ 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ op in operations\n        balance += op\n        if balance < 0\n          \
    \  return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([])) == false)\n\
    \t@test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1, 2, -4,\
    \ 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ op in operations\n        balance += op\n        if balance < 0\n          \
    \  return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([])) == false)\n\
    \t@test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1, 2, -4,\
    \ 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ i in operations\n        balance += i\n        if balance < 0\n            return\
    \ true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([])) == false)\n\t\
    @test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1, 2, -4,\
    \ 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ operation in operations\n        balance += operation\n        if balance <\
    \ 0\n            return true\n        end\n    end\n    return false\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([]))\
    \ == false)\n\t@test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1,\
    \ 2, -4, 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ i in operations\n        balance += i\n        if balance < 0\n            return\
    \ true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([])) == false)\n\t\
    @test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1, 2, -4,\
    \ 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ i in operations\n        balance += i\n        if balance < 0\n            return\
    \ true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([])) == false)\n\t\
    @test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1, 2, -4,\
    \ 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ op in operations\n        balance += op\n        if balance < 0\n          \
    \  return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([])) == false)\n\
    \t@test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1, 2, -4,\
    \ 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ op in operations\n        balance += op\n        if balance < 0\n          \
    \  return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([])) == false)\n\
    \t@test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1, 2, -4,\
    \ 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ operation in operations\n        balance += operation\n        if balance <\
    \ 0\n            return true\n        end\n    end\n    return false\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([]))\
    \ == false)\n\t@test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1,\
    \ 2, -4, 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ operation in operations\n        balance += operation\n        if balance <\
    \ 0\n            return true\n        end\n    end\n    return false\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([]))\
    \ == false)\n\t@test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1,\
    \ 2, -4, 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ i in operations\n        balance += i\n        if balance < 0\n            return\
    \ true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([])) == false)\n\t\
    @test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1, 2, -4,\
    \ 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ i in operations\n        balance += i\n        if balance < 0\n            return\
    \ true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([])) == false)\n\t\
    @test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1, 2, -4,\
    \ 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ operation in operations\n        balance += operation\n        if balance <\
    \ 0\n            return true\n        end\n    end\n    return false\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([]))\
    \ == false)\n\t@test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1,\
    \ 2, -4, 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ operation in operations\n        balance += operation\n        if balance <\
    \ 0\n            return true\n        end\n    end\n    return false\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([]))\
    \ == false)\n\t@test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1,\
    \ 2, -4, 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ op in operations\n        balance += op\n        if balance < 0\n          \
    \  return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([])) == false)\n\
    \t@test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1, 2, -4,\
    \ 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ op in operations\n        balance += op\n        if balance < 0\n          \
    \  return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([])) == false)\n\
    \t@test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1, 2, -4,\
    \ 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ operation in operations\n        balance += operation\n        if balance <\
    \ 0\n            return true\n        end\n    end\n    return false\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([]))\
    \ == false)\n\t@test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1,\
    \ 2, -4, 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ operation in operations\n        balance += operation\n        if balance <\
    \ 0\n            return true\n        end\n    end\n    return false\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([]))\
    \ == false)\n\t@test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1,\
    \ 2, -4, 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" You're given a list of deposit and withdrawal operations on a bank\
    \ account that starts with\n    zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\n    at that point function\
    \ should return True. Otherwise it should return False.\n    >>> below_zero([1,\
    \ 2, 3])\n    false\n    >>> below_zero([1, 2, -4, 5])\n    true\n    \"\"\"\n\
    function below_zero(operations::Vector{Int64})::Bool \n    balance = 0\n    for\
    \ op in operations\n        balance += op\n        if balance < 0\n          \
    \  return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = below_zero;\n\t@test(candidate(Vector{Int64}([])) == false)\n\
    \t@test(candidate([1, 2, -3, 1, 2, -3]) == false)\n\t@test(candidate([1, 2, -4,\
    \ 5, 6]) == true)\n\t@test(candidate([1, -1, 2, -2, 5, -5, 4, -4]) == false)\n\
    \t@test(candidate([1, -1, 2, -2, 5, -5, 4, -5]) == true)\n\t@test(candidate([1,\
    \ -2, 2, -2, 5, -5, 4, -4]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''

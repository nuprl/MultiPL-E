language: jl
name: HumanEval_72_will_it_fly
results:
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if ispalindrome(q) == true\n            return true\n        else\n\
    \            return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpjk7ovn4w.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpjk7ovn4w.jl:38\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpjk7ovn4w.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjk7ovn4w.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjk7ovn4w.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpjk7ovn4w.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpjk7ovn4w.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjk7ovn4w.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjk7ovn4w.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpjk7ovn4w.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpjk7ovn4w.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjk7ovn4w.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjk7ovn4w.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpjk7ovn4w.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && is_palindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp_tcceazz.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp_tcceazz.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp_tcceazz.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_tcceazz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_tcceazz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    # if the sum of the elements is less than the maximum\
    \ possible weight\n    if sum(q) <= w\n        # if the list is palindromic\n\
    \        if ispalindrome(q)\n            return true\n        else\n         \
    \   return false\n        end\n    else\n        return false\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3,\
    \ 2, 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpnseepijk.jl:37

    '
  stdout: "test set: Error During Test at /tmp/tmpnseepijk.jl:40\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpnseepijk.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnseepijk.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnseepijk.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpnseepijk.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpnseepijk.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnseepijk.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnseepijk.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpnseepijk.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpnseepijk.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnseepijk.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnseepijk.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpnseepijk.jl:44\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return isbalanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpksd070hy.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpksd070hy.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: isbalanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpksd070hy.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd070hy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd070hy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: isbalanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd07"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if ispalindrome(q) == true\n            return true\n        else\n\
    \            return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpjk7ovn4w.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpjk7ovn4w.jl:38\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpjk7ovn4w.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjk7ovn4w.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjk7ovn4w.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpjk7ovn4w.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpjk7ovn4w.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjk7ovn4w.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjk7ovn4w.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpjk7ovn4w.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpjk7ovn4w.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjk7ovn4w.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjk7ovn4w.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpjk7ovn4w.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\
    \t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t\
    @test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\
    \t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7x7d5vv0.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp7x7d5vv0.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7x7d5vv0.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x7d5vv0.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x7d5vv0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7x7d5vv0.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7x7d5vv0.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x7d5vv0.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x7d5vv0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7x7d5vv0.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7x7d5vv0.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x7d5vv0.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x7d5vv0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7x7d5vv0.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 0
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if q == reverse(q)\n            return true\n        else\n  \
    \          return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if ispalindrome(q)\n            return true\n        else\n  \
    \          return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpij1rat5o.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpij1rat5o.jl:38\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpij1rat5o.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpij1rat5o.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpij1rat5o.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\
    \t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t\
    @test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\
    \t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7x7d5vv0.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp7x7d5vv0.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7x7d5vv0.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x7d5vv0.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x7d5vv0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7x7d5vv0.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7x7d5vv0.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x7d5vv0.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x7d5vv0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7x7d5vv0.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7x7d5vv0.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x7d5vv0.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x7d5vv0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7x7d5vv0.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && is_palindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp_tcceazz.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp_tcceazz.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp_tcceazz.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_tcceazz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_tcceazz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return isbalanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpksd070hy.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpksd070hy.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: isbalanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpksd070hy.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd070hy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd070hy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: isbalanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd07"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    else\n      \
    \  return ispalindrome(q)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpamx3c9x_.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpamx3c9x_.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpamx3c9x_.jl:26\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpamx3c9x_.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpamx3c9x_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpamx3c9x_.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpamx3c9x_.jl:26\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpamx3c9x_.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpamx3c9x_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpamx3c9x_.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpamx3c9x_.jl:26\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpamx3c9x_.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpamx3c9x_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpamx3c9x_.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpamx3c9x_.jl:26\n\
    \   [2] macro"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif ispalindrome(q)\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp4ltsn6hj.jl:33

    '
  stdout: "test set: Error During Test at /tmp/tmp4ltsn6hj.jl:36\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp4ltsn6hj.jl:25\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ltsn6hj.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ltsn6hj.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp4ltsn6hj.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4ltsn6hj.jl:25\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ltsn6hj.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ltsn6hj.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp4ltsn6hj.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4ltsn6hj.jl:25\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ltsn6hj.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ltsn6hj.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp4ltsn6hj.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4ltsn6hj.jl:25\n\
    \   [2] macro"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w\n        if ispalindrome(q)\n         \
    \   return true\n        else\n            return false\n        end\n    else\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpfeizvr1b.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpfeizvr1b.jl:38\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpfeizvr1b.jl:24\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfeizvr1b.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfeizvr1b.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpfeizvr1b.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfeizvr1b.jl:24\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfeizvr1b.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfeizvr1b.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpfeizvr1b.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfeizvr1b.jl:24\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfeizvr1b.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfeizvr1b.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpfeizvr1b.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfeizvr1b.jl:24\n\
    \   [2] macro"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return isbalanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpksd070hy.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpksd070hy.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: isbalanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpksd070hy.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd070hy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd070hy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: isbalanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd07"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        return true\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk2namefk.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmpk2namefk.jl:35\n  Expression: candidate([1,\
    \ 2], 5) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk2namefk.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpk2namefk.jl:33\ntest set: Test Failed at /tmp/tmpk2namefk.jl:38\n\
    \  Expression: candidate([1, 2, 3], 6) == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk2namefk.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk2namefk.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659800394
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if ispalindrome(q)\n            return true\n        else\n  \
    \          return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpij1rat5o.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpij1rat5o.jl:38\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpij1rat5o.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpij1rat5o.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpij1rat5o.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1b9qwk.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp7v1b9qwk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7v1b9qwk.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] m"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpfo6ocxai.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpfo6ocxai.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpfo6ocxai.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfo6ocxai.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfo6ocxai.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpfo6ocxai.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfo6ocxai.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfo6ocxai.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfo6ocxai.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpfo6ocxai.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfo6ocxai.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfo6ocxai.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfo6ocxai.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpfo6ocxai.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfo6ocxai.jl:23\n\
    \   [2] macro"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1b9qwk.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp7v1b9qwk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7v1b9qwk.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] m"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    # your code here\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpuo8tq8k9.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpuo8tq8k9.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n    \
    \ @ Main /tmp/tmpuo8tq8k9.jl:24\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuo8tq8k9.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuo8tq8k9.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpuo8tq8k9.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n    \
    \ @ Main /tmp/tmpuo8tq8k9.jl:24\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuo8tq8k9.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuo8tq8k9.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpuo8tq8k9."
  timestamp: 1659800396
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 0
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
  timestamp: 1659800393
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1b9qwk.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp7v1b9qwk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7v1b9qwk.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] m"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1b9qwk.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp7v1b9qwk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7v1b9qwk.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] m"
  timestamp: 1659800395
- exit_code: 0
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && q == reverse(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
  timestamp: 1659800393
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpgcdlw1iy.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpgcdlw1iy.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpgcdlw1iy.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcdlw1iy.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcdlw1iy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcdlw1iy.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgcdlw1iy.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcdlw1iy.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcdlw1iy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcdlw1iy.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgcdlw1iy.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcdlw1iy.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcdlw1iy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcdlw1iy.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgcdlw1iy.jl:23\n\
    \   [2] macro"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if ispalindrome(q)\n            return true\n        else\n  \
    \          return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpij1rat5o.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpij1rat5o.jl:38\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpij1rat5o.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpij1rat5o.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpij1rat5o.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpgcdlw1iy.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpgcdlw1iy.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpgcdlw1iy.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcdlw1iy.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcdlw1iy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcdlw1iy.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgcdlw1iy.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcdlw1iy.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcdlw1iy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcdlw1iy.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgcdlw1iy.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcdlw1iy.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcdlw1iy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcdlw1iy.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgcdlw1iy.jl:23\n\
    \   [2] macro"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 0
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
  timestamp: 1659800393
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if ispalindrome(q)\n            return true\n        else\n  \
    \          return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpij1rat5o.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpij1rat5o.jl:38\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpij1rat5o.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpij1rat5o.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpij1rat5o.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif ispalindrome(q)\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp4ltsn6hj.jl:33

    '
  stdout: "test set: Error During Test at /tmp/tmp4ltsn6hj.jl:36\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp4ltsn6hj.jl:25\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ltsn6hj.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ltsn6hj.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp4ltsn6hj.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4ltsn6hj.jl:25\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ltsn6hj.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ltsn6hj.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp4ltsn6hj.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4ltsn6hj.jl:25\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ltsn6hj.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ltsn6hj.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp4ltsn6hj.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4ltsn6hj.jl:25\n\
    \   [2] macro"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1b9qwk.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp7v1b9qwk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7v1b9qwk.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] m"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\
    \t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t\
    @test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\
    \t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7x7d5vv0.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp7x7d5vv0.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7x7d5vv0.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x7d5vv0.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x7d5vv0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7x7d5vv0.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7x7d5vv0.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x7d5vv0.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x7d5vv0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7x7d5vv0.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7x7d5vv0.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x7d5vv0.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x7d5vv0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7x7d5vv0.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if ispalindrome(q)\n            return true\n        else\n  \
    \          return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpij1rat5o.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpij1rat5o.jl:38\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpij1rat5o.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpij1rat5o.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpij1rat5o.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w\n        if ispalindrome(q)\n         \
    \   return true\n        else\n            return false\n        end\n    else\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpfeizvr1b.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpfeizvr1b.jl:38\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpfeizvr1b.jl:24\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfeizvr1b.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfeizvr1b.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpfeizvr1b.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfeizvr1b.jl:24\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfeizvr1b.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfeizvr1b.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpfeizvr1b.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfeizvr1b.jl:24\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfeizvr1b.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfeizvr1b.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpfeizvr1b.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfeizvr1b.jl:24\n\
    \   [2] macro"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    # your code here\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpuo8tq8k9.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpuo8tq8k9.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n    \
    \ @ Main /tmp/tmpuo8tq8k9.jl:24\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuo8tq8k9.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuo8tq8k9.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpuo8tq8k9.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n    \
    \ @ Main /tmp/tmpuo8tq8k9.jl:24\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuo8tq8k9.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuo8tq8k9.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpuo8tq8k9."
  timestamp: 1659800396
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && is_palindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp_tcceazz.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp_tcceazz.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp_tcceazz.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_tcceazz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_tcceazz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if ispalindrome(q)\n            return true\n        else\n  \
    \          return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpij1rat5o.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpij1rat5o.jl:38\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpij1rat5o.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpij1rat5o.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpij1rat5o.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w\n        if ispalindrome(q)\n         \
    \   return true\n        else\n            return false\n        end\n    else\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpfeizvr1b.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpfeizvr1b.jl:38\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpfeizvr1b.jl:24\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfeizvr1b.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfeizvr1b.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpfeizvr1b.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfeizvr1b.jl:24\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfeizvr1b.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfeizvr1b.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpfeizvr1b.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfeizvr1b.jl:24\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfeizvr1b.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfeizvr1b.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpfeizvr1b.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfeizvr1b.jl:24\n\
    \   [2] macro"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w\n        if is_balanced(q)\n          \
    \  return true\n        else\n            return false\n        end\n    else\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpei2lfumq.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpei2lfumq.jl:38\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpei2lfumq.jl:24\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpei2lfumq.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpei2lfumq.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpei2lfumq.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpei2lfumq.jl:24\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpei2lfumq.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpei2lfumq.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpei2lfumq.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpei2lfumq.jl:24\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpei2lfumq.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpei2lfumq.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpei2lfumq.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpei2lfumq.jl:24\n\
    \   [2] macro exp"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && is_palindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp_tcceazz.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp_tcceazz.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp_tcceazz.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_tcceazz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_tcceazz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 0
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if q == reverse(q)\n            return true\n        else\n  \
    \          return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\
    \t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t\
    @test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\
    \t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7x7d5vv0.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp7x7d5vv0.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7x7d5vv0.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x7d5vv0.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x7d5vv0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7x7d5vv0.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7x7d5vv0.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x7d5vv0.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x7d5vv0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7x7d5vv0.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7x7d5vv0.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x7d5vv0.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x7d5vv0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7x7d5vv0.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return isbalanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpksd070hy.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpksd070hy.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: isbalanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpksd070hy.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd070hy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd070hy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: isbalanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd07"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1b9qwk.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp7v1b9qwk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7v1b9qwk.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] m"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return isbalanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpksd070hy.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpksd070hy.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: isbalanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpksd070hy.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd070hy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd070hy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: isbalanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd07"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1b9qwk.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp7v1b9qwk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7v1b9qwk.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] m"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if ispalindrome(q)\n            return true\n        else\n  \
    \          return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpij1rat5o.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpij1rat5o.jl:38\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpij1rat5o.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpij1rat5o.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpij1rat5o.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1b9qwk.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp7v1b9qwk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7v1b9qwk.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] m"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    # check if balanced\n    if is_balanced(q)\n        #\
    \ check if sum of elements is less than or equal to w\n        if sum(q) <= w\n\
    \            return true\n        else\n            return false\n        end\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp4igk44bk.jl:37

    '
  stdout: "test set: Error During Test at /tmp/tmp4igk44bk.jl:40\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmp4igk44bk.jl:24\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4igk44bk.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4igk44bk.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp4igk44bk.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4igk44bk.jl:24\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4igk44bk.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4igk44bk.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp4igk44bk.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4igk44bk.jl:24\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4igk44bk.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4igk44bk.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp4igk44bk.jl:43\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4igk44bk.jl:24\n\
    \   [2] macro exp"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && is_balanced(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpmh5hh9lx.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpmh5hh9lx.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpmh5hh9lx.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmh5hh9lx.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmh5hh9lx.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpmh5hh9lx.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpmh5hh9lx.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmh5hh9lx.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmh5hh9lx.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpmh5hh9lx.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpmh5hh9lx.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmh5hh9lx.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmh5hh9lx.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpmh5hh9lx.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpmh5hh9lx.jl:23\n\
    \   [2] macro exp"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 0
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if q == reverse(q)\n            return true\n        else\n  \
    \          return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1b9qwk.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp7v1b9qwk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7v1b9qwk.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] m"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w\n        if ispalindrome(q)\n         \
    \   return true\n        else\n            return false\n        end\n    else\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpfeizvr1b.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpfeizvr1b.jl:38\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpfeizvr1b.jl:24\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfeizvr1b.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfeizvr1b.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpfeizvr1b.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfeizvr1b.jl:24\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfeizvr1b.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfeizvr1b.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpfeizvr1b.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfeizvr1b.jl:24\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfeizvr1b.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfeizvr1b.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpfeizvr1b.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfeizvr1b.jl:24\n\
    \   [2] macro"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    # check if the sum of the elements is less than or equal\
    \ to the maximum possible weight\n    if sum(q) <= w\n        # check if the list\
    \ is balanced\n        if is_balanced(q)\n            return true\n        else\n\
    \            return false\n        end\n    else\n        return false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3,\
    \ 2, 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpb7fs70z9.jl:37

    '
  stdout: "test set: Error During Test at /tmp/tmpb7fs70z9.jl:40\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpb7fs70z9.jl:26\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb7fs70z9.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb7fs70z9.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpb7fs70z9.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpb7fs70z9.jl:26\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb7fs70z9.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb7fs70z9.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpb7fs70z9.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpb7fs70z9.jl:26\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb7fs70z9.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb7fs70z9.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpb7fs70z9.jl:44\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpb7fs70z9.jl:26\n\
    \   [2] macro exp"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return isbalanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpksd070hy.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpksd070hy.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: isbalanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpksd070hy.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd070hy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd070hy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: isbalanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd07"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1b9qwk.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp7v1b9qwk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7v1b9qwk.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] m"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 0
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    # check if q is a palindrome\n    if q == reverse(q)\n\
    \        # check if the sum of the elements is less than or equal to w\n     \
    \   if sum(q) <= w\n            return true\n        else\n            return\
    \ false\n        end\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
  timestamp: 1659800392
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif ispalindrome(q)\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp4ltsn6hj.jl:33

    '
  stdout: "test set: Error During Test at /tmp/tmp4ltsn6hj.jl:36\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp4ltsn6hj.jl:25\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ltsn6hj.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ltsn6hj.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp4ltsn6hj.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4ltsn6hj.jl:25\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ltsn6hj.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ltsn6hj.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp4ltsn6hj.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4ltsn6hj.jl:25\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ltsn6hj.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ltsn6hj.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp4ltsn6hj.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4ltsn6hj.jl:25\n\
    \   [2] macro"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1b9qwk.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp7v1b9qwk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7v1b9qwk.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] m"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpgcdlw1iy.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpgcdlw1iy.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpgcdlw1iy.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcdlw1iy.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcdlw1iy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcdlw1iy.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgcdlw1iy.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcdlw1iy.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcdlw1iy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcdlw1iy.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgcdlw1iy.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcdlw1iy.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcdlw1iy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcdlw1iy.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgcdlw1iy.jl:23\n\
    \   [2] macro"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1b9qwk.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp7v1b9qwk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7v1b9qwk.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] m"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    # check if balanced\n    if ispalindrome(q)\n        #\
    \ check if sum of elements is less than or equal to w\n        if sum(q) <= w\n\
    \            return true\n        else\n            return false\n        end\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp0c2_e0zv.jl:37

    '
  stdout: "test set: Error During Test at /tmp/tmp0c2_e0zv.jl:40\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp0c2_e0zv.jl:24\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0c2_e0zv.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0c2_e0zv.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp0c2_e0zv.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp0c2_e0zv.jl:24\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0c2_e0zv.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0c2_e0zv.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp0c2_e0zv.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp0c2_e0zv.jl:24\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0c2_e0zv.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0c2_e0zv.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp0c2_e0zv.jl:43\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp0c2_e0zv.jl:24\n\
    \   [2] macro"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpgcdlw1iy.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpgcdlw1iy.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpgcdlw1iy.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcdlw1iy.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcdlw1iy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcdlw1iy.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgcdlw1iy.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcdlw1iy.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcdlw1iy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcdlw1iy.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgcdlw1iy.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcdlw1iy.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcdlw1iy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcdlw1iy.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgcdlw1iy.jl:23\n\
    \   [2] macro"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1b9qwk.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp7v1b9qwk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7v1b9qwk.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] m"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 0
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
  timestamp: 1659800393
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && is_palindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp_tcceazz.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp_tcceazz.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp_tcceazz.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_tcceazz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_tcceazz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1b9qwk.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp7v1b9qwk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7v1b9qwk.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] m"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1b9qwk.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp7v1b9qwk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7v1b9qwk.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] m"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && is_palindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp_tcceazz.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp_tcceazz.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp_tcceazz.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_tcceazz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_tcceazz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if ispalindrome(q)\n            return true\n        else\n  \
    \          return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpij1rat5o.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpij1rat5o.jl:38\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpij1rat5o.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpij1rat5o.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpij1rat5o.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpij1rat5o.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpij1rat5o.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpij1rat5o.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1b9qwk.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp7v1b9qwk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7v1b9qwk.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] m"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return isbalanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpksd070hy.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpksd070hy.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: isbalanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpksd070hy.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd070hy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd070hy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksd070hy.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksd070hy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpksd070hy.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: isbalanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpksd07"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    else\n      \
    \  if ispalindrome(q)\n            return true\n        else\n            return\
    \ false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp_p9uc9q1.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmp_p9uc9q1.jl:38\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp_p9uc9q1.jl:26\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_p9uc9q1.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_p9uc9q1.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp_p9uc9q1.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_p9uc9q1.jl:26\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_p9uc9q1.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_p9uc9q1.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp_p9uc9q1.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_p9uc9q1.jl:26\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_p9uc9q1.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_p9uc9q1.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp_p9uc9q1.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_p9uc9q1.jl:26\n\
    \   [2] macro"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpgcdlw1iy.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpgcdlw1iy.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpgcdlw1iy.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcdlw1iy.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcdlw1iy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcdlw1iy.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgcdlw1iy.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcdlw1iy.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcdlw1iy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcdlw1iy.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgcdlw1iy.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcdlw1iy.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcdlw1iy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcdlw1iy.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgcdlw1iy.jl:23\n\
    \   [2] macro"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && is_palindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp_tcceazz.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp_tcceazz.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp_tcceazz.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_tcceazz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_tcceazz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_tcceazz.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_tcceazz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_tcceazz.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /"
- exit_code: 0
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif q == reverse(q)\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
  timestamp: 1659800392
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1b9qwk.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp7v1b9qwk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7v1b9qwk.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7v1b9qwk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7v1b9qwk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7v1b9qwk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7v1b9qwk.jl:23\n\
    \   [2] m"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && is_balanced(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpmh5hh9lx.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpmh5hh9lx.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpmh5hh9lx.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmh5hh9lx.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmh5hh9lx.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpmh5hh9lx.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpmh5hh9lx.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmh5hh9lx.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmh5hh9lx.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpmh5hh9lx.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpmh5hh9lx.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmh5hh9lx.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmh5hh9lx.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpmh5hh9lx.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpmh5hh9lx.jl:23\n\
    \   [2] macro exp"
  timestamp: 1659800395
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\
    \t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t\
    @test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\
    \t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7x7d5vv0.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp7x7d5vv0.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7x7d5vv0.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x7d5vv0.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x7d5vv0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7x7d5vv0.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7x7d5vv0.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x7d5vv0.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x7d5vv0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7x7d5vv0.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7x7d5vv0.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x7d5vv0.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x7d5vv0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7x7d5vv0.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph337_e0o.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph337_e0o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmph337_e0o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph337_e0o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph337_e0o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph337_e0o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph337_e0o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmph"
- exit_code: 0
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
  timestamp: 1659800393
- exit_code: 1
  program: "\"\"\"\n    Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8bdl1b89.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp8bdl1b89.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8bdl1b89.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8bdl1b89.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8bdl1b89.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8bdl1b89.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8bdl1b89.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"

name: HumanEval_27_flip_case
language: jl
prompt: "\"\"\" For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \"\"\"\nfunction\
  \ flip_case(string::String)::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
  \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
  These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\")\nend\n"
completions: ["    return string |> String.lowercase |> String.uppercase\nend", " \
    \   flipped_string = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped_string *= string(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped_string *= string(char)\n        else\n            flipped_string\
    \ *= char\n        end\n    end\n    return flipped_string\nend", "    return\
    \ replace(string, r\"[a-z]\", x -> uppercase(x))\nend", "    flipped_string =\
    \ \"\"\n    for char in string\n        if char in string(\"a\"::String,\"b\"\
    ::String,\"c\"::String,\"d\"::String,\"e\"::String,\"f\"::String,\"g\"::String,\"\
    h\"::String,\"i\"::String,\"j\"::String,\"k\"::String,\"l\"::String,\"m\"::String,\"\
    n\"::String,\"o\"::String,\"p\"::String,\"q\"::String,\"r\"::String,\"s\"::String,\"\
    t\"::String,\"u\"::String,\"v\"::String,\"w\"::String,\"x\"::String,\"y\"::String,\"\
    z\"::String)\n            flipped_string = flipped_string * char.upper()\n   \
    \     else\n            flipped_string = flipped_string * char.lower()\n     \
    \   end\n    end\n    return flipped_string\nend", "    new_string = \"\"\n  \
    \  for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\n   \
    \         new_string = new_string * string(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * string(char)\n        else\n         \
    \   new_string = new_string * char\n        end\n    end\n    return new_string\n\
    end", "    flipped_string = \"\"\n    for character in string\n        if character\
    \ in \"abcdefghijklmnopqrstuvwxyz\"\n            flipped_string = flipped_string\
    \ * uppercase(character)\n        elseif character in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped_string = flipped_string * lowercase(character)\n       \
    \ else\n            flipped_string = flipped_string * character\n        end\n\
    \    end\n    return flipped_string\nend", "    return [uppercase(x) for x in\
    \ string]\nend", "    new_string = \"\"\n    for i in string\n        if i in\
    \ string(islower(i))\n            new_string = new_string * string(i)\n      \
    \  else\n            new_string = new_string * string(i)\n    end\n    return\
    \ new_string\nend", "    new_string = \"\"\n    for i in string\n        if i\
    \ in \"abcdefghijklmnopqrstuvwxyz\"\n            new_string *= uppercase(i)\n\
    \        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            new_string *=\
    \ lowercase(i)\n        else\n            new_string *= i\n        end\n    end\n\
    \    return new_string\nend", "    new_string = \"\"\n    for char in string\n\
    \        if char in \"abcdefghijklmnopqrstuvwxyz\"\n            push!(new_string,\
    \ uppercase(char))\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  \
    \          push!(new_string, lowercase(char))\n        else\n            push!(new_string,\
    \ char)\n        end\n    end\n    return new_string\nend", "    flipped_string\
    \ = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped_string *= uppercase(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped_string *= lowercase(char)\n        else\n            flipped_string\
    \ *= char\n        end\n    end\n    return flipped_string\nend", "    new_string\
    \ = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            new_string = new_string * uppercase(char)\n        elseif char in\
    \ \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            new_string = new_string * lowercase(char)\n\
    \        else\n            new_string = new_string * char\n        end\n    end\n\
    \    return new_string\nend", "    new_string = \"\"\n    for i in string\n  \
    \      if i == i.lowercase()\n            new_string = new_string * i.uppercase()\n\
    \        else\n            new_string = new_string * i.lowercase()\n        end\n\
    \    end\n    return new_string\nend", "    return string |> String.lower |> String.uppercase\n\
    end", "    new_string = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            new_string = new_string * string(char)\n        elseif char in \"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            new_string = new_string * string(char)\n\
    \    return new_string\nend", "    return [uppercase(c) ? lowercase(c) : uppercase(c)\
    \ for c in string]\nend", "    flipped_string = \"\"\n    for i in 1:length(string)\n\
    \        if islower(string[i])\n            flipped_string = flipped_string *\
    \ string[i]\n        elseif isupper(string[i])\n            flipped_string = flipped_string\
    \ * lowercase(string[i])\n        else\n            flipped_string = flipped_string\
    \ * string[i]\n        end\n    end\n    return flipped_string\nend", "    new_string\
    \ = \"\"\n    for char in string\n        if char in string(\"a\"::String, \"\
    b\"::String, \"c\"::String, \"d\"::String, \"e\"::String, \"f\"::String, \"g\"\
    ::String, \"h\"::String, \"i\"::String, \"j\"::String, \"k\"::String, \"l\"::String,\
    \ \"m\"::String, \"n\"::String, \"o\"::String, \"p\"::String, \"q\"::String, \"\
    r\"::String, \"s\"::String, \"t\"::String, \"u\"::String, \"v\"::String, \"w\"\
    ::String, \"x\"::String, \"y\"::String, \"z\"::String)\n            new_string\
    \ = new_string * string(char)::String\n        else\n            new_string =\
    \ new_string * string(char)::String\n    end\n    return new_string\nend", " \
    \   new_string = \"\"\n    for letter in string\n        if letter in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            new_string = new_string * uppercase(letter)\n        elseif letter\
    \ in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            new_string = new_string * lowercase(letter)\n\
    \        else\n            new_string = new_string * letter\n        end\n   \
    \ end\n    return new_string\nend", "    new_string = \"\"\n    for i in string\n\
    \        if i == i.lowercase()\n            new_string = new_string * i.uppercase()\n\
    \        else\n            new_string = new_string * i.lowercase()\n        end\n\
    \    end\n    return new_string\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

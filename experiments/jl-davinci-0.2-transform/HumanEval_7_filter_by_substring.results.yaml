language: jl
name: HumanEval_7_filter_by_substring
results:
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    filtered = []\n    for s in strings\n        if contains(s, substring)\n\
    \            push!(filtered, s)\n        end\n    end\n    return filtered\nend\n\
    using Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    filtered = []\n    for string in strings\n        if contains(string,\
    \ substring)\n            push!(filtered, string)\n        end\n    end\n    return\
    \ filtered\nend\nusing Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\
    \t@test(candidate(Vector{String}([]), \"john\") == Vector{String}([]))\n\t@test(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\"\
    , \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"\
    xxx\"])\n\t@test(candidate([\"grunt\", \"trumpet\", \"prune\", \"gruesome\"],\
    \ \"run\") == [\"grunt\", \"prune\"])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659798215
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> occursin(substring, x), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659798215
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    filtered = []\n    for s in strings\n        if contains(s, substring)\n\
    \            push!(filtered, s)\n        end\n    end\n    return filtered\nend\n\
    using Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> occursin(substring, x), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659798215
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> occursin(substring, x), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659798215
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    filtered = []\n    for string in strings\n        if contains(string,\
    \ substring)\n            push!(filtered, string)\n        end\n    end\n    return\
    \ filtered\nend\nusing Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\
    \t@test(candidate(Vector{String}([]), \"john\") == Vector{String}([]))\n\t@test(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\"\
    , \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"\
    xxx\"])\n\t@test(candidate([\"grunt\", \"trumpet\", \"prune\", \"gruesome\"],\
    \ \"run\") == [\"grunt\", \"prune\"])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659798215
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> occursin(substring, x), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659798215
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> occursin(substring, x), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659798215
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    filtered = []\n    for s in strings\n        if contains(s, substring)\n\
    \            push!(filtered, s)\n        end\n    end\n    return filtered\nend\n\
    using Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    filtered = []\n    for s in strings\n        if contains(s, substring)\n\
    \            push!(filtered, s)\n        end\n    end\n    return filtered\nend\n\
    using Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(s -> contains(s, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659798215
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    filtered = []\n    for s in strings\n        if contains(s, substring)\n\
    \            push!(filtered, s)\n        end\n    end\n    return filtered\nend\n\
    using Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    filtered = []\n    for s in strings\n        if contains(s, substring)\n\
    \            push!(filtered, s)\n        end\n    end\n    return filtered\nend\n\
    using Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [string for string in strings if substring in string]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpge3zsq01.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpge3zsq01.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(string::String)\n      @ Main ./none:0\n    [4]\
    \ iterate\n      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpge3zsq01.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpge3zsq01.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(string::String)\n \
    \     @ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n\
    \    [5] iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n    \
    \  @ ./array.jl:797 [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n\
    \    [8] filter_by_substring(strings::Vector{String}, substring::String)\n   \
    \   @ Main /tmp/tmpge3zsq01.jl:8\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpge3zsq01"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    filtered = []\n    for string in strings\n        if contains(string,\
    \ substring)\n            push!(filtered, string)\n        end\n    end\n    return\
    \ filtered\nend\nusing Test\n\n@testset begin\n\ncandidate = filter_by_substring;\n\
    \t@test(candidate(Vector{String}([]), \"john\") == Vector{String}([]))\n\t@test(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\"\
    , \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"\
    xxx\"])\n\t@test(candidate([\"grunt\", \"trumpet\", \"prune\", \"gruesome\"],\
    \ \"run\") == [\"grunt\", \"prune\"])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659798215
- exit_code: 0
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return filter(x -> contains(x, substring), strings)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"
- exit_code: 1
  program: "\"\"\" Filter an input list of strings only for ones that contain given\
    \ substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"\
    abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"\
    ]\n    \"\"\"\nfunction filter_by_substring(strings::Vector{String}, substring::String)::Vector{String}\
    \ \n    return [s for s in strings if substring in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = filter_by_substring;\n\t@test(candidate(Vector{String}([]),\
    \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
    , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
    ])\n\t@test(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"])\n\t@test(candidate([\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"\
    ])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpy39cp4is.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpy39cp4is.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y) for\
    \ string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base ./error.jl:33\n\
    \    [2] in(#unused#::String, #unused#::String)\n      @ Base ./strings/search.jl:638\n\
    \    [3] (::var\"#1#2\"{String})(s::String)\n      @ Main ./none:0\n    [4] iterate\n\
    \      @ ./iterators.jl:447 [inlined]\n    [5] iterate\n      @ ./generator.jl:44\
    \ [inlined]\n    [6] grow_to!\n      @ ./array.jl:797 [inlined]\n    [7] collect\n\
    \      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy39cp4is.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpy39cp4is.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"],\
    \ \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]\n  use occursin(x, y)\
    \ for string containment\n  Stacktrace:\n    [1] error(s::String)\n      @ Base\
    \ ./error.jl:33\n    [2] in(#unused#::String, #unused#::String)\n      @ Base\
    \ ./strings/search.jl:638\n    [3] (::var\"#1#2\"{String})(s::String)\n      @\
    \ Main ./none:0\n    [4] iterate\n      @ ./iterators.jl:447 [inlined]\n    [5]\
    \ iterate\n      @ ./generator.jl:44 [inlined]\n    [6] grow_to!\n      @ ./array.jl:797\
    \ [inlined]\n    [7] collect\n      @ ./array.jl:721 [inlined]\n    [8] filter_by_substring(strings::Vector{String},\
    \ substring::String)\n      @ Main /tmp/tmpy39cp4is.jl:8\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy39cp4is.jl:17 [in"

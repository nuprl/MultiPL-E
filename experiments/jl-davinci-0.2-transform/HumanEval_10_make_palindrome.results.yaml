language: jl
name: HumanEval_10_make_palindrome
results:
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    # Find the longest palindromic suffix\n    suffix = longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix and append it to the end of the string\n    return string\
    \ * reverse(string[1:end-length(suffix)])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"\
    xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpqdvd8ys0.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpqdvd8ys0.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpqdvd8ys0.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqdvd8ys0.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqdvd8ys0.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpqdvd8ys0.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpqdvd8ys0.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqdvd8ys0.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqdvd8ys0.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpqdvd8ys0.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpqdvd8ys0.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqdvd8ys0.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqdvd8ys0.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpqdvd8ys0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/t"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    n = length(string)\n    if n == 0\n        return \"\"\n    end\n    if\
    \ n == 1\n        return string\n    end\n    # Find the longest palindromic suffix\n\
    \    longest_suffix = longest_palindromic_suffix(string)\n    # Reverse the prefix\
    \ that comes before the palindromic suffix\n    prefix = reverse(string[1:n-longest_suffix])\n\
    \    return string * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpuxstjxga.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpuxstjxga.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpuxstjxga.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuxstjxga.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuxstjxga.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpuxstjxga.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpuxstjxga.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuxstjxga.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuxstjxga.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpuxstjxga.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpuxstjxga.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuxstjxga.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuxstjxga.jl:30\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      3      5\n"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp40g_tcdz.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp40g_tcdz.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ M"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpwoz1es6p.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpwoz1es6p.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    if string == reverse(string)\n\
    \        return string\n    end\n    # Find the longest postfix of supplied string\
    \ that is a palindrome.\n    for i in 1:length(string)\n        if string[1:i]\
    \ == reverse(string[end-i+1:end])\n            return string * reverse(string[1:end-i])\n\
    \        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpc8zpq_fi.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpc8zpq_fi.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"xyz\") == \"xyzyx\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpc8zpq_fi.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc8zpq_fi.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc8zpq_fi.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpc8zpq_fi.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpc8zpq_fi.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc8zpq_fi.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    suffix = longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix of the string that comes before the palindromic suffix.\n\
    \    prefix = reverse(string[1:end-length(suffix)])\n    # Append the reversed\
    \ prefix to the end of the string.\n    return string * prefix\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8f3a63lv.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp8f3a63lv.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp8f3a63lv.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8f3a63lv.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8f3a63lv.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp8f3a63lv.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp8f3a63lv.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8f3a63lv.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8f3a63lv.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp8f3a63lv.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp8f3a63lv.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8f3a63lv.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8f3a63lv.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp8f3a63lv.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n    "
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    if is_palindrome(string)\n\
    \        return string\n    end\n    longest_palindrome_suffix = find_longest_palindrome_suffix(string)\n\
    \    prefix = string[1:end-length(longest_palindrome_suffix)]\n    return string\
    \ * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpkw6t8tqi.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpkw6t8tqi.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpkw6t8tqi.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkw6t8tqi.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkw6t8tqi.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpkw6t8tqi.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpkw6t8tqi.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkw6t8tqi.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkw6t8tqi.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpkw6t8tqi.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpkw6t8tqi.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkw6t8tqi.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkw6t8tqi.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpkw6t8tqi.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpkw6t8tqi.jl:16\n\
    \   [2] macro expansio"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if length(string) == 0\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpea427a3p.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpea427a3p.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpea427a3p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpea427a3p.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpea427a3p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpea427a3p.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpea427a3p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpea427a3p.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpea427a3p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpea427a3p.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpea427a3p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpea427a3p.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpea427a3p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpea427a3p.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpwoz1es6p.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpwoz1es6p.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    n = length(string)\n    if n == 0\n        return \"\"\n    end\n    #\
    \ Find the longest palindromic suffix.\n    # This is the longest string that\
    \ is a palindrome and is a suffix of the string.\n    # For example, for string\
    \ \"cata\" the longest palindromic suffix is \"a\".\n    # For string \"catac\"\
    \ the longest palindromic suffix is \"catac\".\n    # For string \"cataca\" the\
    \ longest palindromic suffix is \"aca\".\n    # For string \"catacat\" the longest\
    \ palindromic suffix is \"catacat\".\n    # For string \"catacata\" the longest\
    \ palindromic suffix is \"atacata\".\n    # For string \"catacatac\" the longest\
    \ palindromic suffix is \"catacatac\".\n    # For string \"catacataca\" the longest\
    \ palindromic suffix is \"atacataca\".\n    # For string \"catacatacat\" the longest\
    \ palindromic suffix is \"catacatacat\".\n    # For string \"catacatacata\" the\
    \ longest palindromic suffix is \"atacatacata\".\n    # For string \"catacatacatac\"\
    \ the longest palindromic suffix is \"catacatacatac\".\n    # For string \"catacatacataca\"\
    \ the longest palindromic suffix is \"atacatacataca\".\n    # For string \"catacatacatacat\"\
    \ the longest palindromic suffix is \"catacatacatacat\".\n    # For string \"\
    catacatacatacata\" the longest palindromic suffix is \"atacatacatacata\".\n  \
    \  # For string \"catacatacatacatac\" the longest palindromic suffix is \"catacatacatacatac\"\
    .\n    # For string \"catacatacatacataca\" the longest palindromic suffix is \"\
    atacatacatacataca\".\n    # For string \"catacatacatacatacat\" the longest palindromic\
    \ suffix is \"catacatacatacatacat\".\n    # For string \"catacatacatacatacata\"\
    \ the longest palindromic\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp289l3eon.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp289l3eon.jl:1\n\
    in expression starting at /tmp/tmp289l3eon.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    suffix = longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix that comes before the palindromic suffix.\n    prefix\
    \ = reverse(string[1:end-length(suffix)])\n    # Return the concatenation of the\
    \ prefix, the string itself and the reversed prefix.\n    return prefix * string\
    \ * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpfk29j282.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpfk29j282.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpfk29j282.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfk29j282.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfk29j282.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpfk29j282.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpfk29j282.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfk29j282.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfk29j282.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpfk29j282.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpfk29j282.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfk29j282.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfk29j282.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpfk29j282.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n    "
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    # Find the longest palindromic suffix of the string\n    suffix_length\
    \ = longest_palindromic_suffix(string)\n    # Reverse the string prefix that comes\
    \ before the palindromic suffix\n    prefix_length = length(string) - suffix_length\n\
    \    prefix = reverse(string[1:prefix_length])\n    # Append the reversed prefix\
    \ to the end of the string\n    return string * prefix\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpl9cvudqc.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpl9cvudqc.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpl9cvudqc.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl9cvudqc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl9cvudqc.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpl9cvudqc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpl9cvudqc.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl9cvudqc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl9cvudqc.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpl9cvudqc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpl9cvudqc.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl9cvudqc.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl9cvudqc.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpl9cvudqc.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/t"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string\n    # (the longest palindromic suffix is the\
    \ same as the longest palindromic prefix)\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse\n    # (the longest common prefix\
    \ of a string and its reverse is the same as the longest palindromic prefix)\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse\n    # (the longest common prefix of a string and its reverse is the\
    \ same as the longest palindromic prefix)\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse\n    # (the longest common prefix\
    \ of a string and its reverse is the same as the longest palindromic prefix)\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse\n    # (the longest common prefix of a string and its reverse is the\
    \ same as the longest palindromic prefix)\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse\n    # (the longest common prefix\
    \ of a string and its reverse is the same as the longest palindromic prefix)\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse\n    # (the longest common prefix of a string and its reverse is the\
    \ same as the longest palindromic prefix)\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse\n    # (the longest common prefix\
    \ of a string and its reverse is the same as the longest palindromic prefix)\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse\n    # (the longest common prefix of a string and its reverse is the\
    \ same as the longest palindromic prefix)\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse\n    # (the longest common prefix\
    \ of a string and its reverse is the same as the longest palindromic prefix)\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse\n    # (the longest common prefix of a string and its reverse is the\
    \ same as the longest palindromic prefix)\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse\n    # (\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpv8nsrm06.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpv8nsrm06.jl:1\n\
    in expression starting at /tmp/tmpv8nsrm06.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string\n    palindrome_suffix = find_longest_palindrome_suffix(string)\n\
    \    # Reverse the prefix of the string that comes before the palindromic suffix\n\
    \    prefix = reverse(string[1:end-length(palindrome_suffix)])\n    # Append the\
    \ prefix to the end of the string\n    return string * prefix\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmps43g1rsr.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmps43g1rsr.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmps43g1rsr.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps43g1rsr.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps43g1rsr.jl:27\ntest set:\
    \ Error During Test at /tmp/tmps43g1rsr.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmps43g1rsr.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps43g1rsr.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps43g1rsr.jl:27\ntest set:\
    \ Error During Test at /tmp/tmps43g1rsr.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmps43g1rsr.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps43g1rsr.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps43g1rsr.jl:27\ntest set:\
    \ Error During Test at /tmp/tmps43g1rsr.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    n = length(string)\n    if n == 0\n        return \"\"\n    end\n    #\
    \ Find the longest palindromic suffix.\n    for i in 1:n\n        if is_palindrome(string[i:n])\n\
    \            return string * string[1:i-1]\n        end\n    end\n    # If we\
    \ are here, the whole string is a palindrome.\n    return string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpksyao6ia.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpksyao6ia.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpksyao6ia.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksyao6ia.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksyao6ia.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpksyao6ia.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpksyao6ia.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksyao6ia.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksyao6ia.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpksyao6ia.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpksyao6ia.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksyao6ia.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksyao6ia.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpksyao6ia.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpksyao6ia.jl:19\n\
    \   [2] macro expansio"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    # This is the same as finding the longest\
    \ palindromic prefix of the string reversed.\n    longest_palindromic_prefix =\
    \ longest_palindromic_prefix(reverse(string))\n    # Append to the end of the\
    \ string reverse of a string prefix that comes before the palindromic suffix.\n\
    \    return string * reverse(string[1:end - length(longest_palindromic_prefix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp4on2wvp6.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp4on2wvp6.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_prefix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp4on2wvp6.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4on2wvp6.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4on2wvp6.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp4on2wvp6.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_prefix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp4on2wvp6.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4on2wvp6.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4on2wvp6.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp4on2wvp6.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_prefix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp4on2wvp6.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4on2wvp6.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4on2wvp6.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp4on2wvp6.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_prefix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n    "
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    prefix = string[1:end-length(longest_palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1d0ubvk2.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp1d0ubvk2.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix\n    palindrome_suffix = longest_palindrome_suffix(string)\n\
    \    # Reverse the prefix that comes before the palindromic suffix\n    prefix\
    \ = reverse(string[1:end-length(palindrome_suffix)])\n    # Concatenate the prefix,\
    \ the original string and the prefix again\n    return prefix * string * prefix\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8fkx61qn.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp8fkx61qn.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp8fkx61qn.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8fkx61qn.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8fkx61qn.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp8fkx61qn.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp8fkx61qn.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8fkx61qn.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8fkx61qn.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp8fkx61qn.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp8fkx61qn.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8fkx61qn.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8fkx61qn.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp8fkx61qn.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp8fkx61qn.jl:17\n   "
  timestamp: 1659805712
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    # Find the longest palindromic suffix of the string.\n    # If the string\
    \ is already a palindrome, then the suffix is the whole string.\n    suffix =\
    \ find_longest_palindromic_suffix(string)\n    # If the suffix is the whole string,\
    \ then the string is already a palindrome.\n    if suffix == string\n        return\
    \ string\n    end\n    # Otherwise, append to the string reverse of a prefix that\
    \ comes before the palindromic suffix.\n    return string * reverse(string[1:end-length(suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8l49niff.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp8l49niff.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp8l49niff.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8l49niff.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8l49niff.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp8l49niff.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp8l49niff.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8l49niff.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8l49niff.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp8l49niff.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp8l49niff.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8l49niff.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8l49niff.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp8l49niff.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp8l49niff"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix that is a palindrome.\n    # This is the same as finding the longest\
    \ prefix that is a palindrome.\n    # We can do this in linear time by iterating\
    \ over the string and comparing\n    # the first and last characters, then the\
    \ second and second-to-last characters, etc.\n    # If we find a mismatch, we\
    \ know that the prefix of the string up to that point is a palindrome.\n    #\
    \ We can then reverse that prefix and append it to the end of the string.\n  \
    \  for i in 1:length(string)\n        if string[i] != string[end]\n          \
    \  return string * reverse(string[1:i-1])\n        end\n    end\n    # If we get\
    \ here, the entire string is a palindrome.\n    # We can just append the reverse\
    \ of the string to the end.\n    return string * reverse(string)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa9ar12gj.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmpa9ar12gj.jl:37\n  Expression: candidate(\"\
    x\") == \"x\"\n   Evaluated: \"xx\" == \"x\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa9ar12gj.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa9ar12gj.jl:35\ntest set: Test Failed at /tmp/tmpa9ar12gj.jl:38\n\
    \  Expression: candidate(\"xyz\") == \"xyzyx\"\n   Evaluated: \"xyz\" == \"xyzyx\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9ar12gj.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9ar12gj.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpa9ar12gj.jl:39\n  Expression: candidate(\"xyx\") == \"xyx\"\
    \n   Evaluated: \"xyxx\" == \"xyx\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9ar12gj.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9ar12gj.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpa9ar12gj.jl:40\n  Expression: candidate(\"jerry\") == \"jerryrrej\"\
    \n   Evaluated: \"jerry\" == \"jerryrrej\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa9ar12gj.jl:40 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa9ar12gj.jl:35\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    1     4      5\n"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    # Find the longest postfix that is a palindrome\n    postfix = longest_palindrome_postfix(string)\n\
    \    # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    return string * reverse(string[1:end-length(postfix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpytk9kdhk.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpytk9kdhk.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: longest_palindrome_postfix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpytk9kdhk.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpytk9kdhk.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpytk9kdhk.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpytk9kdhk.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_postfix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpytk9kdhk.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpytk9kdhk.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpytk9kdhk.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpytk9kdhk.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_postfix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpytk9kdhk.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpytk9kdhk.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpytk9kdhk.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpytk9kdhk.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_postfix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpytk9kdhk.jl:14\n   [2] macro "
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    # Find the longest postfix of supplied string that is a palindrome.\n\
    \    # This is done by finding the longest common substring of the string and\
    \ its reverse.\n    # This is done by finding the longest common prefix of the\
    \ string and its reverse.\n    # This is done by finding the longest common prefix\
    \ of the string and its reverse.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is done\
    \ by finding the longest common prefix of the string and its reverse.\n    # This\
    \ is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and its reverse.\n    # This is done by finding the longest common prefix of\
    \ the string and its reverse.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is done\
    \ by finding the longest common prefix of the string and its reverse.\n    # This\
    \ is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and its reverse.\n    # This is done by finding the longest common prefix of\
    \ the string and its reverse.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is done\
    \ by finding the longest common prefix of the string and its reverse.\n    # This\
    \ is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and its reverse\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmph6u5ypnb.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmph6u5ypnb.jl:1\n\
    in expression starting at /tmp/tmph6u5ypnb.jl:1\n"
  stdout: ''
  timestamp: 1659805710
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix that is a palindrome.\n    # This is done by finding the longest suffix\
    \ that is a prefix.\n    # For example, for \"cata\" the longest suffix that is\
    \ a prefix is \"a\".\n    # The longest palindromic suffix is then the reverse\
    \ of this prefix.\n    # In this case, the longest palindromic suffix is \"a\"\
    .\n    # The shortest palindrome is then the string \"catac\".\n    longest_suffix_prefix\
    \ = longest_suffix_prefix(string)\n    return string * reverse(string[1:longest_suffix_prefix])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpqrks7c64.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpqrks7c64.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_suffix_prefix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpqrks7c64.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqrks7c64.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqrks7c64.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpqrks7c64.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_suffix_prefix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpqrks7c64.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqrks7c64.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqrks7c64.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpqrks7c64.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_suffix_prefix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpqrks7c64.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqrks7c64.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqrks7c64.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpqrks7c64.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_suffix_prefix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpqrks7c64.jl:22\n   [2] macro expans"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    # Find the longest postfix of supplied string that is a palindrome.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is a standard problem in string matching.\n    # The algorithm\
    \ is described here: https://en.wikipedia.org/wiki/Longest_common_prefix#Linear_time_algorithm\n\
    \    # The algorithm is implemented in the function `longest_common_prefix`.\n\
    \    # The algorithm is linear in the length of the string.\n    # The algorithm\
    \ is linear in the length of the string.\n    # The algorithm is linear in the\
    \ length of the string.\n    # The algorithm is linear in the length of the string.\n\
    \    # The algorithm is linear in the length of the string.\n    # The algorithm\
    \ is linear in the length of the string.\n    # The algorithm is linear in the\
    \ length of the string.\n    # The algorithm is linear in the length of the string.\n\
    \    # The algorithm is linear in the length of the string.\n    # The algorithm\
    \ is linear in the length of the string.\n    # The algorithm is linear in the\
    \ length of the string.\n    # The algorithm is linear in the length of the string.\n\
    \    # The algorithm is linear in the length of the string.\n    # The algorithm\
    \ is linear in the length of the string.\n    # The algorithm is linear in the\
    \ length of the string.\n    # The algorithm is linear in the length of the string.\n\
    \    # The algorithm is linear in the length of the string.\n    # The algorithm\
    \ is linear in the length of the string.\n    # The algorithm is linear in the\
    \ length of the string.\n    # The algorithm is linear in the length of the string.\n\
    \    # The algorithm is linear in the length of the string.\n    # The algorithm\
    \ is linear in the length of the string.\n    # The algorithm is linear in the\
    \ length of the string.\n    # The algorithm is linear in the length of the string.\n\
    \    # The algorithm is linear in the length of the string.\n    # The algorithm\
    \ is linear in the length of the string.\n    # The algorithm is linear in the\
    \ length of the string.\n    # The algorithm is linear in the length of the string.\n\
    \    # The algorithm is linear in the length of the string.\n    # The algorithm\
    \ is\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgz60_eer.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgz60_eer.jl:1\n\
    in expression starting at /tmp/tmpgz60_eer.jl:1\n"
  stdout: ''
  timestamp: 1659805710
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    suffix = longest_palindromic_suffix(string)\n\
    \    return string * reverse(string[1:end-length(suffix)])\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpbmpbn17b.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpbmpbn17b.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpbmpbn17b.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbmpbn17b.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbmpbn17b.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpbmpbn17b.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpbmpbn17b.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbmpbn17b.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbmpbn17b.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpbmpbn17b.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpbmpbn17b.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbmpbn17b.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbmpbn17b.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpbmpbn17b.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpbmpbn17b.jl:16"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    for i in 1:length(string)\n\
    \        if is_palindrome(string[i:end])\n            return string * reverse(string[1:i-1])\n\
    \        end\n    end\n    return string * reverse(string[1:end])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp5csbrtng.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp5csbrtng.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp5csbrtng.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5csbrtng.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5csbrtng.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5csbrtng.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp5csbrtng.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5csbrtng.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5csbrtng.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5csbrtng.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp5csbrtng.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5csbrtng.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5csbrtng.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5csbrtng.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp5csbrtng.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    if is_palindrome(string)\n\
    \        return string\n    end\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            return string * reverse(string[1:i-1])\n        end\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpna_ipe0l.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpna_ipe0l.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpna_ipe0l.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpna_ipe0l.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpna_ipe0l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpna_ipe0l.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpna_ipe0l.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpna_ipe0l.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpna_ipe0l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpna_ipe0l.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpna_ipe0l.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpna_ipe0l.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpna_ipe0l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpna_ipe0l.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpna_ipe0l.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix.\n    palindrome_suffix = longest_palindrome_suffix(string)\n\
    \    # Reverse the prefix that comes before the palindromic suffix.\n    prefix\
    \ = reverse(string[1:end-length(palindrome_suffix)])\n    # Append the reversed\
    \ prefix to the end of the string.\n    return string * prefix\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp2unuoyg9.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp2unuoyg9.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp2unuoyg9.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2unuoyg9.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2unuoyg9.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp2unuoyg9.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp2unuoyg9.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2unuoyg9.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2unuoyg9.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp2unuoyg9.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp2unuoyg9.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2unuoyg9.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2unuoyg9.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp2unuoyg9.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp2unuoyg9.jl:17\n   "
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    prefix = string[1:end-length(longest_palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpk8jbw86x.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpk8jbw86x.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpk8jbw86x.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk8jbw86x.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk8jbw86x.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpk8jbw86x.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpk8jbw86x.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk8jbw86x.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk8jbw86x.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpk8jbw86x.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpk8jbw86x.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk8jbw86x.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk8jbw86x.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpk8jbw86x.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpk8jbw86x.jl:16\n   "
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    palindrome_suffix\
    \ = get_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp4i02zqk9.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp4i02zqk9.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: get_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp4i02zqk9.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4i02zqk9.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4i02zqk9.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp4i02zqk9.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: get_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp4i02zqk9.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4i02zqk9.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4i02zqk9.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp4i02zqk9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: get_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp4i02zqk9.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4i02zqk9.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4i02zqk9.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp4i02zqk9.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: get_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp4i02zqk9.jl:16\n   [2] macro expans"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    # This is the same as finding the longest\
    \ palindromic prefix of the reverse of the string.\n    # We can use the KMP algorithm\
    \ to find the longest prefix that is also a suffix.\n    # The longest prefix\
    \ that is also a suffix is the longest palindromic prefix.\n    # We can then\
    \ append the reverse of the prefix that comes before the palindromic suffix.\n\
    \    # This will be the shortest palindrome that begins with the supplied string.\n\
    \    longest_prefix_suffix = kmp_prefix_suffix(reverse(string))\n    return string\
    \ * reverse(string[1:end-longest_prefix_suffix])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpmmgpd0i0.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpmmgpd0i0.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: kmp_prefix_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpmmgpd0i0.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmmgpd0i0.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmmgpd0i0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpmmgpd0i0.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: kmp_prefix_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpmmgpd0i0.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmmgpd0i0.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmmgpd0i0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpmmgpd0i0.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: kmp_prefix_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpmmgpd0i0.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmmgpd0i0.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmmgpd0i0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpmmgpd0i0.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: kmp_prefix_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpmmgpd0i0.jl:22\n   [2] macro expansion\n     @ ~/.co"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    # Find the longest postfix of supplied string that is a palindrome.\n\
    \    # This is done by finding the longest common prefix of the supplied string\
    \ and its reverse.\n    # The longest common prefix of a string and its reverse\
    \ is the longest palindromic suffix.\n    # The longest common prefix of two strings\
    \ can be found in linear time using the KMP algorithm.\n    # The KMP algorithm\
    \ is implemented in Julia in the KMP module.\n    # The KMP module is imported\
    \ in the first line of this module.\n    # The KMP algorithm is used here to find\
    \ the longest common prefix of the supplied string and its reverse.\n    # The\
    \ longest common prefix of the supplied string and its reverse is the longest\
    \ palindromic suffix of the supplied string.\n    # The longest palindromic suffix\
    \ of the supplied string is the longest postfix of the supplied string that is\
    \ a palindrome.\n    # The longest palindromic suffix of the supplied string is\
    \ the longest postfix of the supplied string that is a palindrome.\n    # The\
    \ longest palindromic suffix of the supplied string is the longest postfix of\
    \ the supplied string that is a palindrome.\n    # The longest palindromic suffix\
    \ of the supplied string is the longest postfix of the supplied string that is\
    \ a palindrome.\n    # The longest palindromic suffix of the supplied string is\
    \ the longest postfix of the supplied string that is a palindrome.\n    # The\
    \ longest palindromic suffix of the supplied string is the longest postfix of\
    \ the supplied string that is a palindrome.\n    # The longest palindromic suffix\
    \ of the supplied string is the longest postfix of the supplied string that is\
    \ a palindrome.\n    # The longest palindromic suffix of the supplied string is\
    \ the longest postfix of the supplied string that is a palindrome.\n    # The\
    \ longest palindromic suffix of the supplied string is the longest postfix of\
    \ the supplied string that is a palindrome.\n    # The longest palindromic suffix\
    \ of the supplied string is the longest postfix of the supplied string that is\
    \ a palindrome.\n    # The longest palindromic suffix of the supplied string is\
    \ the longest postfix of the supplied string that is a palindrome.\n    # The\
    \ longest palindromic suffix of the supplied string is\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpel897kqh.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpel897kqh.jl:1\n\
    in expression starting at /tmp/tmpel897kqh.jl:1\n"
  stdout: ''
  timestamp: 1659805710
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    longest_palindromic_suffix = longest_palindromic_suffix(string)\n\
    \    # Find the prefix that comes before the palindromic suffix.\n    prefix =\
    \ string[1:end-length(longest_palindromic_suffix)]\n    # Append to the end of\
    \ the string reverse of the prefix.\n    return string * reverse(prefix)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpk68t_uyw.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpk68t_uyw.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpk68t_uyw.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk68t_uyw.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk68t_uyw.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpk68t_uyw.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpk68t_uyw.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk68t_uyw.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk68t_uyw.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpk68t_uyw.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpk68t_uyw.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk68t_uyw.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk68t_uyw.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpk68t_uyw.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpk68t_uyw.jl:17"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix that is a palindrome.\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            return string * reverse(string[1:i-1])\n        end\n    end\n  \
    \  # If no palindromic suffix exists, the whole string is a palindrome.\n    return\
    \ string\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmphms13wzu.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmphms13wzu.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmphms13wzu.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphms13wzu.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphms13wzu.jl:29\ntest set:\
    \ Error During Test at /tmp/tmphms13wzu.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmphms13wzu.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphms13wzu.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphms13wzu.jl:29\ntest set:\
    \ Error During Test at /tmp/tmphms13wzu.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmphms13wzu.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphms13wzu.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphms13wzu.jl:29\ntest set:\
    \ Error During Test at /tmp/tmphms13wzu.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmphms13wzu.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix\n    longest_palindromic_suffix = find_longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix that comes before the palindromic suffix\n    reverse_prefix\
    \ = reverse(string[1:end-length(longest_palindromic_suffix)])\n    # Append the\
    \ reversed prefix to the end of the string\n    return string * reverse_prefix\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpi3lhdt_5.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpi3lhdt_5.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpi3lhdt_5.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi3lhdt_5.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi3lhdt_5.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpi3lhdt_5.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpi3lhdt_5.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi3lhdt_5.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi3lhdt_5.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpi3lhdt_5.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpi3lhdt_5.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi3lhdt_5.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi3lhdt_5.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpi3lhdt_5.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /t"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix\n    suffix = longest_palindromic_suffix(string)\n    # Reverse\
    \ the prefix and append it to the end of the string\n    return string * reverse(string[1:end-length(suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmphsnmap_q.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmphsnmap_q.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmphsnmap_q.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphsnmap_q.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphsnmap_q.jl:25\ntest set:\
    \ Error During Test at /tmp/tmphsnmap_q.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmphsnmap_q.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphsnmap_q.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphsnmap_q.jl:25\ntest set:\
    \ Error During Test at /tmp/tmphsnmap_q.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmphsnmap_q.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphsnmap_q.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphsnmap_q.jl:25\ntest set:\
    \ Error During Test at /tmp/tmphsnmap_q.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmphsnmap_q.jl:17"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix\n    longest_palindromic_suffix = find_longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix that comes before the palindromic suffix\n    reversed_prefix\
    \ = reverse(string[1:end-length(longest_palindromic_suffix)])\n    # Append the\
    \ reversed prefix to the end of the string\n    return string * reversed_prefix\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmplv6ml043.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmplv6ml043.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmplv6ml043.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplv6ml043.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplv6ml043.jl:27\ntest set:\
    \ Error During Test at /tmp/tmplv6ml043.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmplv6ml043.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplv6ml043.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplv6ml043.jl:27\ntest set:\
    \ Error During Test at /tmp/tmplv6ml043.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmplv6ml043.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplv6ml043.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplv6ml043.jl:27\ntest set:\
    \ Error During Test at /tmp/tmplv6ml043.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /t"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp40g_tcdz.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp40g_tcdz.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ M"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    palindrome_suffix = longest_palindrome_suffix(string)\n\
    \    # Append reverse of the string prefix that comes before the palindromic suffix.\n\
    \    return string * reverse(string[1:end-length(palindrome_suffix)])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp6nq2hqra.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp6nq2hqra.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp6nq2hqra.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6nq2hqra.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6nq2hqra.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp6nq2hqra.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp6nq2hqra.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6nq2hqra.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6nq2hqra.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp6nq2hqra.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp6nq2hqra.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6nq2hqra.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6nq2hqra.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp6nq2hqra.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp6nq2hqra.jl:17\n   "
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix of supplied string that is a palindrome.\n    # We will use the Manacher's\
    \ algorithm to do that.\n    # https://en.wikipedia.org/wiki/Longest_palindromic_substring\n\
    \    # https://www.youtube.com/watch?v=nbTSfrEfo6M\n    # https://www.geeksforgeeks.org/manachers-algorithm-linear-time-longest-palindromic-substring-part-1/\n\
    \    # https://www.geeksforgeeks.org/manachers-algorithm-linear-time-longest-palindromic-substring-part-2/\n\
    \    # https://www.geeksforgeeks.org/manachers-algorithm-linear-time-longest-palindromic-substring-part-3-2/\n\
    \    # https://www.geeksforgeeks.org/manachers-algorithm-linear-time-longest-palindromic-substring-part-4/\n\
    \    # https://www.geeksforgeeks.org/manachers-algorithm-linear-time-longest-palindromic-substring-part-5/\n\
    \    # https://www.geeksforgeeks.org/manachers-algorithm-linear-time-longest-palindromic-substring-part-6/\n\
    \    # https://www.geeksforgeeks.org/manachers-algorithm-linear-time-longest-palindromic-substring-part-7/\n\
    \    # https://www.geeksforgeeks.org/manachers-algorithm-linear-time-longest-palindromic-substring-part-8/\n\
    \    # https://www.geeksforgeeks.org/manachers-algorithm-linear-time-longest-palindromic-substring-part-9/\n\
    \    # https://www.geeksforgeeks.org/manachers-algorithm-linear-time-longest-palindromic-substring-part-10/\n\
    \    # https://www.geeksforgeeks.org/manachers-algorithm-linear-time-longest-palind\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0lidht41.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0lidht41.jl:1\n\
    in expression starting at /tmp/tmp0lidht41.jl:1\n"
  stdout: ''
  timestamp: 1659805710
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    i = length(string)\n\
    \    while i > 0\n        if is_palindrome(string[1:i])\n            return string\
    \ * reverse(string[i+1:end])\n        end\n        i -= 1\n    end\n    return\
    \ string * reverse(string[2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpa_mykw1l.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpa_mykw1l.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpa_mykw1l.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa_mykw1l.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa_mykw1l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpa_mykw1l.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpa_mykw1l.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa_mykw1l.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa_mykw1l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpa_mykw1l.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpa_mykw1l.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa_mykw1l.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa_mykw1l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpa_mykw1l.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpa_mykw1l.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpb09hnw54.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpb09hnw54.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpb09hnw54.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb09hnw54.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb09hnw54.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpb09hnw54.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpb09hnw54.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb09hnw54.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb09hnw54.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpb09hnw54.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpb09hnw54.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb09hnw54.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb09hnw54.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpb09hnw54.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpb09hnw54.jl:16\n   "
  timestamp: 1659805713
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    for i in 1:length(string)\n\
    \        if is_palindrome(string[1:end-i+1])\n            return string * reverse(string[1:end-i+1])\n\
    \        end\n    end\n    return string * reverse(string[1:end])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp3pm1koo3.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp3pm1koo3.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp3pm1koo3.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3pm1koo3.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3pm1koo3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp3pm1koo3.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp3pm1koo3.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3pm1koo3.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3pm1koo3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp3pm1koo3.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp3pm1koo3.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3pm1koo3.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3pm1koo3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp3pm1koo3.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp3pm1koo3.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805713
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    # This is the longest postfix of the\
    \ string that is a palindrome.\n    # We can find it by reversing the string and\
    \ finding the longest prefix that is a palindrome.\n    # This is the same as\
    \ finding the longest postfix of the reversed string that is a palindrome.\n \
    \   # We can do this by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is the same as finding the longest common suffix of the\
    \ reversed string and its reverse.\n    # This is the same as finding the longest\
    \ common prefix of the string and its reverse.\n    # This is the same as finding\
    \ the longest common suffix of the reversed string and its reverse.\n    # This\
    \ is the same as finding the longest common prefix of the string and its reverse.\n\
    \    # This is the same as finding the longest common suffix of the reversed string\
    \ and its reverse.\n    # This is the same as finding the longest common prefix\
    \ of the string and its reverse.\n    # This is the same as finding the longest\
    \ common suffix of the reversed string and its reverse.\n    # This is the same\
    \ as finding the longest common prefix of the string and its reverse.\n    # This\
    \ is the same as finding the longest common suffix of the reversed string and\
    \ its reverse.\n    # This is the same as finding the longest common prefix of\
    \ the string and its reverse.\n    # This is the same as finding the longest common\
    \ suffix of the reversed string and its reverse.\n    # This is the same as finding\
    \ the longest common prefix of the string and its reverse.\n    # This is the\
    \ same as finding the longest common suffix of the reversed string and its reverse.\n\
    \    # This is the same as finding the longest common prefix of the string and\
    \ its reverse.\n    # This is the same as finding the longest common suffix of\
    \ the reversed string and its reverse.\n    # This is the same as finding the\
    \ longest common prefix of the string and its reverse.\n    # This is the same\
    \ as finding the longest common suffix of the reversed string and its reverse.\n\
    \    # This is the same as finding the longest common prefix of the string and\
    \ its reverse.\n    # This is the same as finding the longest common suffix of\
    \ the reversed string and its reverse.\n    # This is the same as\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp41t3koa0.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp41t3koa0.jl:1\n\
    in expression starting at /tmp/tmp41t3koa0.jl:1\n"
  stdout: ''
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if length(string) == 0\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpea427a3p.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpea427a3p.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpea427a3p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpea427a3p.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpea427a3p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpea427a3p.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpea427a3p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpea427a3p.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpea427a3p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpea427a3p.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpea427a3p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpea427a3p.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpea427a3p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpea427a3p.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    if is_palindrome(string)\n\
    \        return string\n    end\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            return string * reverse(string[1:i-1])\n        end\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpna_ipe0l.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpna_ipe0l.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpna_ipe0l.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpna_ipe0l.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpna_ipe0l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpna_ipe0l.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpna_ipe0l.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpna_ipe0l.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpna_ipe0l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpna_ipe0l.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpna_ipe0l.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpna_ipe0l.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpna_ipe0l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpna_ipe0l.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpna_ipe0l.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp40g_tcdz.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp40g_tcdz.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ M"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix that is a palindrome.\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            return string * reverse(string[1:i-1])\n        end\n    end\n  \
    \  # If we got here, the whole string is a palindrome.\n    return string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp5gcms0pe.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp5gcms0pe.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp5gcms0pe.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5gcms0pe.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5gcms0pe.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp5gcms0pe.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp5gcms0pe.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5gcms0pe.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5gcms0pe.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp5gcms0pe.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp5gcms0pe.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5gcms0pe.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5gcms0pe.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp5gcms0pe.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp5gcms0pe.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805713
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    prefix = string[1:end-length(longest_palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1d0ubvk2.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp1d0ubvk2.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix that is a palindrome\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            return string * reverse(string[1:i-1])\n        end\n    end\n  \
    \  # If no palindrome suffix found, return the reverse of the string\n    return\
    \ string * reverse(string)\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpoks8tgl0.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpoks8tgl0.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpoks8tgl0.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoks8tgl0.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoks8tgl0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoks8tgl0.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpoks8tgl0.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoks8tgl0.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoks8tgl0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoks8tgl0.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpoks8tgl0.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoks8tgl0.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoks8tgl0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoks8tgl0.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpoks8tgl0.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805714
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome\
    \ = longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpp9b1w5aj.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpp9b1w5aj.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpp9b1w5aj.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp9b1w5aj.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp9b1w5aj.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpp9b1w5aj.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpp9b1w5aj.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp9b1w5aj.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp9b1w5aj.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpp9b1w5aj.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpp9b1w5aj.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp9b1w5aj.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp9b1w5aj.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpp9b1w5aj.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpp9b1w5aj.jl:16\n   "
  timestamp: 1659805714
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    longest_palindrome_suffix = find_longest_palindrome_suffix(string)\n \
    \   prefix = string[1:end-length(longest_palindrome_suffix)]\n    return string\
    \ * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpgr7uc3d5.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpgr7uc3d5.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpgr7uc3d5.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgr7uc3d5.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgr7uc3d5.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpgr7uc3d5.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpgr7uc3d5.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgr7uc3d5.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgr7uc3d5.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpgr7uc3d5.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpgr7uc3d5.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgr7uc3d5.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgr7uc3d5.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpgr7uc3d5.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpgr7uc3d5.jl:"
  timestamp: 1659805714
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    # Find the longest postfix of supplied string that is a palindrome.\n\
    \    # We will use the Manacher's algorithm to find the longest palindrome.\n\
    \    # See https://en.wikipedia.org/wiki/Longest_palindromic_substring\n    #\
    \ for more details.\n    # First we need to transform the string to a new string\
    \ with special\n    # characters inserted between each character.\n    # For example,\
    \ \"cat\" will become \"#c#a#t#\"\n    # The reason for this is that we want to\
    \ find palindromes of odd length.\n    # We will also add a special character\
    \ to the beginning and the end of the string.\n    # This will make sure that\
    \ the algorithm will find the longest palindrome\n    # that starts at the beginning\
    \ of the string.\n    # The resulting string will be \"#c#a#t#\"\n    transformed_string\
    \ = \"#\" * (2 * length(string) + 1)\n    for i in 1:length(string)\n        transformed_string[2\
    \ * i] = string[i]\n    end\n    # We will use an array to store the length of\
    \ the longest palindrome\n    # that starts at the position i.\n    # For example,\
    \ if the longest palindrome that starts at position 3 is \"c#a\",\n    # then\
    \ the array will contain [0, 0, 0, 2, 0, 0, ...]\n    # The reason for the 0s\
    \ is that we want to make sure that the algorithm\n    # will find the longest\
    \ palindrome that starts at the beginning of the string.\n    # We will also use\
    \ an array to store the position of the rightmost\n    # character of the longest\
    \ palindrome that starts at the position i.\n    # For example, if the longest\
    \ palindrome that starts at position 3 is \"c#a\",\n    # then the array will\
    \ contain [0, 0, 0, 4, 0, 0, ...]\n    # The reason for the 0s is that we want\
    \ to make sure that the algorithm\n    # will find the longest palindrome that\
    \ starts at the beginning of the string.\n    # We will also use an array to store\
    \ the position of the center of the\n    # longest palindrome that starts at the\
    \ position i.\n    # For\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7j4nxz_f.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7j4nxz_f.jl:1\n\
    in expression starting at /tmp/tmp7j4nxz_f.jl:1\n"
  stdout: ''
  timestamp: 1659805713
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    n = length(string)\n    if n == 0\n        return \"\"\n    end\n    for\
    \ i in 1:n\n        if is_palindrome(string[1:n-i+1])\n            return string\
    \ * reverse(string[1:i])\n        end\n    end\n    return string * reverse(string[1:n])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsma6or65.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpsma6or65.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpsma6or65.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsma6or65.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsma6or65.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpsma6or65.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpsma6or65.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsma6or65.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsma6or65.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpsma6or65.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpsma6or65.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsma6or65.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsma6or65.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpsma6or65.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpsma6or65.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805715
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # find the longest\
    \ palindromic suffix\n    palindrome_suffix = longest_palindrome_suffix(string)\n\
    \    # reverse the prefix that comes before the palindromic suffix\n    prefix\
    \ = reverse(string[1:end-length(palindrome_suffix)])\n    # append the prefix\
    \ to the end of the string\n    return string * prefix\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpuv1ssz21.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpuv1ssz21.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpuv1ssz21.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuv1ssz21.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuv1ssz21.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpuv1ssz21.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpuv1ssz21.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuv1ssz21.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuv1ssz21.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpuv1ssz21.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpuv1ssz21.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuv1ssz21.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuv1ssz21.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpuv1ssz21.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpuv1ssz21.jl:17\n   "
  timestamp: 1659805714
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # find the longest\
    \ palindromic suffix\n    suffix = longest_palindromic_suffix(string)\n    # reverse\
    \ the prefix\n    prefix = reverse(string[1:end-length(suffix)])\n    return string\
    \ * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp666g178k.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp666g178k.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp666g178k.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp666g178k.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp666g178k.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp666g178k.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp666g178k.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp666g178k.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp666g178k.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp666g178k.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp666g178k.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp666g178k.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp666g178k.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp666g178k.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp666g178k.jl:17"
  timestamp: 1659805714
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix of supplied string that is a palindrome.\n    # This is done by iterating\
    \ over the string from the end to the beginning.\n    # At each step we check\
    \ if the current prefix is a palindrome.\n    # If it is, we can stop, because\
    \ we have found the longest palindrome.\n    # Otherwise, we continue.\n    for\
    \ i in length(string):-1:1\n        if is_palindrome(string[1:i])\n          \
    \  break\n        end\n    end\n    # Append to the end of the string reverse\
    \ of a string prefix that comes before the palindromic suffix.\n    return string\
    \ * reverse(string[1:i-1])\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmptifrpf07.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmptifrpf07.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmptifrpf07.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptifrpf07.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptifrpf07.jl:33\ntest set:\
    \ Error During Test at /tmp/tmptifrpf07.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmptifrpf07.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptifrpf07.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptifrpf07.jl:33\ntest set:\
    \ Error During Test at /tmp/tmptifrpf07.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmptifrpf07.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptifrpf07.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptifrpf07.jl:33\ntest set:\
    \ Error During Test at /tmp/tmptifrpf07.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmptifrpf07.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805714
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    suffix = longest_palindromic_suffix(string)\n\
    \    # Reverse the string prefix that comes before the palindromic suffix.\n \
    \   prefix = reverse(string[1:end-length(suffix)])\n    # Append the reversed\
    \ prefix to the end of the string.\n    return string * prefix\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp2fbqhbee.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp2fbqhbee.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp2fbqhbee.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2fbqhbee.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2fbqhbee.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp2fbqhbee.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp2fbqhbee.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2fbqhbee.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2fbqhbee.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp2fbqhbee.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp2fbqhbee.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2fbqhbee.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2fbqhbee.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp2fbqhbee.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp2fbqhbee.jl:17"
  timestamp: 1659805715
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if length(string) == 0\n        return \"\"\n    end\n    if length(string)\
    \ == 1\n        return string\n    end\n    # find the longest palindromic suffix\n\
    \    suffix_length = longest_palindromic_suffix(string)\n    # reverse the prefix\
    \ that comes before the palindromic suffix\n    prefix = reverse(string[1:end-suffix_length])\n\
    \    # append the reversed prefix to the end of the string\n    return string\
    \ * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpc4flc1jh.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpc4flc1jh.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpc4flc1jh.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc4flc1jh.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc4flc1jh.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpc4flc1jh.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpc4flc1jh.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc4flc1jh.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc4flc1jh.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpc4flc1jh.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpc4flc1jh.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc4flc1jh.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc4flc1jh.jl:30\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      3      5\n"
  timestamp: 1659805714
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    if is_palindrome(string)\n\
    \        return string\n    end\n    return string * reverse(string[1:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpoumujjk0.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpoumujjk0.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpoumujjk0.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoumujjk0.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoumujjk0.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpoumujjk0.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpoumujjk0.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoumujjk0.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoumujjk0.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpoumujjk0.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpoumujjk0.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoumujjk0.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoumujjk0.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpoumujjk0.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpoumujjk0.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805715
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix.\n    # This is the same as finding the longest palindromic\
    \ prefix of the reverse of the string.\n    # We can do this in linear time using\
    \ Manacher's algorithm.\n    # Note that we do not need to actually find the palindrome,\
    \ just its length.\n    # We can do this by keeping track of the rightmost palindrome\
    \ center and its radius.\n    # We can then find the length of the palindrome\
    \ that starts at the current position.\n    # This is the same as the radius of\
    \ the rightmost palindrome center minus the distance to it.\n    # We can find\
    \ the distance to the rightmost palindrome center by comparing the current position\n\
    \    # to the rightmost palindrome center.\n    # If the current position is outside\
    \ the rightmost palindrome center, the distance is the difference\n    # between\
    \ the current position and the rightmost palindrome center.\n    # If the current\
    \ position is inside the rightmost palindrome center, the distance is the difference\n\
    \    # between the current position and the leftmost palindrome center.\n    #\
    \ We can find the leftmost palindrome center by mirroring the rightmost palindrome\
    \ center.\n    # The mirror is found by subtracting the distance to the rightmost\
    \ palindrome center from the rightmost palindrome center.\n    # We can then find\
    \ the radius of the leftmost palindrome center by mirroring the radius of the\
    \ rightmost palindrome center.\n    # The mirror is found by subtracting the distance\
    \ to the rightmost palindrome center from the radius of the rightmost palindrome\
    \ center.\n    # If the radius of the leftmost palindrome center is greater than\
    \ the distance to the rightmost palindrome center,\n    # the radius of the leftmost\
    \ palindrome center is the radius of the palindrome at the current position.\n\
    \    # Otherwise, the radius of the palindrome at the current position is the\
    \ distance to the rightmost palindrome center.\n    # We can then find the radius\
    \ of the palindrome at the current position by expanding it.\n    # We can expand\
    \ the palindrome by comparing the characters at the current position and the mirror\
    \ position.\n    # If the characters are the\nusing Test\n\n@testset begin\n\n\
    candidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"\
    xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmplz0tr6t9.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmplz0tr6t9.jl:1\n\
    in expression starting at /tmp/tmplz0tr6t9.jl:1\n"
  stdout: ''
  timestamp: 1659805713
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # find the longest\
    \ palindromic suffix\n    suffix = longest_palindromic_suffix(string)\n    # reverse\
    \ the prefix that comes before the palindromic suffix\n    prefix = reverse(string[1:end-length(suffix)])\n\
    \    return string * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpwc0wqu9h.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpwc0wqu9h.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwc0wqu9h.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwc0wqu9h.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwc0wqu9h.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpwc0wqu9h.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwc0wqu9h.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwc0wqu9h.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwc0wqu9h.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpwc0wqu9h.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwc0wqu9h.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwc0wqu9h.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwc0wqu9h.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpwc0wqu9h.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwc0wqu9h.jl:17"
  timestamp: 1659805715
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix.\n    longest_palindromic_suffix = find_longest_palindromic_suffix(string)\n\
    \    # Reverse the string prefix that comes before the palindromic suffix.\n \
    \   prefix_to_reverse = string[1:end-length(longest_palindromic_suffix)]\n   \
    \ return string * reverse(prefix_to_reverse)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"\
    xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpeuar2k6r.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpeuar2k6r.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpeuar2k6r.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeuar2k6r.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeuar2k6r.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpeuar2k6r.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpeuar2k6r.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeuar2k6r.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeuar2k6r.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpeuar2k6r.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpeuar2k6r.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeuar2k6r.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeuar2k6r.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpeuar2k6r.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /t"
  timestamp: 1659805714
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    if is_palindrome(string)\n\
    \        return string\n    end\n    return string * reverse(string[1:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpoumujjk0.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpoumujjk0.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpoumujjk0.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoumujjk0.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoumujjk0.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpoumujjk0.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpoumujjk0.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoumujjk0.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoumujjk0.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpoumujjk0.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpoumujjk0.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoumujjk0.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoumujjk0.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpoumujjk0.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpoumujjk0.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805715
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # The longest common prefix\
    \ of the string and its reverse is the longest palindromic suffix of the string.\n\
    \    # This is because the longest common prefix of the string and its reverse\
    \ is the longest suffix of the string\n    # that is also a prefix of the string\
    \ reverse.\n    # Since the string reverse is the string itself, the longest common\
    \ prefix of the string and its reverse\n    # is the longest suffix of the string\
    \ that is also a prefix of the string.\n    # Since the string is a palindrome,\
    \ the longest common prefix of the string and its reverse is the longest\n   \
    \ # palindromic suffix of the string.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is done\
    \ by finding the longest common prefix of the string and its reverse.\n    # This\
    \ is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and its reverse.\n    # This is done by finding the longest common prefix of\
    \ the string and its reverse.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is done\
    \ by finding the longest common prefix of the string and its reverse.\n    # This\
    \ is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and its reverse.\n    # This is done by finding the longest common prefix of\
    \ the string and its reverse.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    #\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2vzkr8o4.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2vzkr8o4.jl:1\n\
    in expression starting at /tmp/tmp2vzkr8o4.jl:1\n"
  stdout: ''
  timestamp: 1659805713
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    n = length(string)\n    if n == 0\n        return \"\"\n    end\n    if\
    \ n == 1\n        return string\n    end\n    # Find the longest palindromic suffix\n\
    \    for i = n:-1:1\n        if is_palindrome(string[i:end])\n            return\
    \ string * reverse(string[1:i])\n        end\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpo5ewy4gb.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmpo5ewy4gb.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpo5ewy4gb.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo5ewy4gb.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo5ewy4gb.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpo5ewy4gb.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpo5ewy4gb.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo5ewy4gb.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo5ewy4gb.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpo5ewy4gb.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpo5ewy4gb.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo5ewy4gb.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo5ewy4gb.jl:31\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      3      5\n"
  timestamp: 1659805714
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # find the longest\
    \ palindromic suffix\n    suffix = longest_palindromic_suffix(string)\n    # reverse\
    \ the prefix that comes before the palindromic suffix\n    prefix = reverse(string[1:end-length(suffix)])\n\
    \    return string * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpwc0wqu9h.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpwc0wqu9h.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwc0wqu9h.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwc0wqu9h.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwc0wqu9h.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpwc0wqu9h.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwc0wqu9h.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwc0wqu9h.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwc0wqu9h.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpwc0wqu9h.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwc0wqu9h.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwc0wqu9h.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwc0wqu9h.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpwc0wqu9h.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwc0wqu9h.jl:17"
  timestamp: 1659805715
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    # Find the longest postfix of supplied string that is a palindrome.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done in O(n) time using the KMP algorithm.\n    # See\
    \ https://en.wikipedia.org/wiki/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm\n\
    \    # for more details.\n    #\n    # The algorithm is implemented in the function\
    \ `lcp` below.\n    #\n    # The algorithm works by building a table of prefixes\
    \ of the string.\n    # The table is built in O(n) time.\n    # The table is used\
    \ to find the longest common prefix of the string and its reverse.\n    # This\
    \ is done in O(n) time as well.\n    #\n    # The table is built as follows:\n\
    \    #\n    # The table is an array of integers.\n    # The table is initialized\
    \ to all zeros.\n    # The table is built by iterating over the string.\n    #\
    \ At each iteration, the table is updated.\n    # The table is updated as follows:\n\
    \    #\n    # - If the current character of the string is the same as the previous\
    \ character of the string,\n    #   then the current table entry is set to the\
    \ previous table entry plus one.\n    # - Otherwise, the current table entry is\
    \ set to zero.\n    #\n    # The table is used as follows:\n    #\n    # The table\
    \ is used to find the longest common prefix of the string and its reverse.\n \
    \   # The table is used by iterating over the string and its reverse.\n    # At\
    \ each iteration, the table is used to determine the next character of the string\
    \ and its reverse.\n    # The table is used as follows:\n    #\n    # - If the\
    \ current character of the string is the same as the current character of the\
    \ reverse,\n    #   then the current table entry is incremented.\n    # - Otherwise,\
    \ the current table entry is set to zero.\n    #\n    # The longest common prefix\
    \ of the string and its reverse is the last table entry.\n    #\n    # The table\
    \ is used as follows:\n    #\n    # - If the current character of the string is\
    \ the same\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpmo_tun4s.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmo_tun4s.jl:1\n\
    in expression starting at /tmp/tmpmo_tun4s.jl:1\n"
  stdout: ''
  timestamp: 1659805713
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix of supplied string that is a palindrome.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is the\
    \ same as finding the longest common suffix of the string and its reverse.\n \
    \   # The longest common suffix of the string and its reverse is the longest palindromic\
    \ suffix of the string.\n    # The longest common suffix of the string and its\
    \ reverse is the same as the longest common prefix of the reverse of the string\
    \ and the reverse of the reverse of the string.\n    # The reverse of the reverse\
    \ of the string is the string itself.\n    # The reverse of the string is the\
    \ string with its characters in reverse order.\n    # The longest common prefix\
    \ of the reverse of the string and the string is the longest palindromic suffix\
    \ of the string.\n    # The longest common prefix of the reverse of the string\
    \ and the string is the same as the longest common suffix of the string and the\
    \ reverse of the string.\n    # The longest common suffix of the string and the\
    \ reverse of the string is the longest palindromic suffix of the string.\n   \
    \ # The longest common suffix of the string and the reverse of the string is the\
    \ same as the longest common prefix of the string and the reverse of the string.\n\
    \    # The longest common prefix of the string and the reverse of the string is\
    \ the longest palindromic suffix of the string.\n    # The longest common prefix\
    \ of the string and the reverse of the string is the same as the longest common\
    \ suffix of the reverse of the string and the string.\n    # The longest common\
    \ suffix of the reverse of the string and the string is the longest palindromic\
    \ suffix of the string.\n    # The longest common suffix of the reverse of the\
    \ string and the string is the same as the longest common prefix of the string\
    \ and the reverse of the string.\n    # The longest common prefix of the string\
    \ and the reverse of the string is the longest palindromic suffix of the string.\n\
    \    # The longest common prefix of the string and the reverse of the string is\
    \ the same as the longest common suffix of the string and the reverse of the string.\n\
    \    # The longest common suffix of the string and the reverse of the string is\
    \ the longest palindromic suffix of the string.\n    # The longest common suffix\
    \ of\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9ca9ggbg.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9ca9ggbg.jl:1\n\
    in expression starting at /tmp/tmp9ca9ggbg.jl:1\n"
  stdout: ''
  timestamp: 1659805713
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    if is_palindrome(string)\n\
    \        return string\n    end\n    # Find the longest palindromic suffix.\n\
    \    suffix = \"\"\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            suffix = string[i:end]\n            break\n        end\n    end\n\
    \    # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    return string * reverse(string[1:length(string)\
    \ - length(suffix)])\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpkchwcnma.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpkchwcnma.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpkchwcnma.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkchwcnma.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkchwcnma.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpkchwcnma.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpkchwcnma.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkchwcnma.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkchwcnma.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpkchwcnma.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpkchwcnma.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkchwcnma.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkchwcnma.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpkchwcnma.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpkchwcnma.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805715
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    palindrome_suffix\
    \ = find_palindrome_suffix(string)\n    return string * reverse(string[1:end-palindrome_suffix])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpss_p2prg.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpss_p2prg.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpss_p2prg.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpss_p2prg.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpss_p2prg.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpss_p2prg.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpss_p2prg.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpss_p2prg.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpss_p2prg.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpss_p2prg.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpss_p2prg.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpss_p2prg.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpss_p2prg.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpss_p2prg.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpss_p2prg.jl:16\n   [2] macro ex"
  timestamp: 1659805715
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * palindrome_suffix\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpgbdry6du.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpgbdry6du.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpgbdry6du.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgbdry6du.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgbdry6du.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpgbdry6du.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpgbdry6du.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgbdry6du.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgbdry6du.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpgbdry6du.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpgbdry6du.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgbdry6du.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgbdry6du.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpgbdry6du.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/t"
  timestamp: 1659805716
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix of supplied string that is a palindrome.\n    # We will use the fact\
    \ that the longest palindromic suffix of a string is the same as the longest palindromic\
    \ prefix of the string's reverse.\n    # So we can find the longest palindromic\
    \ suffix of the string by finding the longest palindromic prefix of the string's\
    \ reverse.\n    # This can be done in linear time using the Manacher's algorithm.\n\
    \    # We will use the Julia implementation of the algorithm from the package\
    \ \"Palindromes.jl\".\n    # The algorithm returns the length of the longest palindromic\
    \ prefix of the string.\n    # We will use this length to extract the prefix from\
    \ the string.\n    longest_palindromic_prefix_length = Palindromes.longest_palindromic_prefix(string)\n\
    \    # The prefix that comes before the palindromic suffix is the string without\
    \ the palindromic suffix.\n    prefix = string[1:end-longest_palindromic_prefix_length]\n\
    \    # Append to the end of the string reverse of the prefix.\n    return string\
    \ * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpeyj3p918.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpeyj3p918.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: Palindromes not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpeyj3p918.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeyj3p918.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeyj3p918.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpeyj3p918.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: Palindromes not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpeyj3p918.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeyj3p918.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeyj3p918.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpeyj3p918.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: Palindromes not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpeyj3p918.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeyj3p918.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeyj3p918.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpeyj3p918.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: Palindromes not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpeyj3p918.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/"
  timestamp: 1659805716
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string\n    suffix = longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix of the string that comes before the palindromic suffix\n\
    \    prefix = reverse(string[1:end-length(suffix)])\n    # Append the reversed\
    \ prefix to the end of the string\n    return string * prefix\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpn_qszytx.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpn_qszytx.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpn_qszytx.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn_qszytx.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn_qszytx.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpn_qszytx.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpn_qszytx.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn_qszytx.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn_qszytx.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpn_qszytx.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpn_qszytx.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn_qszytx.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn_qszytx.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpn_qszytx.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpn_qszytx.jl:17"
  timestamp: 1659805716
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpyaf6m1b0.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpyaf6m1b0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpyaf6m1b0.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyaf6m1b0.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyaf6m1b0.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyaf6m1b0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpyaf6m1b0.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyaf6m1b0.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyaf6m1b0.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyaf6m1b0.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpyaf6m1b0.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyaf6m1b0.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyaf6m1b0.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyaf6m1b0.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpyaf6m1b0.jl:16\n   "
  timestamp: 1659805716
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix\n    suffix = longest_palindromic_suffix(string)\n    # Reverse\
    \ the string prefix that comes before the palindromic suffix\n    prefix = reverse(string[1:end-length(suffix)])\n\
    \    # Append the reversed prefix to the end of the string\n    return string\
    \ * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpgafzyxwa.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpgafzyxwa.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpgafzyxwa.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgafzyxwa.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgafzyxwa.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpgafzyxwa.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpgafzyxwa.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgafzyxwa.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgafzyxwa.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpgafzyxwa.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpgafzyxwa.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgafzyxwa.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgafzyxwa.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpgafzyxwa.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpgafzyxwa.jl:17"
  timestamp: 1659805716
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix of supplied string that is a palindrome.\n    palindrome_suffix = find_longest_palindrome_suffix(string)\n\
    \    # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    return string * reverse(string[1:end-palindrome_suffix])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpbh0xau31.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpbh0xau31.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpbh0xau31.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbh0xau31.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbh0xau31.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpbh0xau31.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpbh0xau31.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbh0xau31.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbh0xau31.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpbh0xau31.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpbh0xau31.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbh0xau31.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbh0xau31.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpbh0xau31.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/t"
  timestamp: 1659805716
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if length(string) == 0\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpea427a3p.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpea427a3p.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpea427a3p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpea427a3p.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpea427a3p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpea427a3p.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpea427a3p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpea427a3p.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpea427a3p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpea427a3p.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpea427a3p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpea427a3p.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpea427a3p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpea427a3p.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    # Find the longest postfix of supplied string that is a palindrome.\n\
    \    # This is done by finding the longest common suffix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and its reverse.\n    # This is done by finding the longest common prefix of\
    \ the string and its reverse.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is done\
    \ by finding the longest common prefix of the string and its reverse.\n    # This\
    \ is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and its reverse.\n    # This is done by finding the longest common prefix of\
    \ the string and its reverse.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is done\
    \ by finding the longest common prefix of the string and its reverse.\n    # This\
    \ is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and its reverse.\n    # This is done by finding the longest common prefix of\
    \ the string and its reverse.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is done\
    \ by finding the longest common prefix of the string and its reverse.\n    # This\
    \ is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and its reverse.\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2hsp11dx.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2hsp11dx.jl:1\n\
    in expression starting at /tmp/tmp2hsp11dx.jl:1\n"
  stdout: ''
  timestamp: 1659805715
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix that is a palindrome\n    postfix = longest_palindrome_postfix(string)\n\
    \    # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    return string * reverse(string[1:end-length(postfix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpa2swpehd.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpa2swpehd.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_postfix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpa2swpehd.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa2swpehd.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa2swpehd.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpa2swpehd.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_postfix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpa2swpehd.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa2swpehd.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa2swpehd.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpa2swpehd.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_postfix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpa2swpehd.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa2swpehd.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa2swpehd.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpa2swpehd.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_postfix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpa2swpehd.jl:17"
  timestamp: 1659805716
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # find the longest\
    \ palindromic suffix\n    palindrome_suffix = find_palindrome_suffix(string)\n\
    \    # reverse the prefix\n    prefix = reverse(string[1:end-length(palindrome_suffix)])\n\
    \    return string * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp69kc8f4u.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp69kc8f4u.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp69kc8f4u.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp69kc8f4u.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp69kc8f4u.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp69kc8f4u.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp69kc8f4u.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp69kc8f4u.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp69kc8f4u.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp69kc8f4u.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp69kc8f4u.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp69kc8f4u.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp69kc8f4u.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp69kc8f4u.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp69kc8f4u.jl:17\n   [2] macro ex"
  timestamp: 1659805717
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    palindrome_suffix\
    \ = find_palindrome_suffix(string)\n    return string * reverse(string[1:end-palindrome_suffix])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpss_p2prg.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpss_p2prg.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpss_p2prg.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpss_p2prg.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpss_p2prg.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpss_p2prg.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpss_p2prg.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpss_p2prg.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpss_p2prg.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpss_p2prg.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpss_p2prg.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpss_p2prg.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpss_p2prg.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpss_p2prg.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpss_p2prg.jl:16\n   [2] macro ex"
  timestamp: 1659805715
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix\n    palindrome_suffix = find_longest_palindrome_suffix(string)\n\
    \    # Reverse the prefix that comes before the palindromic suffix\n    prefix\
    \ = reverse(string[1:end-length(palindrome_suffix)])\n    # Append the reversed\
    \ prefix to the end of the string\n    return string * prefix\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpjdv5g1zd.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpjdv5g1zd.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpjdv5g1zd.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjdv5g1zd.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjdv5g1zd.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpjdv5g1zd.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpjdv5g1zd.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjdv5g1zd.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjdv5g1zd.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpjdv5g1zd.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpjdv5g1zd.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjdv5g1zd.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjdv5g1zd.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpjdv5g1zd.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/t"
  timestamp: 1659805718
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    # If the string is already a palindrome,\
    \ then the suffix is the whole string.\n    suffix = longest_palindromic_suffix(string)\n\
    \    # Find the prefix that comes before the palindromic suffix.\n    prefix =\
    \ string[1:end-length(suffix)]\n    # Reverse the prefix and append it to the\
    \ end of the string.\n    return string * reverse(prefix)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpnv037isv.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpnv037isv.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpnv037isv.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnv037isv.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnv037isv.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpnv037isv.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpnv037isv.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnv037isv.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnv037isv.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpnv037isv.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpnv037isv.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnv037isv.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnv037isv.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpnv037isv.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpnv037isv.jl:18"
  timestamp: 1659805718
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp40g_tcdz.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp40g_tcdz.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ M"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    if is_palindrome(string)\n\
    \        return string\n    end\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            return string * reverse(string[1:i-1])\n        end\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpna_ipe0l.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpna_ipe0l.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpna_ipe0l.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpna_ipe0l.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpna_ipe0l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpna_ipe0l.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpna_ipe0l.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpna_ipe0l.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpna_ipe0l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpna_ipe0l.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpna_ipe0l.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpna_ipe0l.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpna_ipe0l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpna_ipe0l.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpna_ipe0l.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    palindrome_suffix = find_longest_palindrome_suffix(string)\n\
    \    # Reverse the string prefix that comes before the palindromic suffix.\n \
    \   prefix = reverse(string[1:end-length(palindrome_suffix)])\n    # Append the\
    \ reversed prefix to the end of the string.\n    return string * prefix\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpaqxwdjju.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpaqxwdjju.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpaqxwdjju.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaqxwdjju.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaqxwdjju.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpaqxwdjju.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpaqxwdjju.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaqxwdjju.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaqxwdjju.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpaqxwdjju.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpaqxwdjju.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaqxwdjju.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaqxwdjju.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpaqxwdjju.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/t"
  timestamp: 1659805718
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    prefix = string[1:end-length(longest_palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1d0ubvk2.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp1d0ubvk2.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix that is a palindrome.\n    # This is the same as finding the longest\
    \ prefix that is a palindrome.\n    # We can do this by reversing the string and\
    \ finding the longest common prefix of the string and its reverse.\n    # This\
    \ is the same as finding the longest common suffix of the string and its reverse.\n\
    \    # We can do this by reversing the string and finding the longest common prefix\
    \ of the string and its reverse.\n    # We can do this by reversing the string\
    \ and finding the longest common prefix of the string and its reverse.\n    #\
    \ We can do this by reversing the string and finding the longest common prefix\
    \ of the string and its reverse.\n    # We can do this by reversing the string\
    \ and finding the longest common prefix of the string and its reverse.\n    #\
    \ We can do this by reversing the string and finding the longest common prefix\
    \ of the string and its reverse.\n    # We can do this by reversing the string\
    \ and finding the longest common prefix of the string and its reverse.\n    #\
    \ We can do this by reversing the string and finding the longest common prefix\
    \ of the string and its reverse.\n    # We can do this by reversing the string\
    \ and finding the longest common prefix of the string and its reverse.\n    #\
    \ We can do this by reversing the string and finding the longest common prefix\
    \ of the string and its reverse.\n    # We can do this by reversing the string\
    \ and finding the longest common prefix of the string and its reverse.\n    #\
    \ We can do this by reversing the string and finding the longest common prefix\
    \ of the string and its reverse.\n    # We can do this by reversing the string\
    \ and finding the longest common prefix of the string and its reverse.\n    #\
    \ We can do this by reversing the string and finding the longest common prefix\
    \ of the string and its reverse.\n    # We can do this by reversing the string\
    \ and finding the longest common prefix of the string and its reverse.\n    #\
    \ We can do this by reversing the string and finding the longest common prefix\
    \ of the string and its reverse.\n    # We can do this by reversing the string\
    \ and finding the longest common prefix of the string and its reverse.\n    #\
    \ We can do this by reversing the string and finding the longest common prefix\
    \ of the string and its reverse.\n    # We can do this by reversing the string\
    \ and finding\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgtz3bq2k.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgtz3bq2k.jl:1\n\
    in expression starting at /tmp/tmpgtz3bq2k.jl:1\n"
  stdout: ''
  timestamp: 1659805716
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpwoz1es6p.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpwoz1es6p.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpwoz1es6p.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpwoz1es6p.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    if string == reverse(string)\n\
    \        return string\n    end\n    longest_palindrome_suffix = find_longest_palindrome_suffix(string)\n\
    \    prefix = string[1:end-length(longest_palindrome_suffix)]\n    return string\
    \ * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpjhuixa41.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpjhuixa41.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpjhuixa41.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjhuixa41.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjhuixa41.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpjhuixa41.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpjhuixa41.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjhuixa41.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjhuixa41.jl:27\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      2      5\n"
  timestamp: 1659805718
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    # This is a string that is a palindrome\
    \ and is a suffix of the string.\n    # For example, for \"cata\" it is \"ata\"\
    .\n    palindromic_suffix = find_longest_palindromic_suffix(string)\n    # Reverse\
    \ the string prefix that comes before the palindromic suffix.\n    # For example,\
    \ for \"cata\" it is \"c\".\n    prefix = reverse(string[1:end-length(palindromic_suffix)])\n\
    \    # Append the reversed prefix to the end of the string.\n    return string\
    \ * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpgeame8yv.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpgeame8yv.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpgeame8yv.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgeame8yv.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgeame8yv.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpgeame8yv.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpgeame8yv.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgeame8yv.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgeame8yv.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpgeame8yv.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpgeame8yv.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgeame8yv.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgeame8yv.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpgeame8yv.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /t"
  timestamp: 1659805718
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string\n    suffix_len = longest_palindromic_suffix(string)\n\
    \    # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    return string * string[1:end-suffix_len]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp4aryo80a.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp4aryo80a.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp4aryo80a.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4aryo80a.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4aryo80a.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp4aryo80a.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp4aryo80a.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4aryo80a.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4aryo80a.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp4aryo80a.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp4aryo80a.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4aryo80a.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4aryo80a.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp4aryo80a.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp4aryo80a.jl:17"
  timestamp: 1659805718
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    # Find the longest postfix that is a palindrome\n    for i in 1:length(string)\n\
    \        if is_palindrome(string[i:end])\n            return string * reverse(string[1:i-1])\n\
    \        end\n    end\n    return string\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"\
    xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmps8_howyq.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmps8_howyq.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmps8_howyq.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps8_howyq.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps8_howyq.jl:25\ntest set:\
    \ Error During Test at /tmp/tmps8_howyq.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmps8_howyq.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps8_howyq.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps8_howyq.jl:25\ntest set:\
    \ Error During Test at /tmp/tmps8_howyq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmps8_howyq.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps8_howyq.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps8_howyq.jl:25\ntest set:\
    \ Error During Test at /tmp/tmps8_howyq.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmps8_howyq.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805718
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    for i in 1:length(string)\n\
    \        if is_palindrome(string[i:end])\n            return string * reverse(string[1:i-1])\n\
    \        end\n    end\n    return string * reverse(string[1:end])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp5csbrtng.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp5csbrtng.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp5csbrtng.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5csbrtng.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5csbrtng.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5csbrtng.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp5csbrtng.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5csbrtng.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5csbrtng.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5csbrtng.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp5csbrtng.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5csbrtng.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5csbrtng.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5csbrtng.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp5csbrtng.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome\
    \ = find_longest_palindrome(string)\n    return string * string[1:end-longest_palindrome]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmptrdz9ex3.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmptrdz9ex3.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmptrdz9ex3.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptrdz9ex3.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptrdz9ex3.jl:23\ntest set:\
    \ Error During Test at /tmp/tmptrdz9ex3.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmptrdz9ex3.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptrdz9ex3.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptrdz9ex3.jl:23\ntest set:\
    \ Error During Test at /tmp/tmptrdz9ex3.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmptrdz9ex3.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptrdz9ex3.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptrdz9ex3.jl:23\ntest set:\
    \ Error During Test at /tmp/tmptrdz9ex3.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmptrdz9ex3.jl:16\n   [2] macr"
  timestamp: 1659805718
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpyaf6m1b0.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpyaf6m1b0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpyaf6m1b0.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyaf6m1b0.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyaf6m1b0.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyaf6m1b0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpyaf6m1b0.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyaf6m1b0.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyaf6m1b0.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyaf6m1b0.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpyaf6m1b0.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyaf6m1b0.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyaf6m1b0.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyaf6m1b0.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpyaf6m1b0.jl:16\n   "
  timestamp: 1659805716
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix that is a palindrome.\n    palindrome_suffix = find_longest_palindrome_suffix(string)\n\
    \    # Reverse the prefix that comes before the palindrome suffix.\n    prefix\
    \ = reverse(string[1:end-length(palindrome_suffix)])\n    return string * prefix\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsfwg8kjm.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpsfwg8kjm.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpsfwg8kjm.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsfwg8kjm.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsfwg8kjm.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpsfwg8kjm.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpsfwg8kjm.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsfwg8kjm.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsfwg8kjm.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpsfwg8kjm.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpsfwg8kjm.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsfwg8kjm.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsfwg8kjm.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpsfwg8kjm.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/t"
  timestamp: 1659805718
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix\n    longest_suffix = longest_palindromic_suffix(string)\n\
    \    # Reverse the string prefix that comes before the palindromic suffix\n  \
    \  reverse_prefix = reverse(string[1:end-length(longest_suffix)])\n    # Append\
    \ the reversed prefix to the end of the string\n    return string * reverse_prefix\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp5p86qy_b.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp5p86qy_b.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp5p86qy_b.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5p86qy_b.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5p86qy_b.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5p86qy_b.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp5p86qy_b.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5p86qy_b.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5p86qy_b.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5p86qy_b.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp5p86qy_b.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5p86qy_b.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5p86qy_b.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5p86qy_b.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp5p86qy_b.jl:17"
  timestamp: 1659805718
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix.\n    suffix = longest_palindromic_suffix(string)\n    #\
    \ Reverse the prefix and append it to the end of the string.\n    return string\
    \ * reverse(string[1:end-length(suffix)])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"\
    xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpfg3cmy03.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpfg3cmy03.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpfg3cmy03.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfg3cmy03.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfg3cmy03.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpfg3cmy03.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpfg3cmy03.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfg3cmy03.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfg3cmy03.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpfg3cmy03.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpfg3cmy03.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfg3cmy03.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfg3cmy03.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpfg3cmy03.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpfg3cmy03.jl:17"
  timestamp: 1659805718
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix of supplied string that is a palindrome.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # The longest\
    \ common prefix of the string and its reverse is the longest palindromic suffix\
    \ of the string.\n    # The longest common prefix of the string and its reverse\
    \ is the same as the longest common suffix of the string and its reverse.\n  \
    \  # The longest common suffix of the string and its reverse is the same as the\
    \ longest common prefix of the reverse of the string and the string.\n    # The\
    \ longest common prefix of the reverse of the string and the string is the same\
    \ as the longest common prefix of the string and the reverse of the string.\n\
    \    # The longest common prefix of the string and the reverse of the string is\
    \ the same as the longest common suffix of the string and the reverse of the string.\n\
    \    # The longest common suffix of the string and the reverse of the string is\
    \ the same as the longest common prefix of the reverse of the string and the string.\n\
    \    # The longest common prefix of the reverse of the string and the string is\
    \ the same as the longest common prefix of the string and its reverse.\n    #\
    \ The longest common prefix of the string and its reverse is the longest palindromic\
    \ suffix of the string.\n    # Find the longest common prefix of the string and\
    \ its reverse.\n    # Find the longest common prefix of the string and the reverse\
    \ of the string.\n    # Find the longest common suffix of the string and the reverse\
    \ of the string.\n    # Find the longest common suffix of the string and its reverse.\n\
    \    # Find the longest common prefix of the reverse of the string and the string.\n\
    \    # Find the longest common prefix of the reverse of the string and the string.\n\
    \    # Find the longest common suffix of the reverse of the string and the string.\n\
    \    # Find the longest common suffix of the reverse of the string and the string.\n\
    \    # Find the longest common prefix of the string and its reverse.\n    # Find\
    \ the longest common prefix of the string and its reverse.\n    # Find the longest\
    \ common suffix of the string and its reverse.\n    # Find the longest common\
    \ suffix of the string and its reverse.\n    # Find the longest common prefix\
    \ of the reverse of the string and the string.\n    # Find\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbsu6eqwu.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbsu6eqwu.jl:1\n\
    in expression starting at /tmp/tmpbsu6eqwu.jl:1\n"
  stdout: ''
  timestamp: 1659805716
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix that is a palindrome.\n    # The postfix is a suffix of the string that\
    \ starts at the end of the string.\n    # The postfix is a prefix of the reverse\
    \ of the string.\n    # The postfix is a palindrome if it is equal to its reverse.\n\
    \    # We can find the longest postfix that is a palindrome by finding the longest\
    \ prefix of the reverse of the string that is a palindrome.\n    # We can find\
    \ the longest prefix of the reverse of the string that is a palindrome by finding\
    \ the longest prefix of the string that is a palindrome.\n    # We can find the\
    \ longest prefix of the string that is a palindrome by finding the longest suffix\
    \ of the string that is a palindrome.\n    # We can find the longest suffix of\
    \ the string that is a palindrome by finding the longest suffix of the reverse\
    \ of the string that is a palindrome.\n    # We can find the longest suffix of\
    \ the reverse of the string that is a palindrome by finding the longest prefix\
    \ of the string that is a palindrome.\n    # We can find the longest prefix of\
    \ the string that is a palindrome by finding the longest prefix of the reverse\
    \ of the string that is a palindrome.\n    # We can find the longest prefix of\
    \ the reverse of the string that is a palindrome by finding the longest prefix\
    \ of the string that is a palindrome.\n    # We can find the longest prefix of\
    \ the string that is a palindrome by finding the longest suffix of the string\
    \ that is a palindrome.\n    # We can find the longest suffix of the string that\
    \ is a palindrome by finding the longest suffix of the reverse of the string that\
    \ is a palindrome.\n    # We can find the longest suffix of the reverse of the\
    \ string that is a palindrome by finding the longest prefix of the string that\
    \ is a palindrome.\n    # We can find the longest prefix of the string that is\
    \ a palindrome by finding the longest prefix of the reverse of the string that\
    \ is a palindrome.\n    # We can find the longest prefix of the reverse of the\
    \ string that is a palindrome by finding the longest prefix of the string that\
    \ is a palindrome.\n    # We\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5unplkpn.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5unplkpn.jl:1\n\
    in expression starting at /tmp/tmp5unplkpn.jl:1\n"
  stdout: ''
  timestamp: 1659805717
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    # This is the longest palindrome that\
    \ ends with the last character of the string.\n    # For example, for \"cat\"\
    \ the longest palindromic suffix is \"t\".\n    # For \"cata\" the longest palindromic\
    \ suffix is \"ata\".\n    # For \"catac\" the longest palindromic suffix is \"\
    catac\".\n    # For \"cataca\" the longest palindromic suffix is \"ataca\".\n\
    \    # For \"catacat\" the longest palindromic suffix is \"catacat\".\n    # For\
    \ \"catacata\" the longest palindromic suffix is \"atacata\".\n    # For \"catacatac\"\
    \ the longest palindromic suffix is \"catacatac\".\n    # For \"catacataca\" the\
    \ longest palindromic suffix is \"atacataca\".\n    # For \"catacatacat\" the\
    \ longest palindromic suffix is \"catacatacat\".\n    # For \"catacatacata\" the\
    \ longest palindromic suffix is \"atacatacata\".\n    # For \"catacatacatac\"\
    \ the longest palindromic suffix is \"catacatacatac\".\n    # For \"catacatacataca\"\
    \ the longest palindromic suffix is \"atacatacataca\".\n    # For \"catacatacatacat\"\
    \ the longest palindromic suffix is \"catacatacatacat\".\n    # For \"catacatacatacata\"\
    \ the longest palindromic suffix is \"atacatacatacata\".\n    # For \"catacatacatacatac\"\
    \ the longest palindromic suffix is \"catacatacatacatac\".\n    # For \"catacatacatacataca\"\
    \ the longest palindromic suffix is \"atacatacatacataca\".\n    # For \"catacatacatacatacat\"\
    \ the longest palindromic suffix is \"catacatacatacatacat\".\n    # For \"catacatacatacatacata\"\
    \ the longest palindromic suffix is \"atac\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu3wrm7pd.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu3wrm7pd.jl:1\n\
    in expression starting at /tmp/tmpu3wrm7pd.jl:1\n"
  stdout: ''
  timestamp: 1659805717
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    # The suffix is a substring that starts\
    \ at the end of the string.\n    # The suffix is a palindrome if it is equal to\
    \ its reverse.\n    # The longest palindromic suffix is the longest suffix that\
    \ is a palindrome.\n    # For example, the longest palindromic suffix of \"catac\"\
    \ is \"catac\".\n    # The longest palindromic suffix of \"cata\" is \"ata\".\n\
    \    # The longest palindromic suffix of \"cat\" is \"t\".\n    # The longest\
    \ palindromic suffix of \"ca\" is \"a\".\n    # The longest palindromic suffix\
    \ of \"c\" is \"c\".\n    # The longest palindromic suffix of \"\" is \"\".\n\
    \    # The longest palindromic suffix of \"cata\" is \"ata\".\n    # The longest\
    \ palindromic suffix of \"catac\" is \"catac\".\n    # The longest palindromic\
    \ suffix of \"cataca\" is \"ataca\".\n    # The longest palindromic suffix of\
    \ \"catacat\" is \"atacat\".\n    # The longest palindromic suffix of \"catacata\"\
    \ is \"atacata\".\n    # The longest palindromic suffix of \"catacatac\" is \"\
    atacatac\".\n    # The longest palindromic suffix of \"catacataca\" is \"atacataca\"\
    .\n    # The longest palindromic suffix of \"catacatacat\" is \"atacatacat\".\n\
    \    # The longest palindromic suffix of \"catacatacata\" is \"atacatacata\".\n\
    \    # The longest palindromic suffix of \"catacatacatac\" is \"atacatacatac\"\
    .\n    # The longest palindromic suffix of \"catacatacataca\" is \"atacatacataca\"\
    .\n    # The longest palindromic suffix of \"catacatacatacat\" is \"atacatacatacat\"\
    .\n    # The longest palindromic suffix of \"catacatacatacata\" is \"atacatacat\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaxlk6ud2.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaxlk6ud2.jl:1\n\
    in expression starting at /tmp/tmpaxlk6ud2.jl:1\n"
  stdout: ''
  timestamp: 1659805718
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    palindrome_suffix = find_longest_palindrome_suffix(string)\n\
    \    # Find the prefix of the string that comes before the palindromic suffix.\n\
    \    prefix = string[1:end-length(palindrome_suffix)]\n    # Reverse the prefix\
    \ and append it to the end of the string.\n    return string * reverse(prefix)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp9qbk14uc.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp9qbk14uc.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp9qbk14uc.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9qbk14uc.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9qbk14uc.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp9qbk14uc.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp9qbk14uc.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9qbk14uc.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9qbk14uc.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp9qbk14uc.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp9qbk14uc.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9qbk14uc.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9qbk14uc.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp9qbk14uc.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/t"
  timestamp: 1659805719
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp4vj7tbwt.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp4vj7tbwt.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp4vj7tbwt.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4vj7tbwt.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4vj7tbwt.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp4vj7tbwt.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp4vj7tbwt.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4vj7tbwt.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4vj7tbwt.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp4vj7tbwt.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp4vj7tbwt.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4vj7tbwt.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4vj7tbwt.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp4vj7tbwt.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/t"
  timestamp: 1659805719
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    n = length(string)\n    if n == 0\n        return \"\"\n    end\n    #\
    \ Find the longest palindromic suffix\n    longest_suffix = \"\"\n    for i in\
    \ 1:n\n        if is_palindrome(string[i:n])\n            longest_suffix = string[i:n]\n\
    \            break\n        end\n    end\n    # Append to the end of the string\
    \ reverse of a string prefix that comes before the palindromic suffix.\n    return\
    \ string * reverse(string[1:n-length(longest_suffix)])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpempad7at.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpempad7at.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpempad7at.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpempad7at.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpempad7at.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpempad7at.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpempad7at.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpempad7at.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpempad7at.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpempad7at.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpempad7at.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpempad7at.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpempad7at.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpempad7at.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpempad7at.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805720
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix\n    suffix = longest_palindromic_suffix(string)\n    # Reverse\
    \ the prefix that comes before the palindromic suffix\n    prefix = reverse(string[1:end-length(suffix)])\n\
    \    return string * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp65ofqh6l.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp65ofqh6l.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp65ofqh6l.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp65ofqh6l.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp65ofqh6l.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp65ofqh6l.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp65ofqh6l.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp65ofqh6l.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp65ofqh6l.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp65ofqh6l.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp65ofqh6l.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp65ofqh6l.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp65ofqh6l.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp65ofqh6l.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp65ofqh6l.jl:17"
  timestamp: 1659805720
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    n = length(string)\n    if n == 0\n        return \"\"\n    end\n    #\
    \ Find the longest palindromic suffix of the string.\n    # The suffix is a palindrome\
    \ iff the string is a palindrome.\n    for i in 1:n\n        if is_palindrome(string[1:n-i+1])\n\
    \            return string * reverse(string[1:i])\n        end\n    end\n    #\
    \ If we are here, the string is a palindrome.\n    return string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpp_jy6mjt.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmpp_jy6mjt.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpp_jy6mjt.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp_jy6mjt.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp_jy6mjt.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpp_jy6mjt.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpp_jy6mjt.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp_jy6mjt.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp_jy6mjt.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpp_jy6mjt.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpp_jy6mjt.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp_jy6mjt.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp_jy6mjt.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpp_jy6mjt.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpp_jy6mjt.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805720
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp40g_tcdz.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp40g_tcdz.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ M"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    # If the string is a palindrome, return\
    \ it.\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            return string\n        end\n    end\n    # If the string is not a\
    \ palindrome, find the longest palindromic suffix.\n    # Append to the end of\
    \ the string reverse of a string prefix that comes before the palindromic suffix.\n\
    \    for i in 1:length(string)\n        if is_palindrome(string[1:end-i+1])\n\
    \            return string * reverse(string[1:end-i])\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpxed70d1y.jl:33

    '
  stdout: "test set: Error During Test at /tmp/tmpxed70d1y.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpxed70d1y.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxed70d1y.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxed70d1y.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpxed70d1y.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpxed70d1y.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxed70d1y.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxed70d1y.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpxed70d1y.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpxed70d1y.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxed70d1y.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxed70d1y.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpxed70d1y.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpxed70d1y.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805720
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpyaf6m1b0.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpyaf6m1b0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpyaf6m1b0.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyaf6m1b0.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyaf6m1b0.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyaf6m1b0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpyaf6m1b0.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyaf6m1b0.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyaf6m1b0.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyaf6m1b0.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpyaf6m1b0.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyaf6m1b0.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyaf6m1b0.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyaf6m1b0.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpyaf6m1b0.jl:16\n   "
  timestamp: 1659805716
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    suffix = find_longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix of the string that comes before the palindromic suffix.\n\
    \    prefix = reverse(string[1:end-length(suffix)])\n    # Append the reversed\
    \ prefix to the end of the string.\n    return string * prefix\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp9t_fbffu.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp9t_fbffu.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp9t_fbffu.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9t_fbffu.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9t_fbffu.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp9t_fbffu.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp9t_fbffu.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9t_fbffu.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9t_fbffu.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp9t_fbffu.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp9t_fbffu.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9t_fbffu.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9t_fbffu.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp9t_fbffu.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /t"
  timestamp: 1659805720
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    prefix = string[1:end-length(longest_palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpk8jbw86x.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpk8jbw86x.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpk8jbw86x.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk8jbw86x.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk8jbw86x.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpk8jbw86x.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpk8jbw86x.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk8jbw86x.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk8jbw86x.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpk8jbw86x.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpk8jbw86x.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk8jbw86x.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk8jbw86x.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpk8jbw86x.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpk8jbw86x.jl:16\n   "
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    if is_palindrome(string)\n\
    \        return string\n    end\n    longest_palindrome_suffix = find_longest_palindrome_suffix(string)\n\
    \    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpd0xcdi3r.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpd0xcdi3r.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpd0xcdi3r.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd0xcdi3r.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd0xcdi3r.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpd0xcdi3r.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpd0xcdi3r.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd0xcdi3r.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd0xcdi3r.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpd0xcdi3r.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpd0xcdi3r.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd0xcdi3r.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd0xcdi3r.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpd0xcdi3r.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpd0xcdi3r.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805720
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    n = length(string)\n    if n == 0\n        return \"\"\n    end\n    for\
    \ i in 1:n\n        if is_palindrome(string[1:n-i+1])\n            return string\
    \ * reverse(string[1:i])\n        end\n    end\n    return string * reverse(string[1:n])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsma6or65.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpsma6or65.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpsma6or65.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsma6or65.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsma6or65.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpsma6or65.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpsma6or65.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsma6or65.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsma6or65.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpsma6or65.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpsma6or65.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsma6or65.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsma6or65.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpsma6or65.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpsma6or65.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805715
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix that is a palindrome.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is done\
    \ by finding the longest common prefix of the string and its reverse.\n    # This\
    \ is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and its reverse.\n    # This is done by finding the longest common prefix of\
    \ the string and its reverse.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is done\
    \ by finding the longest common prefix of the string and its reverse.\n    # This\
    \ is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and its reverse.\n    # This is done by finding the longest common prefix of\
    \ the string and its reverse.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is done\
    \ by finding the longest common prefix of the string and its reverse.\n    # This\
    \ is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and its reverse.\n    # This is done by finding the longest common prefix of\
    \ the string and its reverse.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxyhg8s70.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxyhg8s70.jl:1\n\
    in expression starting at /tmp/tmpxyhg8s70.jl:1\n"
  stdout: ''
  timestamp: 1659805718
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    prefix = string[1:end-length(longest_palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1d0ubvk2.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp1d0ubvk2.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix\n    longest_palindromic_suffix = find_longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix that comes before the palindromic suffix\n    prefix\
    \ = reverse(string[1:end-length(longest_palindromic_suffix)])\n    # Append the\
    \ reversed prefix to the end of the string\n    return string * prefix\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp4ei_s9h0.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp4ei_s9h0.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp4ei_s9h0.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ei_s9h0.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ei_s9h0.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp4ei_s9h0.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp4ei_s9h0.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ei_s9h0.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ei_s9h0.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp4ei_s9h0.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp4ei_s9h0.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ei_s9h0.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ei_s9h0.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp4ei_s9h0.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /t"
  timestamp: 1659805720
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if length(string) == 0\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix\n    suffix = longest_palindromic_suffix(string)\n    # Reverse\
    \ the prefix that comes before the suffix\n    prefix = reverse(string[1:end-length(suffix)])\n\
    \    return string * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmprh_83sgq.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmprh_83sgq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmprh_83sgq.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprh_83sgq.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprh_83sgq.jl:26\ntest set:\
    \ Error During Test at /tmp/tmprh_83sgq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmprh_83sgq.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprh_83sgq.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprh_83sgq.jl:26\ntest set:\
    \ Error During Test at /tmp/tmprh_83sgq.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmprh_83sgq.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprh_83sgq.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprh_83sgq.jl:26\ntest set:\
    \ Error During Test at /tmp/tmprh_83sgq.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmprh_83sgq.jl:17"
  timestamp: 1659805720
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpwoz1es6p.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpwoz1es6p.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    suffix = longest_palindromic_suffix(string)\n\
    \    prefix = string[1:end-length(suffix)]\n    return string * reverse(prefix)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpqh13vqjv.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpqh13vqjv.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpqh13vqjv.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqh13vqjv.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqh13vqjv.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpqh13vqjv.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpqh13vqjv.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqh13vqjv.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqh13vqjv.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpqh13vqjv.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpqh13vqjv.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqh13vqjv.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqh13vqjv.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpqh13vqjv.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpqh13vqjv.jl:16"
  timestamp: 1659805721
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    # This is the longest palindrome that\
    \ ends at the end of the string.\n    # This is the longest palindrome that begins\
    \ at the beginning of the string.\n    # This is the longest palindrome that is\
    \ a suffix of the string.\n    # This is the longest palindrome that is a prefix\
    \ of the string.\n    # This is the longest palindrome that is a substring of\
    \ the string.\n    # This is the longest palindrome that is a subsequence of the\
    \ string.\n    # This is the longest palindrome that is a substring of the string.\n\
    \    # This is the longest palindrome that is a subsequence of the string.\n \
    \   # This is the longest palindrome that is a substring of the string.\n    #\
    \ This is the longest palindrome that is a subsequence of the string.\n    # This\
    \ is the longest palindrome that is a substring of the string.\n    # This is\
    \ the longest palindrome that is a subsequence of the string.\n    # This is the\
    \ longest palindrome that is a substring of the string.\n    # This is the longest\
    \ palindrome that is a subsequence of the string.\n    # This is the longest palindrome\
    \ that is a substring of the string.\n    # This is the longest palindrome that\
    \ is a subsequence of the string.\n    # This is the longest palindrome that is\
    \ a substring of the string.\n    # This is the longest palindrome that is a subsequence\
    \ of the string.\n    # This is the longest palindrome that is a substring of\
    \ the string.\n    # This is the longest palindrome that is a subsequence of the\
    \ string.\n    # This is the longest palindrome that is a substring of the string.\n\
    \    # This is the longest palindrome that is a subsequence of the string.\n \
    \   # This is the longest palindrome that is a substring of the string.\n    #\
    \ This is the longest palindrome that is a subsequence of the string.\n    # This\
    \ is the longest palindrome that is a substring of the string.\n    # This is\
    \ the longest palindrome that\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9td0mbpf.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9td0mbpf.jl:1\n\
    in expression starting at /tmp/tmp9td0mbpf.jl:1\n"
  stdout: ''
  timestamp: 1659805719
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix.\n    suffix = longest_palindromic_suffix(string)\n    #\
    \ Reverse the string prefix that comes before the palindromic suffix.\n    prefix\
    \ = reverse(string[1:end-length(suffix)])\n    # Append the reversed prefix to\
    \ the end of the string.\n    return string * prefix\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpkuxghpia.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpkuxghpia.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpkuxghpia.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkuxghpia.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkuxghpia.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpkuxghpia.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpkuxghpia.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkuxghpia.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkuxghpia.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpkuxghpia.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpkuxghpia.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkuxghpia.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkuxghpia.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpkuxghpia.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpkuxghpia.jl:17"
  timestamp: 1659805721
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix\n    longest_palindromic_suffix = \"\"\n    for i in 1:length(string)\n\
    \        if is_palindrome(string[i:end])\n            longest_palindromic_suffix\
    \ = string[i:end]\n            break\n        end\n    end\n    # Append to the\
    \ end of the string reverse of a string prefix that comes before the palindromic\
    \ suffix.\n    return string * reverse(string[1:end-length(longest_palindromic_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmptdkyzz2x.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmptdkyzz2x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmptdkyzz2x.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptdkyzz2x.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptdkyzz2x.jl:31\ntest set:\
    \ Error During Test at /tmp/tmptdkyzz2x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmptdkyzz2x.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptdkyzz2x.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptdkyzz2x.jl:31\ntest set:\
    \ Error During Test at /tmp/tmptdkyzz2x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmptdkyzz2x.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptdkyzz2x.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptdkyzz2x.jl:31\ntest set:\
    \ Error During Test at /tmp/tmptdkyzz2x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmptdkyzz2x.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805721
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix\n    palindrome_suffix = longest_palindrome_suffix(string)\n\
    \    # Reverse the prefix\n    prefix = reverse(string[1:end-length(palindrome_suffix)])\n\
    \    # Append the prefix to the end of the string\n    return string * prefix\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp3pdi9s8y.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp3pdi9s8y.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp3pdi9s8y.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3pdi9s8y.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3pdi9s8y.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp3pdi9s8y.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp3pdi9s8y.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3pdi9s8y.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3pdi9s8y.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp3pdi9s8y.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp3pdi9s8y.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3pdi9s8y.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3pdi9s8y.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp3pdi9s8y.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp3pdi9s8y.jl:17\n   "
  timestamp: 1659805721
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix.\n    # This is done by finding the longest common prefix\
    \ and suffix of the string and its reverse.\n    # This is done in O(n) time using\
    \ KMP algorithm.\n    lcp = longest_common_prefix_suffix(string)\n    # Append\
    \ to the end of the string reverse of a string prefix that comes before the palindromic\
    \ suffix.\n    return string * string[1:end-lcp]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpmzb4d9gc.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpmzb4d9gc.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_common_prefix_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpmzb4d9gc.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmzb4d9gc.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmzb4d9gc.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpmzb4d9gc.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_common_prefix_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpmzb4d9gc.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmzb4d9gc.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmzb4d9gc.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpmzb4d9gc.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_common_prefix_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpmzb4d9gc.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmzb4d9gc.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmzb4d9gc.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpmzb4d9gc.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_common_prefix_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpmzb4d9"
  timestamp: 1659805721
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    prefix = string[1:end-length(longest_palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1d0ubvk2.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp1d0ubvk2.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    # Find the longest postfix that is a palindrome.\n    for i in 1:length(string)\n\
    \        if is_palindrome(string[i:end])\n            return string * reverse(string[1:i-1])\n\
    \        end\n    end\n    return string * reverse(string[1:end])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8cj2x6wn.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp8cj2x6wn.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp8cj2x6wn.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8cj2x6wn.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8cj2x6wn.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8cj2x6wn.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp8cj2x6wn.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8cj2x6wn.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8cj2x6wn.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8cj2x6wn.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp8cj2x6wn.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8cj2x6wn.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8cj2x6wn.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8cj2x6wn.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp8cj2x6wn.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805721
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp40g_tcdz.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp40g_tcdz.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ M"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    if is_palindrome(string)\n\
    \        return string\n    end\n    # Find the longest palindromic suffix.\n\
    \    suffix_len = longest_palindromic_suffix_len(string)\n    # Append to the\
    \ end of the string reverse of a string prefix that comes before the palindromic\
    \ suffix.\n    return string * string[1:end-suffix_len]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpevoj888i.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpevoj888i.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpevoj888i.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpevoj888i.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpevoj888i.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpevoj888i.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpevoj888i.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpevoj888i.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpevoj888i.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpevoj888i.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpevoj888i.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpevoj888i.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpevoj888i.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpevoj888i.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpevoj888i.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805721
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    suffix = longest_palindromic_suffix(string)\n\
    \    # Reverse the string prefix that comes before the palindromic suffix.\n \
    \   prefix = reverse(string[1:end-length(suffix)])\n    # Append the reversed\
    \ prefix to the end of the string.\n    return string * prefix\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp2fbqhbee.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp2fbqhbee.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp2fbqhbee.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2fbqhbee.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2fbqhbee.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp2fbqhbee.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp2fbqhbee.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2fbqhbee.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2fbqhbee.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp2fbqhbee.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp2fbqhbee.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2fbqhbee.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2fbqhbee.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp2fbqhbee.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp2fbqhbee.jl:17"
  timestamp: 1659805715
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    # Find the longest palindromic suffix\n    n = length(string)\n    for\
    \ i in 1:n\n        if is_palindrome(string[i:end])\n            return string\
    \ * reverse(string[1:i-1])\n        end\n    end\n    # If no palindromic suffix\
    \ found, then the string is already a palindrome\n    return string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp0587c58q.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp0587c58q.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp0587c58q.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0587c58q.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0587c58q.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp0587c58q.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp0587c58q.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0587c58q.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0587c58q.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp0587c58q.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp0587c58q.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0587c58q.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0587c58q.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp0587c58q.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp0587c58q.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805721
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    if is_palindrome(string)\n\
    \        return string\n    end\n    return string * reverse(string[1:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpoumujjk0.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpoumujjk0.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpoumujjk0.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoumujjk0.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoumujjk0.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpoumujjk0.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpoumujjk0.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoumujjk0.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoumujjk0.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpoumujjk0.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpoumujjk0.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoumujjk0.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoumujjk0.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpoumujjk0.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpoumujjk0.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805715
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    prefix = string[1:end-length(longest_palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1d0ubvk2.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp1d0ubvk2.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    n = length(string)\n    if n == 0\n        return \"\"\n    end\n    #\
    \ Find the longest palindromic suffix\n    suffix_length = 0\n    for i in 1:n\n\
    \        if is_palindrome(string[i:end])\n            suffix_length = n - i +\
    \ 1\n            break\n        end\n    end\n    # Append the reverse of the\
    \ prefix that comes before the palindromic suffix\n    return string * reverse(string[1:n-suffix_length+1])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpicaars2z.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpicaars2z.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpicaars2z.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpicaars2z.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpicaars2z.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpicaars2z.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpicaars2z.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpicaars2z.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpicaars2z.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpicaars2z.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpicaars2z.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpicaars2z.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpicaars2z.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpicaars2z.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpicaars2z.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805721
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    if longest_palindrome_suffix ==\
    \ string\n        return string\n    end\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpnnc74l16.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpnnc74l16.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpnnc74l16.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnnc74l16.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnnc74l16.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpnnc74l16.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpnnc74l16.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnnc74l16.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnnc74l16.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpnnc74l16.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpnnc74l16.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnnc74l16.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnnc74l16.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpnnc74l16.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/t"
  timestamp: 1659805721
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    # Find the longest postfix of supplied string that is a palindrome.\n\
    \    # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    if string == \"\"\n        return \"\"\n    end\n\
    \    # Find the longest postfix of supplied string that is a palindrome.\n   \
    \ # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    if string == \"\"\n        return \"\"\n    end\n\
    \    # Find the longest postfix of supplied string that is a palindrome.\n   \
    \ # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    if string == \"\"\n        return \"\"\n    end\n\
    \    # Find the longest postfix of supplied string that is a palindrome.\n   \
    \ # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    if string == \"\"\n        return \"\"\n    end\n\
    \    # Find the longest postfix of supplied string that is a palindrome.\n   \
    \ # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    if string == \"\"\n        return \"\"\n    end\n\
    \    # Find the longest postfix of supplied string that is a palindrome.\n   \
    \ # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    if string == \"\"\n        return \"\"\n    end\n\
    \    # Find the longest postfix of supplied string that is a palindrome.\n   \
    \ # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    if string == \"\"\n        return \"\"\n    end\n\
    \    # Find the longest postfix of supplied string that is a palindrome.\n   \
    \ # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    if string == \"\"\n        return \"\"\n    end\n\
    \    # Find the longest postfix of supplied string that is a palindrome.\n   \
    \ # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    if string == \"\"\n        return \"\"\n   \nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp34wnz270.jl:1\nin expression starting at /tmp/tmp34wnz270.jl:1\n"
  stdout: ''
  timestamp: 1659805720
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpwoz1es6p.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpwoz1es6p.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    prefix = string[1:end-length(longest_palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1d0ubvk2.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp1d0ubvk2.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp1d0ubvk2.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1d0ubvk2.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1d0ubvk2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1d0ubvk2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * reverse(string[1:length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsj9uvhny.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpsj9uvhny.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpsj9uvhny.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsj9uvhny.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsj9uvhny.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpsj9uvhny.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpsj9uvhny.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsj9uvhny.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsj9uvhny.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpsj9uvhny.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpsj9uvhny.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsj9uvhny.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsj9uvhny.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpsj9uvhny.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpsj9uvhny.jl:16\n   "
  timestamp: 1659805721
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpwoz1es6p.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpwoz1es6p.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpwoz1es6p.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoz1es6p.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoz1es6p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwoz1es6p.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    if is_palindrome(string)\n\
    \        return string\n    end\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            return string * reverse(string[1:i-1])\n        end\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpna_ipe0l.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpna_ipe0l.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpna_ipe0l.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpna_ipe0l.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpna_ipe0l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpna_ipe0l.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpna_ipe0l.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpna_ipe0l.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpna_ipe0l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpna_ipe0l.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpna_ipe0l.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpna_ipe0l.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpna_ipe0l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpna_ipe0l.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpna_ipe0l.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    n = length(string)\n\
    \    for i in 1:n\n        if is_palindrome(string[i:n])\n            return string\
    \ * reverse(string[1:i-1])\n        end\n    end\n    return string * reverse(string[1:n-1])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpldb7ajsp.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpldb7ajsp.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpldb7ajsp.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpldb7ajsp.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpldb7ajsp.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpldb7ajsp.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpldb7ajsp.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpldb7ajsp.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpldb7ajsp.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpldb7ajsp.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpldb7ajsp.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpldb7ajsp.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpldb7ajsp.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpldb7ajsp.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpldb7ajsp.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805723
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    # Find the longest palindromic suffix\n    longest_palindromic_suffix\
    \ = \"\"\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            longest_palindrome_suffix = string[i:end]\n            break\n  \
    \      end\n    end\n    # Append reverse of string prefix that comes before the\
    \ palindromic suffix\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpnx0g8o0_.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpnx0g8o0_.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpnx0g8o0_.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnx0g8o0_.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnx0g8o0_.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpnx0g8o0_.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpnx0g8o0_.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnx0g8o0_.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnx0g8o0_.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpnx0g8o0_.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpnx0g8o0_.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnx0g8o0_.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnx0g8o0_.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpnx0g8o0_.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpnx0g8o0_.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/"
  timestamp: 1659805723
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix\n    palindrome_suffix = longest_palindrome_suffix(string)\n\
    \    # Reverse the prefix that comes before the palindromic suffix\n    prefix\
    \ = reverse(string[1:end-length(palindrome_suffix)])\n    # Append the reversed\
    \ prefix to the end of the string\n    return string * prefix\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpstykt2s7.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpstykt2s7.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpstykt2s7.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpstykt2s7.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpstykt2s7.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpstykt2s7.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpstykt2s7.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpstykt2s7.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpstykt2s7.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpstykt2s7.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpstykt2s7.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpstykt2s7.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpstykt2s7.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpstykt2s7.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpstykt2s7.jl:17\n   "
  timestamp: 1659805723
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix.\n    # For example, for string \"cata\" the longest palindromic\
    \ suffix is \"a\".\n    # For string \"catac\" the longest palindromic suffix\
    \ is \"catac\".\n    # For string \"cataca\" the longest palindromic suffix is\
    \ \"aca\".\n    suffix_length = longest_palindromic_suffix_length(string)\n  \
    \  # Reverse the prefix that comes before the palindromic suffix.\n    # For example,\
    \ for string \"cata\" the prefix is \"cat\".\n    # For string \"catac\" the prefix\
    \ is \"c\".\n    # For string \"cataca\" the prefix is \"cat\".\n    prefix =\
    \ reverse(string[1:end-suffix_length])\n    # Append the reversed prefix to the\
    \ end of the string.\n    return string * prefix\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmps3siqwke.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmps3siqwke.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix_length\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmps3siqwke.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps3siqwke.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps3siqwke.jl:33\ntest set:\
    \ Error During Test at /tmp/tmps3siqwke.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix_length\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmps3siqwke.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps3siqwke.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps3siqwke.jl:33\ntest set:\
    \ Error During Test at /tmp/tmps3siqwke.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix_length\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmps3siqwke.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps3siqwke.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps3siqwke.jl:33\ntest set:\
    \ Error During Test at /tmp/tmps3siqwke.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix_length\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @"
  timestamp: 1659805723
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    # Find the longest postfix that is a palindrome.\n    for i in length(string):-1:1\n\
    \        if is_palindrome(string[i:end])\n            # Append to the end of the\
    \ string reverse of a string prefix that comes before the palindromic suffix.\n\
    \            return string * reverse(string[1:i])\n        end\n    end\n    return\
    \ string\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpqip29r6x.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpqip29r6x.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpqip29r6x.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqip29r6x.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqip29r6x.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqip29r6x.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpqip29r6x.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqip29r6x.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqip29r6x.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqip29r6x.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpqip29r6x.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqip29r6x.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqip29r6x.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqip29r6x.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpqip29r6x.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805723
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    # This is the longest palindrome that\
    \ ends at the end of the string.\n    suffix_length = longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix of the string that comes before the palindromic suffix.\n\
    \    prefix = reverse(string[1:end-suffix_length])\n    # Append the reversed\
    \ prefix to the end of the string.\n    return string * prefix\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpxi3ltk57.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpxi3ltk57.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpxi3ltk57.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxi3ltk57.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxi3ltk57.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpxi3ltk57.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpxi3ltk57.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxi3ltk57.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxi3ltk57.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpxi3ltk57.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpxi3ltk57.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxi3ltk57.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxi3ltk57.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpxi3ltk57.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpxi3ltk57.jl:18"
  timestamp: 1659805723
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    n = length(string)\n    if n == 0\n        return \"\"\n    end\n    #\
    \ Find the longest postfix that is a palindrome.\n    for i in 1:n\n        if\
    \ is_palindrome(string[i:n])\n            return string * reverse(string[1:i])\n\
    \        end\n    end\n    # If we got here, the whole string is a palindrome.\n\
    \    return string\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp_ykex7du.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp_ykex7du.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp_ykex7du.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_ykex7du.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_ykex7du.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp_ykex7du.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp_ykex7du.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_ykex7du.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_ykex7du.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp_ykex7du.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp_ykex7du.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_ykex7du.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_ykex7du.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp_ykex7du.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp_ykex7du.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805723
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    # If the string is a palindrome, the\
    \ suffix is the whole string.\n    suffix = find_longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix of the string that comes before the palindromic suffix.\n\
    \    prefix = reverse(string[1:end-length(suffix)])\n    # Append the reversed\
    \ prefix to the end of the string.\n    return string * prefix\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpl6jszcbx.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpl6jszcbx.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpl6jszcbx.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl6jszcbx.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl6jszcbx.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpl6jszcbx.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpl6jszcbx.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl6jszcbx.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl6jszcbx.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpl6jszcbx.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpl6jszcbx.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl6jszcbx.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl6jszcbx.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpl6jszcbx.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /t"
  timestamp: 1659805723
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix.\n    # The algorithm is simple:\n    # - Start with the\
    \ last character of the string.\n    # - Check if the string is a palindrome.\n\
    \    # - If not, remove the last character and check again.\n    # - Repeat until\
    \ the string is a palindrome.\n    # - The remaining string is the longest palindromic\
    \ suffix.\n    suffix = string[end]\n    for i in length(string)-1:-1:1\n    \
    \    if is_palindrome(suffix)\n            break\n        end\n        suffix\
    \ = string[i:end]\n    end\n    # The prefix is the reverse of the suffix.\n \
    \   prefix = reverse(suffix)\n    # The palindrome is the prefix + string + suffix.\n\
    \    return prefix * string * suffix\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpah0kdr0q.jl:37

    '
  stdout: "test set: Error During Test at /tmp/tmpah0kdr0q.jl:41\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  MethodError: no method matching reverse(::Char)\n\
    \  Closest candidates are:\n    reverse(!Matched::Tuple) at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:485\n\
    \    reverse(!Matched::Pair{A, B}) where {A, B} at ~/.conda/envs/polyglot/share/julia/base/pair.jl:48\n\
    \    reverse(!Matched::Union{SubString{String}, String}) at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:166\n\
    \    ...\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpah0kdr0q.jl:31\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpah0kdr0q.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpah0kdr0q.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpah0kdr0q.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpah0kdr0q.jl:25\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpah0kdr0q.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpah0kdr0q.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpah0kdr0q.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpah0kdr0q.jl:25\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpah0kdr0q.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] to"
  timestamp: 1659805724
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix of supplied string that is a palindrome.\n    # The idea is to try to\
    \ match the string with its reverse.\n    # If the string is a palindrome, then\
    \ the whole string will match.\n    # Otherwise, the first mismatch will be the\
    \ end of the palindromic suffix.\n    # We can find the longest palindromic suffix\
    \ in O(n) time.\n    # We can do it by comparing the string with its reverse.\n\
    \    # If the string is a palindrome, then the whole string will match.\n    #\
    \ Otherwise, the first mismatch will be the end of the palindromic suffix.\n \
    \   # We can find the longest palindromic suffix in O(n) time.\n    # We can do\
    \ it by comparing the string with its reverse.\n    # If the string is a palindrome,\
    \ then the whole string will match.\n    # Otherwise, the first mismatch will\
    \ be the end of the palindromic suffix.\n    # We can find the longest palindromic\
    \ suffix in O(n) time.\n    # We can do it by comparing the string with its reverse.\n\
    \    # Otherwise, the first mismatch will be the end of the palindromic suffix.\n\
    \    # We can find the longest palindromic suffix in O(n) time.\n    # We can\
    \ do it by comparing the string with its reverse.\n    # Otherwise, the first\
    \ mismatch will be the end of the palindromic suffix.\n    # We can find the longest\
    \ palindromic suffix in O(n) time.\n    # We can do it by comparing the string\
    \ with its reverse.\n    # Otherwise, the first mismatch will be the end of the\
    \ palindromic suffix.\n    # We can find the longest palindromic suffix in O(n)\
    \ time.\n    # We can do it by comparing the string with its reverse.\n    # Otherwise,\
    \ the first mismatch will be the end of the palindromic suffix.\n    # We can\
    \ find the longest palindromic suffix in O(n) time.\n    # We can do it by comparing\
    \ the string with its reverse.\n    # Otherwise, the first mismatch will be the\
    \ end of the palindromic suffix.\n    #\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnhzmreq5.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnhzmreq5.jl:1\n\
    in expression starting at /tmp/tmpnhzmreq5.jl:1\n"
  stdout: ''
  timestamp: 1659805722
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix that is a palindrome.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is a well-known problem that\
    \ can be solved in linear time.\n    # See https://en.wikipedia.org/wiki/Longest_common_prefix#Linear_time_solution\n\
    \    n = length(string)\n    reverse_string = reverse(string)\n    lcp = z_algorithm(string\
    \ * \"|\" * reverse_string)[n+1:end]\n    # Append to the end of the string reverse\
    \ of a string prefix that comes before the palindromic suffix.\n    return string\
    \ * reverse(string[1:n-length(lcp)+1])\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"\
    xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpdm7ba319.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpdm7ba319.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: z_algorithm not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpdm7ba319.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdm7ba319.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdm7ba319.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpdm7ba319.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: z_algorithm not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpdm7ba319.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdm7ba319.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdm7ba319.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpdm7ba319.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: z_algorithm not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpdm7ba319.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdm7ba319.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdm7ba319.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpdm7ba319.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: z_algorithm not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpdm7ba319.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/"
  timestamp: 1659805723
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix that is a palindrome.\n    # This is a simple linear search.\n    #\
    \ We could use a more sophisticated algorithm to find the longest palindrome in\
    \ linear time.\n    # But this is not the point of this exercise.\n    for i =\
    \ length(string):-1:1\n        if is_palindrome(string[i:end])\n            return\
    \ string * reverse(string[1:i])\n        end\n    end\n    # If we got here, then\
    \ the string is already a palindrome.\n    return string\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp5od7l_ya.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp5od7l_ya.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp5od7l_ya.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5od7l_ya.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5od7l_ya.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp5od7l_ya.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp5od7l_ya.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5od7l_ya.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5od7l_ya.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp5od7l_ya.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp5od7l_ya.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5od7l_ya.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5od7l_ya.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp5od7l_ya.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp5od7l_ya.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805723
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp40g_tcdz.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp40g_tcdz.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp40g_tcdz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40g_tcdz.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40g_tcdz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp40g_tcdz.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ M"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    palindrome_suffix\
    \ = find_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp070lggr1.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp070lggr1.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp070lggr1.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp070lggr1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp070lggr1.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp070lggr1.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp070lggr1.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp070lggr1.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp070lggr1.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp070lggr1.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmp070lggr1.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp070lggr1.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp070lggr1.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp070lggr1.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp070lggr1.jl:16\n   [2] macro ex"
  timestamp: 1659805724
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    # Find the longest postfix that is a palindrome.\n    # This is a simple\
    \ O(n^2) algorithm.\n    # It is possible to do this in O(n) time using Manacher's\
    \ algorithm.\n    # But this is a simple problem, so I am not going to bother.\n\
    \    longest_palindrome_postfix = \"\"\n    for i in 1:length(string)\n      \
    \  if is_palindrome(string[i:end])\n            longest_palindrome_postfix = string[i:end]\n\
    \            break\n        end\n    end\n    # Append to the end of the string\
    \ reverse of a string prefix that comes before the palindromic suffix.\n    return\
    \ string * reverse(string[1:end-length(longest_palindrome_postfix)])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpy33g6aon.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmpy33g6aon.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpy33g6aon.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy33g6aon.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy33g6aon.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpy33g6aon.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpy33g6aon.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy33g6aon.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy33g6aon.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpy33g6aon.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpy33g6aon.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy33g6aon.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy33g6aon.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpy33g6aon.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpy33g6aon.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805724
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix\n    suffix = longest_palindromic_suffix(string)\n    # Reverse\
    \ the prefix that comes before the suffix\n    prefix = reverse(string[1:end-length(suffix)])\n\
    \    # Append the prefix to the end of the string\n    return string * prefix\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp9hvf3qh3.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp9hvf3qh3.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp9hvf3qh3.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9hvf3qh3.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9hvf3qh3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp9hvf3qh3.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp9hvf3qh3.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9hvf3qh3.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9hvf3qh3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp9hvf3qh3.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp9hvf3qh3.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9hvf3qh3.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9hvf3qh3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp9hvf3qh3.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp9hvf3qh3.jl:17"
  timestamp: 1659805724
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-palindrome_suffix])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp9m6uceui.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp9m6uceui.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp9m6uceui.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9m6uceui.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9m6uceui.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp9m6uceui.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp9m6uceui.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9m6uceui.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9m6uceui.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp9m6uceui.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp9m6uceui.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9m6uceui.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9m6uceui.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp9m6uceui.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/t"
  timestamp: 1659805724
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    if is_palindrome(string)\n\
    \        return string\n    end\n    longest_palindrome_suffix = find_longest_palindrome_suffix(string)\n\
    \    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpd0xcdi3r.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpd0xcdi3r.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpd0xcdi3r.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd0xcdi3r.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd0xcdi3r.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpd0xcdi3r.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpd0xcdi3r.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd0xcdi3r.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd0xcdi3r.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpd0xcdi3r.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpd0xcdi3r.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd0xcdi3r.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd0xcdi3r.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpd0xcdi3r.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpd0xcdi3r.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805720
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix of the string.\n    # The suffix is the part of the string\
    \ that comes after the palindromic prefix.\n    # For example, the suffix of \"\
    catac\" is \"catac\".\n    # The suffix of \"cata\" is \"ata\".\n    # The suffix\
    \ of \"cat\" is \"t\".\n    # The suffix of \"ca\" is \"a\".\n    # The suffix\
    \ of \"c\" is \"\".\n    suffix = longest_palindromic_suffix(string)\n    # Find\
    \ the prefix of the string that comes before the palindromic suffix.\n    # For\
    \ example, the prefix of \"catac\" is \"c\".\n    # The prefix of \"cata\" is\
    \ \"ca\".\n    # The prefix of \"cat\" is \"cat\".\n    # The prefix of \"ca\"\
    \ is \"ca\".\n    # The prefix of \"c\" is \"c\".\n    prefix = string[1:end-length(suffix)]\n\
    \    # Reverse the prefix.\n    # For example, the reverse of \"c\" is \"c\".\n\
    \    # The reverse of \"ca\" is \"ac\".\n    # The reverse of \"cat\" is \"tac\"\
    .\n    # The reverse of \"cata\" is \"atac\".\n    # The reverse of \"catac\"\
    \ is \"catac\".\n    reversed_prefix = reverse(prefix)\n    # Append the reversed\
    \ prefix to the end of the string.\n    return string * reversed_prefix\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpz3mutmj2.jl:43

    '
  stdout: "test set: Error During Test at /tmp/tmpz3mutmj2.jl:47\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpz3mutmj2.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz3mutmj2.jl:47 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz3mutmj2.jl:45\ntest set:\
    \ Error During Test at /tmp/tmpz3mutmj2.jl:48\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpz3mutmj2.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz3mutmj2.jl:48 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz3mutmj2.jl:45\ntest set:\
    \ Error During Test at /tmp/tmpz3mutmj2.jl:49\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpz3mutmj2.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz3mutmj2.jl:49 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz3mutmj2.jl:45\ntest set:\
    \ Error During Test at /tmp/tmpz3mutmj2.jl:50\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpz3mutmj2.jl:23"
  timestamp: 1659805724
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ postfix that is a palindrome\n    # and the length of the prefix that comes\
    \ before it.\n    postfix_length, prefix_length = find_palindrome_postfix(string)\n\
    \    # Reverse the prefix and append it to the end of the string.\n    return\
    \ string * string[1:prefix_length]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpfb94z9ha.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpfb94z9ha.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_palindrome_postfix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpfb94z9ha.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfb94z9ha.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfb94z9ha.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpfb94z9ha.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_palindrome_postfix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpfb94z9ha.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfb94z9ha.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfb94z9ha.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpfb94z9ha.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_palindrome_postfix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpfb94z9ha.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfb94z9ha.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfb94z9ha.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpfb94z9ha.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_palindrome_postfix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpfb94z9ha.jl:18\n   [2] macr"
  timestamp: 1659805724
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if length(string) == 0\n        return \"\"\n    end\n    suffix_length\
    \ = longest_palindromic_suffix(string)\n    return string * reverse(string[1:end-suffix_length])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp81tacf1y.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp81tacf1y.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp81tacf1y.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp81tacf1y.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp81tacf1y.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp81tacf1y.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp81tacf1y.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp81tacf1y.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp81tacf1y.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp81tacf1y.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp81tacf1y.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp81tacf1y.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp81tacf1y.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp81tacf1y.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp81tacf1y.jl:16"
  timestamp: 1659805724
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix\n    suffix = longest_palindromic_suffix(string)\n    # Reverse\
    \ the prefix and append it to the end of the string\n    return string * reverse(string[1:end-length(suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmphsnmap_q.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmphsnmap_q.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmphsnmap_q.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphsnmap_q.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphsnmap_q.jl:25\ntest set:\
    \ Error During Test at /tmp/tmphsnmap_q.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmphsnmap_q.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphsnmap_q.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphsnmap_q.jl:25\ntest set:\
    \ Error During Test at /tmp/tmphsnmap_q.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmphsnmap_q.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphsnmap_q.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphsnmap_q.jl:25\ntest set:\
    \ Error During Test at /tmp/tmphsnmap_q.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmphsnmap_q.jl:17"
  timestamp: 1659805711
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw8mrm5rc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw8mrm5rc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmpw8mrm5rc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw8mrm5rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw8mrm5rc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw8mrm5rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(stri"
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix\n    suffix = longest_palindromic_suffix(string)\n    # Reverse\
    \ the prefix that comes before the palindromic suffix\n    prefix = reverse(string[1:end-length(suffix)])\n\
    \    return string * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp65ofqh6l.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp65ofqh6l.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp65ofqh6l.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp65ofqh6l.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp65ofqh6l.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp65ofqh6l.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp65ofqh6l.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp65ofqh6l.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp65ofqh6l.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp65ofqh6l.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp65ofqh6l.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp65ofqh6l.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp65ofqh6l.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp65ofqh6l.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main\
    \ /tmp/tmp65ofqh6l.jl:17"
  timestamp: 1659805720
- exit_code: 1
  program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome(\"\
    \")\n    \"\"\n    >>> make_palindrome(\"cat\")\n    \"catac\"\n    >>> make_palindrome(\"\
    cata\")\n    \"catac\"\n    \"\"\"\nfunction make_palindrome(string::String)::String\
    \ \n    if string == \"\"\n        return \"\"\n    end\n    if is_palindrome(string)\n\
    \        return string\n    end\n    longest_palindrome_suffix = find_longest_palindrome_suffix(string)\n\
    \    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpd0xcdi3r.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpd0xcdi3r.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpd0xcdi3r.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd0xcdi3r.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd0xcdi3r.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpd0xcdi3r.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpd0xcdi3r.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd0xcdi3r.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd0xcdi3r.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpd0xcdi3r.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpd0xcdi3r.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd0xcdi3r.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd0xcdi3r.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpd0xcdi3r.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(string::String)\n     @ Main /tmp/tmpd0xcdi3r.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1659805720

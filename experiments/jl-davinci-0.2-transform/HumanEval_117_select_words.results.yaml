language: jl
name: HumanEval_117_select_words
results:
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s, \" \")\n    result = []\n    for word in words\n    \
    \    if count_consonants(word) == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpm8uyksud.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpm8uyksud.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpm8uyksud.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpm8uyksud.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm8uyksud.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpm8uyksud.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpm8uyksud.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpm8uyksud.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm8uyksud.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpm8uyksud.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpm8uyksud.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpm8uyksud.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm8uyksud.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpm8uyksud.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp11dsajyq.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp11dsajyq.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s, \" \")\n    result = []\n    for word in words\n    \
    \    if count_consonants(word) == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpm8uyksud.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpm8uyksud.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpm8uyksud.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpm8uyksud.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm8uyksud.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpm8uyksud.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpm8uyksud.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpm8uyksud.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm8uyksud.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpm8uyksud.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpm8uyksud.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpm8uyksud.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm8uyksud.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpm8uyksud.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp11dsajyq.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp11dsajyq.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp11dsajyq.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp11dsajyq.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s, \" \")\n    result = []\n    for word in words\n    \
    \    if count_consonants(word) == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpm8uyksud.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpm8uyksud.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpm8uyksud.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpm8uyksud.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm8uyksud.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpm8uyksud.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpm8uyksud.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpm8uyksud.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm8uyksud.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpm8uyksud.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpm8uyksud.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpm8uyksud.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm8uyksud.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpm8uyksud.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s, r\"\\s+\")\n    result = []\n    for word in words\n\
    \        if count_consonants(word) == n\n            push!(result, word)\n   \
    \     end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp8doi3nks.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp8doi3nks.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp8doi3nks.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp8doi3nks.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8doi3nks.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp8doi3nks.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp8doi3nks.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp8doi3nks.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8doi3nks.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp8doi3nks.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp8doi3nks.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp8doi3nks.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8doi3nks.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp8doi3nks.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp11dsajyq.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp11dsajyq.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\"\
    , \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"v\", \"w\", \"x\", \"y\", \"z\"]\n    result = []\n    for word in words\n\
    \        count = 0\n        for letter in word\n            if letter in consonants\n\
    \                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpltjgfx33.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpltjgfx33.jl:40\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpltjgfx33.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpltjgfx33.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpltjgfx33.jl:41\n  Expression: candidate(\"Mary had a little\
    \ lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: String[] == [\"Mary\", \"\
    lamb\"]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpltjgfx33.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpltjgfx33.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpltjgfx33.jl:43\n  Expression: candidate(\"Hello world\", 4)\
    \ == [\"world\"]\n   Evaluated: String[] == [\"world\"]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpltjgfx33.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpltjgfx33.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpltjgfx33.jl:44\n  Expression: candidate(\"Uncle sam\", 3)\
    \ == [\"Uncle\"]\n   Evaluated: String[] == [\"Uncle\"]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpltjgfx33.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpltjgfx33.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpltjgfx33.jl:46\n  Expression: candidate(\"a b c d e f\", 1)\
    \ == [\"b\", \""
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp11dsajyq.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp11dsajyq.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp11dsajyq.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp11dsajyq.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp11dsajyq.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp11dsajyq.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp11dsajyq.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp11dsajyq.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp11dsajyq.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp11dsajyq.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp11dsajyq.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp11dsajyq.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp11dsajyq.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp11dsajyq.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp11dsajyq.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp11dsajyq.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp11dsajyq.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp11dsajyq.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp11dsajyq.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp11dsajyq.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
    ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
    ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
    Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n \
    \   [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
    \ \n    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp11dsajyq.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp11dsajyq.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp11dsajyq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp11dsajyq.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11dsajyq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp11dsajyq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"

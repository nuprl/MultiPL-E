language: jl
name: HumanEval_85_add
results:
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            sum += lst[i]\n       \
    \ end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr7pwbs6q.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpr7pwbs6q.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7pwbs6q.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7pwbs6q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpr7pwbs6q.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7pwbs6q.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7pwbs6q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpr7pwbs6q.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7pwbs6q.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7pwbs6q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpr7pwbs6q.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7pwbs6q.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7pwbs6q.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfak1l4t6.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpfak1l4t6.jl:17\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfak1l4t6.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfak1l4t6.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpfak1l4t6.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfak1l4t6.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfak1l4t6.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 2:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxyf980ck.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpxyf980ck.jl:21\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxyf980ck.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxyf980ck.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpxyf980ck.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxyf980ck.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxyf980ck.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            if lst[i] % 2 == 0\n  \
    \              sum += lst[i]\n            end\n        end\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1xaohpvf.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp1xaohpvf.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if (i % 2 == 1) && (lst[i] % 2 == 0)\n           \
    \ sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppwmu710h.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmppwmu710h.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppwmu710h.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppwmu710h.jl:21\ntest set: Test\
    \ Failed at /tmp/tmppwmu710h.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppwmu710h.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppwmu710h.jl:21\ntest set: Test\
    \ Failed at /tmp/tmppwmu710h.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppwmu710h.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppwmu710h.jl:21\ntest set: Test\
    \ Failed at /tmp/tmppwmu710h.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppwmu710h.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppwmu710h.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            if lst[i] % 2 == 0\n  \
    \              sum += lst[i]\n            end\n        end\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1xaohpvf.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp1xaohpvf.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            if lst[i] % 2 == 0\n  \
    \              sum += lst[i]\n            end\n        end\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1xaohpvf.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp1xaohpvf.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            if lst[i] % 2 == 0\n  \
    \              sum += lst[i]\n            end\n        end\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1xaohpvf.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp1xaohpvf.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if lst[i] % 2 == 0 && i % 2 != 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo6z07sjc.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpo6z07sjc.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6z07sjc.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6z07sjc.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo6z07sjc.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6z07sjc.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6z07sjc.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo6z07sjc.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6z07sjc.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6z07sjc.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo6z07sjc.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6z07sjc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6z07sjc.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            if lst[i] % 2 == 0\n  \
    \              sum += lst[i]\n            end\n        end\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1xaohpvf.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp1xaohpvf.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            if lst[i] % 2 == 0\n  \
    \              sum += lst[i]\n            end\n        end\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1xaohpvf.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp1xaohpvf.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            if lst[i] % 2 == 0\n  \
    \              sum += lst[i]\n            end\n        end\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1xaohpvf.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp1xaohpvf.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for (i,\
    \ x) in enumerate(lst)\n        if i % 2 == 1 && x % 2 == 0\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphmyhpn5k.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmphmyhpn5k.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphmyhpn5k.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphmyhpn5k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmphmyhpn5k.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphmyhpn5k.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphmyhpn5k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmphmyhpn5k.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphmyhpn5k.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphmyhpn5k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmphmyhpn5k.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphmyhpn5k.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphmyhpn5k.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            if lst[i] % 2 == 0\n  \
    \              sum += lst[i]\n            end\n        end\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1xaohpvf.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp1xaohpvf.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            sum += lst[i]\n       \
    \ end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr7pwbs6q.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpr7pwbs6q.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7pwbs6q.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7pwbs6q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpr7pwbs6q.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7pwbs6q.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7pwbs6q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpr7pwbs6q.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7pwbs6q.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7pwbs6q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpr7pwbs6q.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7pwbs6q.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7pwbs6q.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    total = 0\n    for\
    \ i in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            total\
    \ += lst[i]\n        end\n    end\n    return total\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpclv3bq3r.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpclv3bq3r.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpclv3bq3r.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpclv3bq3r.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpclv3bq3r.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpclv3bq3r.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpclv3bq3r.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpclv3bq3r.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpclv3bq3r.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpclv3bq3r.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpclv3bq3r.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpclv3bq3r.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpclv3bq3r.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if (i % 2 != 0) && (lst[i] % 2 == 0)\n           \
    \ sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvtyeexl8.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpvtyeexl8.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvtyeexl8.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvtyeexl8.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpvtyeexl8.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvtyeexl8.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvtyeexl8.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpvtyeexl8.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvtyeexl8.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvtyeexl8.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpvtyeexl8.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvtyeexl8.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvtyeexl8.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800032
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            if lst[i] % 2 == 0\n  \
    \              sum += lst[i]\n            end\n        end\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1xaohpvf.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp1xaohpvf.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            sum += lst[i]\n       \
    \ end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr7pwbs6q.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpr7pwbs6q.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7pwbs6q.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7pwbs6q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpr7pwbs6q.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7pwbs6q.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7pwbs6q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpr7pwbs6q.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7pwbs6q.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7pwbs6q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpr7pwbs6q.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7pwbs6q.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7pwbs6q.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            if lst[i] % 2 == 0\n  \
    \              sum += lst[i]\n            end\n        end\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1xaohpvf.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp1xaohpvf.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            if lst[i] % 2 == 0\n  \
    \              sum += lst[i]\n            end\n        end\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1xaohpvf.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp1xaohpvf.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    result = 0\n    for\
    \ i in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            result\
    \ += lst[i]\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmtoexnwz.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpmtoexnwz.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtoexnwz.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtoexnwz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpmtoexnwz.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtoexnwz.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtoexnwz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpmtoexnwz.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtoexnwz.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtoexnwz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpmtoexnwz.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtoexnwz.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtoexnwz.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfak1l4t6.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpfak1l4t6.jl:17\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfak1l4t6.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfak1l4t6.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpfak1l4t6.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfak1l4t6.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfak1l4t6.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hedos1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hedos1.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq4hedos1.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hedos1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hedos1.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if lst[i] % 2 == 0 && i % 2 != 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo6z07sjc.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpo6z07sjc.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6z07sjc.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6z07sjc.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo6z07sjc.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6z07sjc.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6z07sjc.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo6z07sjc.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6z07sjc.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6z07sjc.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo6z07sjc.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6z07sjc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6z07sjc.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            if lst[i] % 2 == 0\n  \
    \              sum += lst[i]\n            end\n        end\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1xaohpvf.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp1xaohpvf.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1xaohpvf.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xaohpvf.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xaohpvf.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659800031
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp956sn39v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp956sn39v.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp956sn39v.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp956sn39v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp956sn39v.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"

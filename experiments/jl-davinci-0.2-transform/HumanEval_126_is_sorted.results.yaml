language: jl
name: HumanEval_126_is_sorted
results:
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss1e6jdw.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpss1e6jdw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpss1e6jdw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss1e6jdw.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpss1e6jdw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpss1e6jdw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss1e6jdw.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpss1e6jdw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpss1e6jdw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsl49cm_c.jl:34

    '
  stdout: "test set: Test Failed at /tmp/tmpsl49cm_c.jl:46\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsl49cm_c.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsl49cm_c.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpsl49cm_c.jl:47\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsl49cm_c.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsl49cm_c.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss1e6jdw.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpss1e6jdw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpss1e6jdw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss1e6jdw.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpss1e6jdw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpss1e6jdw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss1e6jdw.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpss1e6jdw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpss1e6jdw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss1e6jdw.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpss1e6jdw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpss1e6jdw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss1e6jdw.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpss1e6jdw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpss1e6jdw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss1e6jdw.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpss1e6jdw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpss1e6jdw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss1e6jdw.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpss1e6jdw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpss1e6jdw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 2:length(lst)\n        if lst[i-1]\
    \ >= lst[i]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr6ifxdk2.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpr6ifxdk2.jl:51\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr6ifxdk2.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr6ifxdk2.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss1e6jdw.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpss1e6jdw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpss1e6jdw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss1e6jdw.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpss1e6jdw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpss1e6jdw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss1e6jdw.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpss1e6jdw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpss1e6jdw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss1e6jdw.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpss1e6jdw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpss1e6jdw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss1e6jdw.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpss1e6jdw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpss1e6jdw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss1e6jdw.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpss1e6jdw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpss1e6jdw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss1e6jdw.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpss1e6jdw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpss1e6jdw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss1e6jdw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss1e6jdw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
- exit_code: 1
  program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n    >>>\
    \ is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2, 2, 3,\
    \ 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n    \"\"\
    \"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst) == 1\n \
    \       return true\n    end\n    for i in 2:length(lst)\n        if lst[i] <\
    \ lst[i-1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyi7d6_t6.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpyi7d6_t6.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyi7d6_t6.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyi7d6_t6.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpyi7d6_t6.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyi7d6_t6.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyi7d6_t6.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"

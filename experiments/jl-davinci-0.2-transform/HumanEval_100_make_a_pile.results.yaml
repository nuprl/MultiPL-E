language: jl
name: HumanEval_100_make_a_pile
results:
- exit_code: -1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # Initialize the vector\
    \ with the first level\n    pile = [n]\n    # Loop until the last level has only\
    \ one stone\n    while pile[end] != 1\n        # If the last level has an odd\
    \ number of stones, the next level will\n        # have the next odd number of\
    \ stones\n        if isodd(pile[end])\n            push!(pile, pile[end] + 2)\n\
    \        # If the last level has an even number of stones, the next level will\n\
    \        # have the next even number of stones\n        else\n            push!(pile,\
    \ pile[end] + 1)\n        end\n    end\n    return pile\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # Your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8zrgv6pl.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp8zrgv6pl.jl:22\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp8zrgv6pl.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8zrgv6pl.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8zrgv6pl.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp8zrgv6pl.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp8zrgv6pl.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8zrgv6pl.jl:23 [inlined]\n\
    \   [4] macro expansion\n"
- exit_code: -1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ make_a_pile(n+1)\n\
    \        else\n            return [n] .+ make_a_pile(n-1)\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = Vector{Int64}(undef,\
    \ n)\n    stones[1] = n\n    for i in 2:n\n        stones[i] = stones[i-1] + 2*(i%2)\
    \ - 1\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk4bxklsp.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpk4bxklsp.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 3] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk4bxklsp.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk4bxklsp.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpk4bxklsp.jl:28\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 4, 3] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk4bxklsp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk4bxklsp.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpk4bxklsp.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 4, 5, 4, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk4bxklsp.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk4bxklsp.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpk4bxklsp.jl:30\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 6, 5, 6, 5] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk4bxklsp.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk4bxklsp.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpk4bxklsp.jl:31\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = [n]\n    while\
    \ levels[end] != 1\n        if levels[end] % 2 == 0\n            push!(levels,\
    \ levels[end] - 1)\n        else\n            push!(levels, levels[end] - 2)\n\
    \        end\n    end\n    return levels\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3tvb5kll.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp3tvb5kll.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3tvb5kll.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3tvb5kll.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3tvb5kll.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3tvb5kll.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3tvb5kll.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3tvb5kll.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3tvb5kll.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3tvb5kll.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3tvb5kll.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3tvb5kll.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3tvb5kll.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3tvb5kll.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] =="
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = Int64[]\n \
    \   for i in 1:n\n        if i == 1\n            push!(result, n)\n        elseif\
    \ i % 2 == 0\n            push!(result, result[end] + 2)\n        else\n     \
    \       push!(result, result[end] + 1)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuyuzebf6.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpuyuzebf6.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 5, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuyuzebf6.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuyuzebf6.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpuyuzebf6.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuyuzebf6.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuyuzebf6.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpuyuzebf6.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 7, 8, 10, 11] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuyuzebf6.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuyuzebf6.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpuyuzebf6.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 9, 11, 12, 14] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuyuzebf6.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuyuzebf6.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpuyuzebf6.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evalua"
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ make_a_pile(n-1)\n\
    \        else\n            return [n] .+ make_a_pile(n-2)\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpj5dlcn0u.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpj5dlcn0u.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [4] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj5dlcn0u.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj5dlcn0u.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpj5dlcn0u.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj5dlcn0u.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj5dlcn0u.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpj5dlcn0u.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj5dlcn0u.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj5dlcn0u.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpj5dlcn0u.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj5dlcn0u.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj5dlcn0u.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpj5dlcn0u.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [24] == [8, 10, 12, 14, 16, 18, 20, 22]\n\
    S"
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .* make_a_pile(n/2)\n\
    \        else\n            return [n] .* make_a_pile(n*3+1)\n        end\n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp0pzhlj9z.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp0pzhlj9z.jl:30\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp0pzhlj9z.jl:14\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp0pzhlj9z.jl:19\n\
    \   [2] make_a_pile(n::Int64)\n     @ Main /tmp/tmp0pzhlj9z.jl:21\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0pzhlj9z.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0pzhlj9z.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp0pzhlj9z.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp0pzhlj9z.jl:14\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp0pzhlj9z.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0pzhlj9z.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0pzhlj9z.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp0pzhlj9z.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp0pzhlj9z.jl:14\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp0pzhlj9z.jl:19\n\
    \   [2] make_a_pile(n::Int64)\n     @ Main /tmp/tmp0pzhlj9z.jl:21\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0pzhlj9z.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shar"
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] > 1\n        if stones[end] % 2 == 0\n            push!(stones,\
    \ stones[end] - 1)\n        else\n            push!(stones, stones[end] - 2)\n\
    \        end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuijiod4e.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpuijiod4e.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuijiod4e.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuijiod4e.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuijiod4e.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuijiod4e.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuijiod4e.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuijiod4e.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuijiod4e.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuijiod4e.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuijiod4e.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuijiod4e.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuijiod4e.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuijiod4e.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] =="
- exit_code: -1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = [n]\n    while\
    \ n > 1\n        n = n % 2 == 0 ? n - 1 : n + 1\n        push!(result, n)\n  \
    \  end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    n_stones = [n]\n   \
    \ while n_stones[end] > 1\n        if n_stones[end] % 2 == 0\n            n_stones\
    \ = [n_stones; n_stones[end] - 1]\n        else\n            n_stones = [n_stones;\
    \ n_stones[end] - 2]\n        end\n    end\n    return n_stones\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpohg_73ho.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpohg_73ho.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpohg_73ho.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpohg_73ho.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpohg_73ho.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpohg_73ho.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpohg_73ho.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpohg_73ho.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpohg_73ho.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpohg_73ho.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpohg_73ho.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpohg_73ho.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpohg_73ho.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpohg_73ho.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] =="
- exit_code: -1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ make_a_pile(n+1)\n\
    \        else\n            return [n] .+ make_a_pile(n-1)\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: -1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    elseif n % 2 == 0\n        return [n; make_a_pile(n+1)]\n    else\n\
    \        return [n; make_a_pile(n+2)]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = [n]\n    while\
    \ levels[end] != 1\n        if levels[end] % 2 == 0\n            push!(levels,\
    \ levels[end] - 1)\n        else\n            push!(levels, levels[end] - 2)\n\
    \        end\n    end\n    return levels\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3tvb5kll.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp3tvb5kll.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3tvb5kll.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3tvb5kll.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3tvb5kll.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3tvb5kll.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3tvb5kll.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3tvb5kll.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3tvb5kll.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3tvb5kll.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3tvb5kll.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3tvb5kll.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3tvb5kll.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3tvb5kll.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] =="
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] != 1\n        if stones[end] % 2 == 0\n            push!(stones,\
    \ stones[end] - 1)\n        else\n            push!(stones, stones[end] - 2)\n\
    \        end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppxymkj09.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmppxymkj09.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppxymkj09.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppxymkj09.jl:29\ntest set: Test\
    \ Failed at /tmp/tmppxymkj09.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppxymkj09.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppxymkj09.jl:29\ntest set: Test\
    \ Failed at /tmp/tmppxymkj09.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppxymkj09.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppxymkj09.jl:29\ntest set: Test\
    \ Failed at /tmp/tmppxymkj09.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppxymkj09.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppxymkj09.jl:29\ntest set: Test\
    \ Failed at /tmp/tmppxymkj09.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] =="
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return vcat(make_a_pile(n-1),\
    \ [n+1])\n        else\n            return vcat(make_a_pile(n-1), [n+2])\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpaclk9a3a.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpaclk9a3a.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 3, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaclk9a3a.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaclk9a3a.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpaclk9a3a.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 3, 5, 5] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaclk9a3a.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaclk9a3a.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpaclk9a3a.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 3, 5, 5, 7] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaclk9a3a.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaclk9a3a.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpaclk9a3a.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 3, 5, 5, 7, 7] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaclk9a3a.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaclk9a3a.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpaclk9a3a.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n < 1\n        return\
    \ []\n    end\n    if n == 1\n        return [1]\n    end\n    if n == 2\n   \
    \     return [2, 3]\n    end\n    if n % 2 == 0\n        return [n, n+2, n+4]\n\
    \    else\n        return [n, n+1, n+3]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_2kyno66.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmp_2kyno66.jl:35\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_2kyno66.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_2kyno66.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_2kyno66.jl:36\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_2kyno66.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_2kyno66.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_2kyno66.jl:37\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_2kyno66.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_2kyno66.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_2kyno66.jl:38\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 10] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_2kyno66.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_2kyno66.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_2kyno66.jl:39\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 10, 12] == [8"
- exit_code: -1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ make_a_pile(n+1)\n\
    \        else\n            return [n] .+ make_a_pile(n-1)\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        return [n] .* make_a_pile(n - 1)\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo4o9_xdn.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpo4o9_xdn.jl:26\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [6] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo4o9_xdn.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo4o9_xdn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo4o9_xdn.jl:27\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [24] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpo4o9_xdn.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo4o9_xdn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo4o9_xdn.jl:28\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [120] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo4o9_xdn.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo4o9_xdn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo4o9_xdn.jl:29\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [720] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo4o9_xdn.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo4o9_xdn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo4o9_xdn.jl:30\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [40320] == [8, 10, 12, 14, 16, 18, 20"
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .* make_a_pile(n/2)\n\
    \        else\n            return [n] .* make_a_pile(n*3+1)\n        end\n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp0pzhlj9z.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp0pzhlj9z.jl:30\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp0pzhlj9z.jl:14\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp0pzhlj9z.jl:19\n\
    \   [2] make_a_pile(n::Int64)\n     @ Main /tmp/tmp0pzhlj9z.jl:21\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0pzhlj9z.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0pzhlj9z.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp0pzhlj9z.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp0pzhlj9z.jl:14\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp0pzhlj9z.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0pzhlj9z.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0pzhlj9z.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp0pzhlj9z.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp0pzhlj9z.jl:14\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp0pzhlj9z.jl:19\n\
    \   [2] make_a_pile(n::Int64)\n     @ Main /tmp/tmp0pzhlj9z.jl:21\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0pzhlj9z.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shar"

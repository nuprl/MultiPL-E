language: jl
name: HumanEval_141_file_name_check
results:
- exit_code: 0
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if length(file_name) == 0\n        return \"No\"\n    end\n    if count(x\
    \ -> x in '0':'9', file_name) > 3\n        return \"No\"\n    end\n    if count(x\
    \ -> x == '.', file_name) != 1\n        return \"No\"\n    end\n    if !(file_name[1]\
    \ in 'a':'z' || file_name[1] in 'A':'Z')\n        return \"No\"\n    end\n   \
    \ if !(split(file_name, '.')[2] in [\"txt\", \"exe\", \"dll\"])\n        return\
    \ \"No\"\n    end\n    return \"Yes\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = file_name_check;\n\t@test(candidate(\"example.txt\") == \"Yes\")\n\t@test(candidate(\"\
    1example.dll\") == \"No\")\n\t@test(candidate(\"s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"\
    K.dll\") == \"Yes\")\n\t@test(candidate(\"MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"\
    His12FILE94.exe\") == \"No\")\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"\
    ?aREYA.exe\") == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\"\
    )\n\t@test(candidate(\"this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   26     26

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if length(file_name) < 5\n        return \"No\"\n    end\n    if file_name[end-3:end]\
    \ != \".txt\" && file_name[end-3:end] != \".exe\" && file_name[end-3:end] != \"\
    .dll\"\n        return \"No\"\n    end\n    if file_name[1] != \"a\" && file_name[1]\
    \ != \"b\" && file_name[1] != \"c\" && file_name[1] != \"d\" && file_name[1] !=\
    \ \"e\" && file_name[1] != \"f\" && file_name[1] != \"g\" && file_name[1] != \"\
    h\" && file_name[1] != \"i\" && file_name[1] != \"j\" && file_name[1] != \"k\"\
    \ && file_name[1] != \"l\" && file_name[1] != \"m\" && file_name[1] != \"n\" &&\
    \ file_name[1] != \"o\" && file_name[1] != \"p\" && file_name[1] != \"q\" && file_name[1]\
    \ != \"r\" && file_name[1] != \"s\" && file_name[1] != \"t\" && file_name[1] !=\
    \ \"u\" && file_name[1] != \"v\" && file_name[1] != \"w\" && file_name[1] != \"\
    x\" && file_name[1] != \"y\" && file_name[1] != \"z\" && file_name[1] != \"A\"\
    \ && file_name[1] != \"B\" && file_name[1] != \"C\" && file_name[1] != \"D\" &&\
    \ file_name[1] != \"E\" && file_name[1] != \"F\" && file_name[1] != \"G\" && file_name[1]\
    \ != \"H\" && file_name[1] != \"I\" && file_name[1] != \"J\" && file_name[1] !=\
    \ \"K\" && file_name[1] != \"L\" && file_name[1] != \"M\" && file_name[\nusing\
    \ Test\n\n@testset begin\n\ncandidate = file_name_check;\n\t@test(candidate(\"\
    example.txt\") == \"Yes\")\n\t@test(candidate(\"1example.dll\") == \"No\")\n\t\
    @test(candidate(\"s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"K.dll\") == \"\
    Yes\")\n\t@test(candidate(\"MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"\
    His12FILE94.exe\") == \"No\")\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"\
    ?aREYA.exe\") == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\"\
    )\n\t@test(candidate(\"this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgu1ftm5t.jl:1\nin expression starting at /tmp/tmpgu1ftm5t.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if length(file_name) == 0\n        return \"No\"\n    end\n    if file_name[1]\
    \ in '0'::9\n        return \"No\"\n    end\n    if length(file_name) == 1\n \
    \       return \"No\"\n    end\n    if file_name[2] in '0'::9\n        return\
    \ \"No\"\n    end\n    if length(file_name) == 2\n        return \"No\"\n    end\n\
    \    if file_name[3] in '0'::9\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 3\n        return \"No\"\n    end\n    if file_name[4] in '0'::9\n      \
    \  return \"No\"\n    end\n    if length(file_name) == 4\n        return \"No\"\
    \n    end\n    if file_name[5] in '0'::9\n        return \"No\"\n    end\n   \
    \ if length(file_name) == 5\n        return \"No\"\n    end\n    if file_name[6]\
    \ in '0'::9\n        return \"No\"\n    end\n    if length(file_name) == 6\n \
    \       return \"No\"\n    end\n    if file_name[7] in '0'::9\n        return\
    \ \"No\"\n    end\n    if length(file_name) == 7\n        return \"No\"\n    end\n\
    \    if file_name[8] in '0'::9\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 8\n        return \"No\"\n    end\n    if file_name[9] in '0'::9\n      \
    \  return \"No\"\n    end\n    if length(file_name) == 9\n        return \"No\"\
    \n    end\n    if file_name[10] in '0'::9\n        return \"No\"\n    end\n  \
    \  if length(file_name) == 10\n        return \"No\"\n    end\n    if file_name[11]\
    \ in '0'::9\n        return \"No\"\n    end\n    if length(file_name) == 11\n\
    \        return \"No\"\n    end\n    if file_name[12\nusing Test\n\n@testset begin\n\
    \ncandidate = file_name_check;\n\t@test(candidate(\"example.txt\") == \"Yes\"\
    )\n\t@test(candidate(\"1example.dll\") == \"No\")\n\t@test(candidate(\"s1sdf3.asd\"\
    ) == \"No\")\n\t@test(candidate(\"K.dll\") == \"Yes\")\n\t@test(candidate(\"MY16FILE3.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"His12FILE94.exe\") == \"No\")\n\t@test(candidate(\"\
    _Y.txt\") == \"No\")\n\t@test(candidate(\"?aREYA.exe\") == \"No\")\n\t@test(candidate(\"\
    /this_is_valid.dll\") == \"No\")\n\t@test(candidate(\"this_is_valid.wow\") ==\
    \ \"No\")\n\t@test(candidate(\"this_is_valid.txt\") == \"Yes\")\n\t@test(candidate(\"\
    this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"#this2_i4s_5valid.ten\"\
    ) == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\") == \"No\")\n\t@test(candidate(\"\
    this_is_12valid.6exe4.txt\") == \"No\")\n\t@test(candidate(\"all.exe.txt\") ==\
    \ \"No\")\n\t@test(candidate(\"I563_No.exe\") == \"Yes\")\n\t@test(candidate(\"\
    Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"no_one#knows.dll\") == \"\
    Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\")\n\t@test(candidate(\"\
    I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\") == \"No\")\n\t\
    @test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"_f4indsartal132.\"\
    ) == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"s.\"\
    ) == \"No\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0bo8_pt5.jl:1\nin expression starting at /tmp/tmp0bo8_pt5.jl:1\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    # check if there are more than 3 digits in the file's name\n    if length(filter(x\
    \ -> x in '0':'9', file_name)) > 3\n        return \"No\"\n    end\n    # check\
    \ if there is exactly one dot in the file's name\n    if count(x -> x == '.',\
    \ file_name) != 1\n        return \"No\"\n    end\n    # check if the substring\
    \ before the dot is not empty and starts with a letter\n    if !(file_name[1]\
    \ in 'a':'z' || file_name[1] in 'A':'Z')\n        return \"No\"\n    end\n   \
    \ # check if the substring after the dot is one of the allowed ones\n    if split(file_name,\
    \ '.')[2] in [\"txt\", \"exe\", \"dll\"]\n        return \"Yes\"\n    else\n \
    \       return \"No\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = file_name_check;\n\t@test(candidate(\"example.txt\") == \"Yes\")\n\t@test(candidate(\"\
    1example.dll\") == \"No\")\n\t@test(candidate(\"s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"\
    K.dll\") == \"Yes\")\n\t@test(candidate(\"MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"\
    His12FILE94.exe\") == \"No\")\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"\
    ?aREYA.exe\") == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\"\
    )\n\t@test(candidate(\"this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   26     26

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if length(file_name) == 0\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 1\n        if file_name[1] in ('a'-'z', 'A'-'Z')\n            return \"No\"\
    \n        end\n    end\n    if length(file_name) == 2\n        if file_name[1]\
    \ in ('a'-'z', 'A'-'Z') && file_name[2] == '.'\n            return \"No\"\n  \
    \      end\n    end\n    if length(file_name) == 3\n        if file_name[1] in\
    \ ('a'-'z', 'A'-'Z') && file_name[2] == '.' && file_name[3] in ('a'-'z', 'A'-'Z')\n\
    \            return \"No\"\n        end\n    end\n    if length(file_name) ==\
    \ 4\n        if file_name[1] in ('a'-'z', 'A'-'Z') && file_name[2] == '.' && file_name[3]\
    \ in ('a'-'z', 'A'-'Z') && file_name[4] in ('a'-'z', 'A'-'Z')\n            return\
    \ \"No\"\n        end\n    end\n    if length(file_name) == 5\n        if file_name[1]\
    \ in ('a'-'z', 'A'-'Z') && file_name[2] == '.' && file_name[3] in ('a'-'z', 'A'-'Z')\
    \ && file_name[4] in ('a'-'z', 'A'-'Z') && file_name[5] in ('a'-'z', 'A'-'Z')\n\
    \            return \"No\"\n        end\n    end\n    if length(file_name) ==\
    \ 6\n        if file_name[1] in ('a'-'z', 'A'-'Z') && file_name[2] == '.' && file_name[3]\
    \ in ('a'-'z', 'A'-'Z') && file_name[4] in ('a'-'z', 'A'-'Z') && file_name[5]\
    \ in ('a'-'z', 'A'-'Z') && file_name\nusing Test\n\n@testset begin\n\ncandidate\
    \ = file_name_check;\n\t@test(candidate(\"example.txt\") == \"Yes\")\n\t@test(candidate(\"\
    1example.dll\") == \"No\")\n\t@test(candidate(\"s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"\
    K.dll\") == \"Yes\")\n\t@test(candidate(\"MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"\
    His12FILE94.exe\") == \"No\")\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"\
    ?aREYA.exe\") == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\"\
    )\n\t@test(candidate(\"this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgglcee8s.jl:1\nin expression starting at /tmp/tmpgglcee8s.jl:1\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if count(r\"\\d\", file_name) > 3\n        return \"No\"\n    end\n  \
    \  if count(r\"\\.\", file_name) != 1\n        return \"No\"\n    end\n    if\
    \ !(occursin(r\"^[a-zA-Z]\", file_name))\n        return \"No\"\n    end\n   \
    \ if !(occursin(r\"\\.(txt|exe|dll)$\", file_name))\n        return \"No\"\n \
    \   end\n    return \"Yes\"\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ file_name_check;\n\t@test(candidate(\"example.txt\") == \"Yes\")\n\t@test(candidate(\"\
    1example.dll\") == \"No\")\n\t@test(candidate(\"s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"\
    K.dll\") == \"Yes\")\n\t@test(candidate(\"MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"\
    His12FILE94.exe\") == \"No\")\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"\
    ?aREYA.exe\") == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\"\
    )\n\t@test(candidate(\"this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   26     26

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if length(file_name) == 0\n        return \"No\"\n    end\n    if file_name[1]\
    \ in '0123456789'\n        return \"No\"\n    end\n    if length(file_name) ==\
    \ 1\n        return \"No\"\n    end\n    if file_name[end] == '.'\n        return\
    \ \"No\"\n    end\n    if file_name[end-1] == '.'\n        return \"No\"\n   \
    \ end\n    if file_name[end] in '0123456789'\n        return \"No\"\n    end\n\
    \    if file_name[end-1] in '0123456789'\n        return \"No\"\n    end\n   \
    \ if file_name[end-2] in '0123456789'\n        return \"No\"\n    end\n    if\
    \ file_name[end-3] in '0123456789'\n        return \"No\"\n    end\n    if file_name[end-4]\
    \ in '0123456789'\n        return \"No\"\n    end\n    if file_name[end-5] in\
    \ '0123456789'\n        return \"No\"\n    end\n    if file_name[end-6] in '0123456789'\n\
    \        return \"No\"\n    end\n    if file_name[end-7] in '0123456789'\n   \
    \     return \"No\"\n    end\n    if file_name[end-8] in '0123456789'\n      \
    \  return \"No\"\n    end\n    if file_name[end-9] in '0123456789'\n        return\
    \ \"No\"\n    end\n    if file_name[end-10] in '0123456789'\n        return \"\
    No\"\n    end\n    if file_name[end-11] in '0123456789'\n        return \"No\"\
    \n    end\n    if file_name[end-12] in '0123456789'\n        return \"No\"\n \
    \   end\n    if file_name[end-13] in '0123456789'\n        return \"No\"\n   \
    \ end\n    if file_name[end-14] in\nusing Test\n\n@testset begin\n\ncandidate\
    \ = file_name_check;\n\t@test(candidate(\"example.txt\") == \"Yes\")\n\t@test(candidate(\"\
    1example.dll\") == \"No\")\n\t@test(candidate(\"s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"\
    K.dll\") == \"Yes\")\n\t@test(candidate(\"MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"\
    His12FILE94.exe\") == \"No\")\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"\
    ?aREYA.exe\") == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\"\
    )\n\t@test(candidate(\"this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpp4upeq1q.jl:20\nin expression\
    \ starting at /tmp/tmpp4upeq1q.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if count(r\"\\d\", file_name) > 3\n        return \"No\"\n    end\n  \
    \  if count(r\"\\.\", file_name) != 1\n        return \"No\"\n    end\n    if\
    \ !(match(r\"^[a-zA-Z]\", file_name).match)\n        return \"No\"\n    end\n\
    \    if !(match(r\"\\.(txt|exe|dll)$\", file_name).match)\n        return \"No\"\
    \n    end\n    return \"Yes\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = file_name_check;\n\t@test(candidate(\"example.txt\") == \"Yes\")\n\t@test(candidate(\"\
    1example.dll\") == \"No\")\n\t@test(candidate(\"s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"\
    K.dll\") == \"Yes\")\n\t@test(candidate(\"MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"\
    His12FILE94.exe\") == \"No\")\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"\
    ?aREYA.exe\") == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\"\
    )\n\t@test(candidate(\"this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 18 errored,
    0 broken.

    in expression starting at /tmp/tmpnrj_6hgp.jl:33

    '
  stdout: "test set: Error During Test at /tmp/tmpnrj_6hgp.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"example.txt\") == \"Yes\"\n  MethodError: no method\
    \ matching !(::SubString{String})\n  Closest candidates are:\n    !(!Matched::Function)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:1117\n    !(!Matched::Bool)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/bool.jl:35\n    !(!Matched::Missing)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:101\n  Stacktrace:\n\
    \   [1] file_name_check(file_name::String)\n     @ Main /tmp/tmpnrj_6hgp.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnrj_6hgp.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnrj_6hgp.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpnrj_6hgp.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"1example.dll\") == \"No\"\n  type Nothing has no field match\n \
    \ Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] file_name_check(file_name::String)\n\
    \     @ Main /tmp/tmpnrj_6hgp.jl:23\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpnrj_6hgp.jl:37 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpnrj_6hgp.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpnrj_6hgp.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"s1sdf3.asd\") == \"No\"\n  MethodError: no method matching !(::SubString{String})\n\
    \  Closest candidates are:\n    !(!Matched::Function) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:1117\n\
    \    !(!Matched::Bool) at /shared/centos7/julia/1.7.3/share/julia/base/bool.jl:35\n\
    \    !(!Matched::Missing) at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:101\n\
    \  Stacktrace:\n   [1] file_name_check"
- exit_code: 1
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if length(file_name) == 0\n        return \"No\"\n    end\n    if length(file_name)\
    \ < 4\n        return \"No\"\n    end\n    if file_name[1] in '0123456789'\n \
    \       return \"No\"\n    end\n    if file_name[end] in '0123456789'\n      \
    \  return \"No\"\n    end\n    if file_name[end-1] in '0123456789'\n        return\
    \ \"No\"\n    end\n    if file_name[end-2] in '0123456789'\n        return \"\
    No\"\n    end\n    if file_name[end-3] in '0123456789'\n        return \"No\"\n\
    \    end\n    if file_name[end-4] in '0123456789'\n        return \"No\"\n   \
    \ end\n    if file_name[end-5] in '0123456789'\n        return \"No\"\n    end\n\
    \    if file_name[end-6] in '0123456789'\n        return \"No\"\n    end\n   \
    \ if file_name[end-7] in '0123456789'\n        return \"No\"\n    end\n    if\
    \ file_name[end-8] in '0123456789'\n        return \"No\"\n    end\n    if file_name[end-9]\
    \ in '0123456789'\n        return \"No\"\n    end\n    if file_name[end-10] in\
    \ '0123456789'\n        return \"No\"\n    end\n    if file_name[end-11] in '0123456789'\n\
    \        return \"No\"\n    end\n    if file_name[end-12] in '0123456789'\n  \
    \      return \"No\"\n    end\n    if file_name[end-13] in '0123456789'\n    \
    \    return \"No\"\n    end\n    if file_name[end-14] in '0123456789'\n      \
    \  return \"No\"\n    end\n    if file_name[end-15] in '0123456789'\n        return\
    \ \"No\"\n    end\nusing Test\n\n@testset begin\n\ncandidate = file_name_check;\n\
    \t@test(candidate(\"example.txt\") == \"Yes\")\n\t@test(candidate(\"1example.dll\"\
    ) == \"No\")\n\t@test(candidate(\"s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"\
    K.dll\") == \"Yes\")\n\t@test(candidate(\"MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"\
    His12FILE94.exe\") == \"No\")\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"\
    ?aREYA.exe\") == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\"\
    )\n\t@test(candidate(\"this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp0prqldy0.jl:23\nin expression\
    \ starting at /tmp/tmp0prqldy0.jl:23\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if length(file_name) < 5\n        return \"No\"\n    end\n    if count(x\
    \ -> x in '0':'9', file_name) > 3\n        return \"No\"\n    end\n    if count(x\
    \ -> x == '.', file_name) != 1\n        return \"No\"\n    end\n    if !(file_name[1]\
    \ in 'a':'z' || file_name[1] in 'A':'Z')\n        return \"No\"\n    end\n   \
    \ if file_name[end-3:end] != \".txt\" && file_name[end-3:end] != \".exe\" && file_name[end-3:end]\
    \ != \".dll\"\n        return \"No\"\n    end\n    return \"Yes\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = file_name_check;\n\t@test(candidate(\"\
    example.txt\") == \"Yes\")\n\t@test(candidate(\"1example.dll\") == \"No\")\n\t\
    @test(candidate(\"s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"K.dll\") == \"\
    Yes\")\n\t@test(candidate(\"MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"\
    His12FILE94.exe\") == \"No\")\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"\
    ?aREYA.exe\") == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\"\
    )\n\t@test(candidate(\"this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   26     26

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if length(file_name) < 5\n        return \"No\"\n    end\n    if count(x\
    \ -> x in '0':'9', file_name) > 3\n        return \"No\"\n    end\n    if count(x\
    \ -> x == '.', file_name) != 1\n        return \"No\"\n    end\n    if file_name[1]\
    \ in 'a':'z' || file_name[1] in 'A':'Z'\n        if file_name[end-3:end] in [\"\
    txt\", \"exe\", \"dll\"]\n            return \"Yes\"\n        end\n    end\n \
    \   return \"No\"\nend\nusing Test\n\n@testset begin\n\ncandidate = file_name_check;\n\
    \t@test(candidate(\"example.txt\") == \"Yes\")\n\t@test(candidate(\"1example.dll\"\
    ) == \"No\")\n\t@test(candidate(\"s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"\
    K.dll\") == \"Yes\")\n\t@test(candidate(\"MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"\
    His12FILE94.exe\") == \"No\")\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"\
    ?aREYA.exe\") == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\"\
    )\n\t@test(candidate(\"this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 19 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz4tigv3k.jl:35

    '
  stdout: "test set: Test Failed at /tmp/tmpz4tigv3k.jl:38\n  Expression: candidate(\"\
    example.txt\") == \"Yes\"\n   Evaluated: \"No\" == \"Yes\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4tigv3k.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4tigv3k.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpz4tigv3k.jl:41\n  Expression: candidate(\"K.dll\") == \"Yes\"\
    \n   Evaluated: \"No\" == \"Yes\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4tigv3k.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4tigv3k.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpz4tigv3k.jl:42\n  Expression: candidate(\"MY16FILE3.exe\"\
    ) == \"Yes\"\n   Evaluated: \"No\" == \"Yes\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4tigv3k.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4tigv3k.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpz4tigv3k.jl:48\n  Expression: candidate(\"this_is_valid.txt\"\
    ) == \"Yes\"\n   Evaluated: \"No\" == \"Yes\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4tigv3k.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4tigv3k.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpz4tigv3k.jl:54\n  Expression: candidate(\"I563_No.exe\") ==\
    \ \"Yes\"\n   Evaluated: \"No\" == \"Yes\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/shar"
- exit_code: 1
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if length(file_name) == 0\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 1\n        return \"No\"\n    end\n    if length(file_name) == 2\n      \
    \  return \"No\"\n    end\n    if length(file_name) == 3\n        return \"No\"\
    \n    end\n    if length(file_name) == 4\n        return \"No\"\n    end\n   \
    \ if length(file_name) == 5\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 6\n        return \"No\"\n    end\n    if length(file_name) == 7\n      \
    \  return \"No\"\n    end\n    if length(file_name) == 8\n        return \"No\"\
    \n    end\n    if length(file_name) == 9\n        return \"No\"\n    end\n   \
    \ if length(file_name) == 10\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 11\n        return \"No\"\n    end\n    if length(file_name) == 12\n    \
    \    return \"No\"\n    end\n    if length(file_name) == 13\n        return \"\
    No\"\n    end\n    if length(file_name) == 14\n        return \"No\"\n    end\n\
    \    if length(file_name) == 15\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 16\n        return \"No\"\n    end\n    if length(file_name) == 17\n    \
    \    return \"No\"\n    end\n    if length(file_name) == 18\n        return \"\
    No\"\n    end\n    if length(file_name) == 19\n        return \"No\"\n    end\n\
    \    if length(file_name) == 20\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 21\n        return \"No\"\n    end\n    if length(file_name) == 22\n    \
    \    return \"No\"\n    end\n    if length(file_name) == 23\n        return \"\
    No\"\n    end\n    if length(file_name) == 24\n        return \"No\"\n    end\n\
    \    if length(file_name) == 25\n\nusing Test\n\n@testset begin\n\ncandidate =\
    \ file_name_check;\n\t@test(candidate(\"example.txt\") == \"Yes\")\n\t@test(candidate(\"\
    1example.dll\") == \"No\")\n\t@test(candidate(\"s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"\
    K.dll\") == \"Yes\")\n\t@test(candidate(\"MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"\
    His12FILE94.exe\") == \"No\")\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"\
    ?aREYA.exe\") == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\"\
    )\n\t@test(candidate(\"this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplec020rz.jl:1\nin expression starting at /tmp/tmplec020rz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if length(file_name) == 0\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 1\n        return \"No\"\n    end\n    if length(file_name) == 2\n      \
    \  return \"No\"\n    end\n    if length(file_name) == 3\n        return \"No\"\
    \n    end\n    if length(file_name) == 4\n        return \"No\"\n    end\n   \
    \ if length(file_name) == 5\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 6\n        return \"No\"\n    end\n    if length(file_name) == 7\n      \
    \  return \"No\"\n    end\n    if length(file_name) == 8\n        return \"No\"\
    \n    end\n    if length(file_name) == 9\n        return \"No\"\n    end\n   \
    \ if length(file_name) == 10\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 11\n        return \"No\"\n    end\n    if length(file_name) == 12\n    \
    \    return \"No\"\n    end\n    if length(file_name) == 13\n        return \"\
    No\"\n    end\n    if length(file_name) == 14\n        return \"No\"\n    end\n\
    \    if length(file_name) == 15\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 16\n        return \"No\"\n    end\n    if length(file_name) == 17\n    \
    \    return \"No\"\n    end\n    if length(file_name) == 18\n        return \"\
    No\"\n    end\n    if length(file_name) == 19\n        return \"No\"\n    end\n\
    \    if length(file_name) == 20\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 21\n        return \"No\"\n    end\n    if length(file_name) == 22\n    \
    \    return \"No\"\n    end\n    if length(file_name) == 23\n        return \"\
    No\"\n    end\n    if length(file_name) == 24\n        return \"No\"\n    end\n\
    \    if length(file_name) == 25\n\nusing Test\n\n@testset begin\n\ncandidate =\
    \ file_name_check;\n\t@test(candidate(\"example.txt\") == \"Yes\")\n\t@test(candidate(\"\
    1example.dll\") == \"No\")\n\t@test(candidate(\"s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"\
    K.dll\") == \"Yes\")\n\t@test(candidate(\"MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"\
    His12FILE94.exe\") == \"No\")\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"\
    ?aREYA.exe\") == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\"\
    )\n\t@test(candidate(\"this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplec020rz.jl:1\nin expression starting at /tmp/tmplec020rz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if length(file_name) == 0\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 1\n        return \"No\"\n    end\n    if length(file_name) == 2\n      \
    \  return \"No\"\n    end\n    if length(file_name) == 3\n        return \"No\"\
    \n    end\n    if length(file_name) == 4\n        return \"No\"\n    end\n   \
    \ if length(file_name) == 5\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 6\n        return \"No\"\n    end\n    if length(file_name) == 7\n      \
    \  return \"No\"\n    end\n    if length(file_name) == 8\n        return \"No\"\
    \n    end\n    if length(file_name) == 9\n        return \"No\"\n    end\n   \
    \ if length(file_name) == 10\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 11\n        return \"No\"\n    end\n    if length(file_name) == 12\n    \
    \    return \"No\"\n    end\n    if length(file_name) == 13\n        return \"\
    No\"\n    end\n    if length(file_name) == 14\n        return \"No\"\n    end\n\
    \    if length(file_name) == 15\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 16\n        return \"No\"\n    end\n    if length(file_name) == 17\n    \
    \    return \"No\"\n    end\n    if length(file_name) == 18\n        return \"\
    No\"\n    end\n    if length(file_name) == 19\n        return \"No\"\n    end\n\
    \    if length(file_name) == 20\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 21\n        return \"No\"\n    end\n    if length(file_name) == 22\n    \
    \    return \"No\"\n    end\n    if length(file_name) == 23\n        return \"\
    No\"\n    end\n    if length(file_name) == 24\n        return \"No\"\n    end\n\
    \    if length(file_name) == 25\n\nusing Test\n\n@testset begin\n\ncandidate =\
    \ file_name_check;\n\t@test(candidate(\"example.txt\") == \"Yes\")\n\t@test(candidate(\"\
    1example.dll\") == \"No\")\n\t@test(candidate(\"s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"\
    K.dll\") == \"Yes\")\n\t@test(candidate(\"MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"\
    His12FILE94.exe\") == \"No\")\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"\
    ?aREYA.exe\") == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\"\
    )\n\t@test(candidate(\"this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplec020rz.jl:1\nin expression starting at /tmp/tmplec020rz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if length(file_name) < 5\n        return \"No\"\n    end\n    if file_name[end]\
    \ != 't' || file_name[end-1] != 'x' || file_name[end-2] != 't' || file_name[end-3]\
    \ != '.'\n        return \"No\"\n    end\n    if file_name[end-4] != 'e' || file_name[end-5]\
    \ != 'x' || file_name[end-6] != 'e' || file_name[end-7] != '.'\n        return\
    \ \"No\"\n    end\n    if file_name[end-8] != 'l' || file_name[end-9] != 'l' ||\
    \ file_name[end-10] != 'd' || file_name[end-11] != '.'\n        return \"No\"\n\
    \    end\n    if file_name[end-12] != 'l' || file_name[end-13] != 'l' || file_name[end-14]\
    \ != 'd' || file_name[end-15] != '.'\n        return \"No\"\n    end\n    if file_name[end-16]\
    \ != 'e' || file_name[end-17] != 'x' || file_name[end-18] != 'e' || file_name[end-19]\
    \ != '.'\n        return \"No\"\n    end\n    if file_name[end-20] != 't' || file_name[end-21]\
    \ != 'x' || file_name[end-22] != 't' || file_name[end-23] != '.'\n        return\
    \ \"No\"\n    end\n    if file_name[end-24] != 'e' || file_name[end-25] != 'x'\
    \ || file_name[end-26] != 'e' || file_name[end-27] != '.'\n        return \"No\"\
    \n    end\n    if file_name[end-28] != 'l' || file_name[end-29] != 'l' || file_name[end-30]\
    \ != 'd' || file_name[end-31] != '.'\n        return \"No\"\n\nusing Test\n\n\
    @testset begin\n\ncandidate = file_name_check;\n\t@test(candidate(\"example.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"1example.dll\") == \"No\")\n\t@test(candidate(\"\
    s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"K.dll\") == \"Yes\")\n\t@test(candidate(\"\
    MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"His12FILE94.exe\") == \"No\"\
    )\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"?aREYA.exe\"\
    ) == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\")\n\t@test(candidate(\"\
    this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\") == \"\
    Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp29xu7223.jl:1\nin expression starting at /tmp/tmp29xu7223.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if length(file_name) == 0\n        return \"No\"\n    end\n    if length(file_name)\
    \ < 5\n        return \"No\"\n    end\n    if file_name[end-3:end] != \".txt\"\
    \ && file_name[end-3:end] != \".exe\" && file_name[end-3:end] != \".dll\"\n  \
    \      return \"No\"\n    end\n    if file_name[end-4] != '.'\n        return\
    \ \"No\"\n    end\n    if file_name[1] < 'a' || file_name[1] > 'z'\n        return\
    \ \"No\"\n    end\n    if file_name[1] < 'A' || file_name[1] > 'Z'\n        return\
    \ \"No\"\n    end\n    if length(file_name) > 5\n        if file_name[2] < 'a'\
    \ || file_name[2] > 'z'\n            return \"No\"\n        end\n        if file_name[2]\
    \ < 'A' || file_name[2] > 'Z'\n            return \"No\"\n        end\n    end\n\
    \    if length(file_name) > 6\n        if file_name[3] < 'a' || file_name[3] >\
    \ 'z'\n            return \"No\"\n        end\n        if file_name[3] < 'A' ||\
    \ file_name[3] > 'Z'\n            return \"No\"\n        end\n    end\n    if\
    \ length(file_name) > 7\n        if file_name[4] < 'a' || file_name[4] > 'z'\n\
    \            return \"No\"\n        end\n        if file_name[4] < 'A' || file_name[4]\
    \ > 'Z'\n            return \"No\"\n        end\n    end\n    if length(file_name)\
    \ > 8\n        if file_name[5] < 'a' || file_name[5] > 'z'\n            return\
    \ \"No\"\n        end\n        if file_name[5] < 'A' || file_name[5] > 'Z'\n \
    \           return \"No\"\n        end\n    end\n    if length(file_\nusing Test\n\
    \n@testset begin\n\ncandidate = file_name_check;\n\t@test(candidate(\"example.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"1example.dll\") == \"No\")\n\t@test(candidate(\"\
    s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"K.dll\") == \"Yes\")\n\t@test(candidate(\"\
    MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"His12FILE94.exe\") == \"No\"\
    )\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"?aREYA.exe\"\
    ) == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\")\n\t@test(candidate(\"\
    this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\") == \"\
    Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe7ya3epd.jl:68\nin expression starting at\
    \ /tmp/tmpe7ya3epd.jl:68\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if length(file_name) == 0\n        return \"No\"\n    end\n    if file_name[1]\
    \ in '0123456789'\n        return \"No\"\n    end\n    if length(file_name) ==\
    \ 1\n        return \"No\"\n    end\n    if file_name[end] in '0123456789'\n \
    \       return \"No\"\n    end\n    if file_name[end] == '.'\n        return \"\
    No\"\n    end\n    if file_name[end-1] == '.'\n        return \"No\"\n    end\n\
    \    if file_name[end-2] == '.'\n        return \"No\"\n    end\n    if file_name[end-3]\
    \ == '.'\n        return \"No\"\n    end\n    if file_name[end-4] == '.'\n   \
    \     return \"No\"\n    end\n    if file_name[end-5] == '.'\n        return \"\
    No\"\n    end\n    if file_name[end-6] == '.'\n        return \"No\"\n    end\n\
    \    if file_name[end-7] == '.'\n        return \"No\"\n    end\n    if file_name[end-8]\
    \ == '.'\n        return \"No\"\n    end\n    if file_name[end-9] == '.'\n   \
    \     return \"No\"\n    end\n    if file_name[end-10] == '.'\n        return\
    \ \"No\"\n    end\n    if file_name[end-11] == '.'\n        return \"No\"\n  \
    \  end\n    if file_name[end-12] == '.'\n        return \"No\"\n    end\n    if\
    \ file_name[end-13] == '.'\n        return \"No\"\n    end\n    if file_name[end-14]\
    \ == '.'\n        return \"No\"\n    end\n    if file_name[end-15] == '.'\n  \
    \      return \"No\"\n    end\n    if file_name[end-16] == '.'\n        return\
    \ \"No\"\n    end\n    if file_name[end-17] == '.'\n        return \"No\"\n  \
    \  end\n    if file_name[end\nusing Test\n\n@testset begin\n\ncandidate = file_name_check;\n\
    \t@test(candidate(\"example.txt\") == \"Yes\")\n\t@test(candidate(\"1example.dll\"\
    ) == \"No\")\n\t@test(candidate(\"s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"\
    K.dll\") == \"Yes\")\n\t@test(candidate(\"MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"\
    His12FILE94.exe\") == \"No\")\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"\
    ?aREYA.exe\") == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\"\
    )\n\t@test(candidate(\"this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp7bp8g1f0.jl:20\nin expression\
    \ starting at /tmp/tmp7bp8g1f0.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if length(file_name) == 0\n        return \"No\"\n    end\n    if length(file_name)\
    \ == 1\n        if file_name[1] in 'a':'z'\n            return \"No\"\n      \
    \  else\n            return \"No\"\n        end\n    end\n    if length(file_name)\
    \ == 2\n        if file_name[1] in 'a':'z'\n            if file_name[2] in 'a':'z'\n\
    \                return \"No\"\n            else\n                return \"No\"\
    \n            end\n        else\n            return \"No\"\n        end\n    end\n\
    \    if length(file_name) == 3\n        if file_name[1] in 'a':'z'\n         \
    \   if file_name[2] in 'a':'z'\n                if file_name[3] in 'a':'z'\n \
    \                   return \"No\"\n                else\n                    return\
    \ \"No\"\n                end\n            else\n                return \"No\"\
    \n            end\n        else\n            return \"No\"\n        end\n    end\n\
    \    if length(file_name) == 4\n        if file_name[1] in 'a':'z'\n         \
    \   if file_name[2] in 'a':'z'\n                if file_name[3] in 'a':'z'\n \
    \                   if file_name[4] == '.'\n                        return \"\
    No\"\n                    else\n                        return \"No\"\n      \
    \              end\n                else\n                    return \"No\"\n\
    \                end\n            else\n                return \"No\"\n      \
    \      end\n        else\n            return \"No\"\n        end\n    end\n  \
    \  if length(file_name) == 5\n        if file_name[1] in 'a':'z'\n           \
    \ if file_name[2] in 'a':'z'\n                if file_name[3] in 'a':'z'\n   \
    \                 if file_name[4] == '.'\n                        if file_name[5]\
    \ in 'a':'z'\n                            return \"No\"\n                    \
    \    else\n                            return \"No\"\n                       \
    \ end\n                    else\n                        return \"No\"\n     \
    \               end\n                else\n                    return \"No\"\n\
    \                end\n            else\n               \nusing Test\n\n@testset\
    \ begin\n\ncandidate = file_name_check;\n\t@test(candidate(\"example.txt\") ==\
    \ \"Yes\")\n\t@test(candidate(\"1example.dll\") == \"No\")\n\t@test(candidate(\"\
    s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"K.dll\") == \"Yes\")\n\t@test(candidate(\"\
    MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"His12FILE94.exe\") == \"No\"\
    )\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"?aREYA.exe\"\
    ) == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\")\n\t@test(candidate(\"\
    this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\") == \"\
    Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpxe60xdxx.jl:74\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxe60xdxx.jl:1\n\
    in expression starting at /tmp/tmpxe60xdxx.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if length(matchall(r\"\\d\", file_name)) > 3\n        return \"No\"\n\
    \    end\n    if length(matchall(r\"\\.\", file_name)) != 1\n        return \"\
    No\"\n    end\n    if length(matchall(r\"[a-zA-Z]\", file_name)) == 0\n      \
    \  return \"No\"\n    end\n    if length(matchall(r\"\\.\", file_name)) != 1\n\
    \        return \"No\"\n    end\n    if length(matchall(r\"\\.\", file_name))\
    \ != 1\n        return \"No\"\n    end\n    if length(matchall(r\"\\.\", file_name))\
    \ != 1\n        return \"No\"\n    end\n    if length(matchall(r\"\\.\", file_name))\
    \ != 1\n        return \"No\"\n    end\n    if length(matchall(r\"\\.\", file_name))\
    \ != 1\n        return \"No\"\n    end\n    if length(matchall(r\"\\.\", file_name))\
    \ != 1\n        return \"No\"\n    end\n    if length(matchall(r\"\\.\", file_name))\
    \ != 1\n        return \"No\"\n    end\n    if length(matchall(r\"\\.\", file_name))\
    \ != 1\n        return \"No\"\n    end\n    if length(matchall(r\"\\.\", file_name))\
    \ != 1\n        return \"No\"\n    end\n    if length(matchall(r\"\\.\", file_name))\
    \ != 1\n        return \"No\"\n    end\n    if length(matchall(r\"\\.\", file_name))\
    \ != 1\n        return \"No\"\n    end\n    if length(matchall(r\"\\.\", file_name))\
    \ != 1\n        return \"No\"\n    end\n    if length(matchall(r\"\\.\", file_name))\
    \ != 1\n        return \"No\"\n    end\n    if length(matchall(r\"\\.\", file_name))\
    \ != 1\n        return \"No\"\n    end\n    if length(matchall(r\"\\.\", file_name))\
    \ != 1\n        return \"No\"\n    end\n    if length(matchall(r\"\\.\", file_name))\
    \ != 1\n\nusing Test\n\n@testset begin\n\ncandidate = file_name_check;\n\t@test(candidate(\"\
    example.txt\") == \"Yes\")\n\t@test(candidate(\"1example.dll\") == \"No\")\n\t\
    @test(candidate(\"s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"K.dll\") == \"\
    Yes\")\n\t@test(candidate(\"MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"\
    His12FILE94.exe\") == \"No\")\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"\
    ?aREYA.exe\") == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\"\
    )\n\t@test(candidate(\"this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjjqp7ajs.jl:1\nin expression starting at /tmp/tmpjjqp7ajs.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Create a function which takes a string representing a file's name,\
    \ and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
    \    A file's name is considered to be valid if and only if all the following\
    \ conditions \n    are met:\n    - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot\
    \ '.'\n    - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n\
    \    >>> file_name_check(\"example.txt\")\n    \"Yes\"\n    >>> file_name_check(\"\
    1example.dll\")\n    \"No\"\n    \"\"\"\nfunction file_name_check(file_name::String)::String\
    \ \n    if length(file_name) < 5\n        return \"No\"\n    end\n    if !(file_name[end-3]\
    \ == '.')\n        return \"No\"\n    end\n    if !(file_name[1] in 'a':'z' ||\
    \ file_name[1] in 'A':'Z')\n        return \"No\"\n    end\n    if !(file_name[end-2:end]\
    \ in [\"txt\", \"exe\", \"dll\"])\n        return \"No\"\n    end\n    if count(x->x\
    \ in '0':'9', file_name) > 3\n        return \"No\"\n    end\n    return \"Yes\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = file_name_check;\n\t@test(candidate(\"\
    example.txt\") == \"Yes\")\n\t@test(candidate(\"1example.dll\") == \"No\")\n\t\
    @test(candidate(\"s1sdf3.asd\") == \"No\")\n\t@test(candidate(\"K.dll\") == \"\
    Yes\")\n\t@test(candidate(\"MY16FILE3.exe\") == \"Yes\")\n\t@test(candidate(\"\
    His12FILE94.exe\") == \"No\")\n\t@test(candidate(\"_Y.txt\") == \"No\")\n\t@test(candidate(\"\
    ?aREYA.exe\") == \"No\")\n\t@test(candidate(\"/this_is_valid.dll\") == \"No\"\
    )\n\t@test(candidate(\"this_is_valid.wow\") == \"No\")\n\t@test(candidate(\"this_is_valid.txt\"\
    ) == \"Yes\")\n\t@test(candidate(\"this_is_valid.txtexe\") == \"No\")\n\t@test(candidate(\"\
    #this2_i4s_5valid.ten\") == \"No\")\n\t@test(candidate(\"@this1_is6_valid.exe\"\
    ) == \"No\")\n\t@test(candidate(\"this_is_12valid.6exe4.txt\") == \"No\")\n\t\
    @test(candidate(\"all.exe.txt\") == \"No\")\n\t@test(candidate(\"I563_No.exe\"\
    ) == \"Yes\")\n\t@test(candidate(\"Is3youfault.txt\") == \"Yes\")\n\t@test(candidate(\"\
    no_one#knows.dll\") == \"Yes\")\n\t@test(candidate(\"1I563_Yes3.exe\") == \"No\"\
    )\n\t@test(candidate(\"I563_Yes3.txtt\") == \"No\")\n\t@test(candidate(\"final..txt\"\
    ) == \"No\")\n\t@test(candidate(\"final132\") == \"No\")\n\t@test(candidate(\"\
    _f4indsartal132.\") == \"No\")\n\t@test(candidate(\".txt\") == \"No\")\n\t@test(candidate(\"\
    s.\") == \"No\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 24 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp496qdoai.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmp496qdoai.jl:54\n  Expression: candidate(\"\
    all.exe.txt\") == \"No\"\n   Evaluated: \"Yes\" == \"No\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp496qdoai.jl:54 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp496qdoai.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp496qdoai.jl:60\n  Expression: candidate(\"final..txt\") ==\
    \ \"No\"\n   Evaluated: \"Yes\" == \"No\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp496qdoai.jl:60 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp496qdoai.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   24     2     26\n"

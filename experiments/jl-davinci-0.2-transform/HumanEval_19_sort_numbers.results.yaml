language: jl
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    nums = join(nums)\n    return nums\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnbinh74a.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpnbinh74a.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnbinh74a.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnbinh74a.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpnbinh74a.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnbinh74a.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnbinh74a.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpnbinh74a.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnbinh74a.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnbinh74a.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(num_dict, num_list)\n\
    \    sort!(num_list)\n    num_list = map(num_dict, num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpdtq3dyh6.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpdtq3dyh6.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n\
    \     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] sort_numbers(numbers::String)\n     @ Main /tmp/tmpdtq3dyh6.jl:10\n  \
    \ [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdtq3dyh6.jl:20 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdtq3dyh6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpdtq3dyh6.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n\
    \     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] sort_numbers(numbers::String)\n     @ Main /tmp/tmpdtq3dyh6.jl:10\n  \
    \ [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdtq3dyh6.jl:21 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdtq3dyh6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpdtq3dyh6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  MethodError: objects\
    \ of type Dict{String, Int64} are not callable\n  Stacktrace:\n   [1] iterate\n\
    \     @ ./generator.jl:47 [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n\
    \   [3] collect_similar\n     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpq8d0b0ju.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpq8d0b0ju.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpq8d0b0ju.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpq8d0b0ju.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpq8d0b0ju.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpq8d0b0ju.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpq8d0b0ju.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpq8d0b0ju.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpq8d0b0ju.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpq8d0b0ju.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpq8d0b0ju.jl:8\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpq8d0b0ju.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpq8d0b0ju.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpq8d0b0ju.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero "
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(num_dict, num_list)\n\
    \    sort!(num_list)\n    num_list = map(num_dict, num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpdtq3dyh6.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpdtq3dyh6.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n\
    \     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] sort_numbers(numbers::String)\n     @ Main /tmp/tmpdtq3dyh6.jl:10\n  \
    \ [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdtq3dyh6.jl:20 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdtq3dyh6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpdtq3dyh6.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n\
    \     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] sort_numbers(numbers::String)\n     @ Main /tmp/tmpdtq3dyh6.jl:10\n  \
    \ [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdtq3dyh6.jl:21 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdtq3dyh6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpdtq3dyh6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  MethodError: objects\
    \ of type Dict{String, Int64} are not callable\n  Stacktrace:\n   [1] iterate\n\
    \     @ ./generator.jl:47 [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n\
    \   [3] collect_similar\n     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[i] for i in split(numbers)]\n    sort!(num_list)\n\
    \    return join([key for (key, value) in num_dict if value in num_list], \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3q5qmbzp.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp3q5qmbzp.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3q5qmbzp.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3q5qmbzp.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp3q5qmbzp.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3q5qmbzp.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3q5qmbzp.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp3q5qmbzp.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3q5qmbzp.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3q5qmbzp.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmppcosup3e.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmppcosup3e.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmppcosup3e.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmppcosup3e.jl:10\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmppcosup3e.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmppcosup3e.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppcosup3e.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmppcosup3e.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmppcosup3e.jl:12\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmppcosup3e.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmppcosup3e.jl:19\ntest set:\
    \ Error During Test"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ numbers.split()\n    num_list = sort(num_list)\n    return \" \".join(num_list)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpd1a4gfy9.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpd1a4gfy9.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpd1a4gfy9.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd1a4gfy9.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd1a4gfy9.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpd1a4gfy9.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpd1a4gfy9.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd1a4gfy9.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd1a4gfy9.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpd1a4gfy9.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpd1a4gfy9.jl:8\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd1a4gfy9.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd1a4gfy9.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpd1a4gfy9.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero "
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7zpuxlnr.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp7zpuxlnr.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zpuxlnr.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zpuxlnr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7zpuxlnr.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zpuxlnr.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zpuxlnr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7zpuxlnr.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zpuxlnr.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zpuxlnr.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_5qlhtoj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp_5qlhtoj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(num_dict, num_list)\n\
    \    sort!(num_list)\n    num_list = map(num_dict, num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpdtq3dyh6.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpdtq3dyh6.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n\
    \     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] sort_numbers(numbers::String)\n     @ Main /tmp/tmpdtq3dyh6.jl:10\n  \
    \ [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdtq3dyh6.jl:20 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdtq3dyh6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpdtq3dyh6.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n\
    \     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] sort_numbers(numbers::String)\n     @ Main /tmp/tmpdtq3dyh6.jl:10\n  \
    \ [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdtq3dyh6.jl:21 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdtq3dyh6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpdtq3dyh6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  MethodError: objects\
    \ of type Dict{String, Int64} are not callable\n  Stacktrace:\n   [1] iterate\n\
    \     @ ./generator.jl:47 [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n\
    \   [3] collect_similar\n     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split()\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpfkb12q99.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpfkb12q99.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpfkb12q99.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfkb12q99.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfkb12q99.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpfkb12q99.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpfkb12q99.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfkb12q99.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfkb12q99.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpfkb12q99.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpfkb12q99.jl:8\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfkb12q99.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfkb12q99.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpfkb12q99.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero "
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers, \" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz4vwe96_.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpz4vwe96_.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_5qlhtoj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp_5qlhtoj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    num_dict = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\"\
    \ => 3, \"four\" => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\"\
    \ => 8, \"nine\" => 9)\n    num_list = []\n    for num in nums\n        push!(num_list,\
    \ num_dict[num])\n    end\n    num_list = sort(num_list)\n    num_list_str = []\n\
    \    for num in num_list\n        push!(num_list_str, num_dict[num])\n    end\n\
    \    return join(num_list_str, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp0hmvs_ly.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp0hmvs_ly.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp0hmvs_ly.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0hmvs_ly.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0hmvs_ly.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp0hmvs_ly.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \   [1] getindex(h::Dict{String, Int64}, key::Int64)\n     @ Base ./dict.jl:481\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp0hmvs_ly.jl:17\n  \
    \ [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0hmvs_ly.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0hmvs_ly.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp0hmvs_ly.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  KeyError: key 3 not\
    \ found\n  Stacktrace:\n   [1] getindex(h::Dict{String, Int64}, key::Int64)\n\
    \     @ Base ./dict.jl:481\n   [2] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmp0hmvs_ly.jl:17\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0hmvs_ly.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0hmvs_ly.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp0hmvs_ly.jl:29\n  Test threw exception\n  Expression:\
    \ candidate"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = sort(num_list)\n   \
    \ num_list = map(num_list) do x\n        num_dict[x]\n    end\n    num_list =\
    \ sort(num_list)\n    num_list = map(num_list) do x\n        for (key, value)\
    \ in num_dict\n            if value == x\n                return key\n       \
    \     end\n        end\n    end\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmptbjpxacd.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmptbjpxacd.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmptbjpxacd.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptbjpxacd.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptbjpxacd.jl:28\ntest set:\
    \ Error During Test at /tmp/tmptbjpxacd.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmptbjpxacd.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptbjpxacd.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptbjpxacd.jl:28\ntest set:\
    \ Error During Test at /tmp/tmptbjpxacd.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmptbjpxacd.jl:9\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptbjpxacd.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptbjpxacd.jl:28\ntest set:\
    \ Error During Test at /tmp/tmptbjpxacd.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero "
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[n] for n in split(numbers)]\n    return join([key\
    \ for (key, value) in num_dict if value in sort(num_list)], \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp386741er.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp386741er.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp386741er.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp386741er.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp386741er.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp386741er.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp386741er.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp386741er.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp386741er.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp386741er.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(num_dict, num_list)\n\
    \    sort!(num_list)\n    num_list = map(num_dict, num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpdtq3dyh6.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpdtq3dyh6.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n\
    \     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] sort_numbers(numbers::String)\n     @ Main /tmp/tmpdtq3dyh6.jl:10\n  \
    \ [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdtq3dyh6.jl:20 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdtq3dyh6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpdtq3dyh6.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n\
    \     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] sort_numbers(numbers::String)\n     @ Main /tmp/tmpdtq3dyh6.jl:10\n  \
    \ [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdtq3dyh6.jl:21 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdtq3dyh6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpdtq3dyh6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  MethodError: objects\
    \ of type Dict{String, Int64} are not callable\n  Stacktrace:\n   [1] iterate\n\
    \     @ ./generator.jl:47 [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n\
    \   [3] collect_similar\n     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptkztdern.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmptkztdern.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptkztdern.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptkztdern.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptkztdern.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptkztdern.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptkztdern.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptkztdern.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptkztdern.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptkztdern.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = [num_dict[x] for x\
    \ in num_list]\n    num_list = sort(num_list)\n    num_list = [key for (key, value)\
    \ in num_dict if value in num_list]\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpiaqxiqj2.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpiaqxiqj2.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] #1\n     @ ./none:0 [inlined]\n\
    \   [3] iterate\n     @ ./generator.jl:47 [inlined]\n   [4] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#4\"{Dict{String, Int64}}})\n     @ Base ./array.jl:724\n   [5] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpiaqxiqj2.jl:10\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpiaqxiqj2.jl:20 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpiaqxiqj2.jl:19\ntest set:\
    \ Test Failed at /tmp/tmpiaqxiqj2.jl:22\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiaqxiqj2.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiaqxiqj2.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpiaqxiqj2.jl:23\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiaqxiqj2.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiaqxiqj2.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpiaqxiqj2.jl:24\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one"
  timestamp: 1659798039
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmppcosup3e.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmppcosup3e.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmppcosup3e.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmppcosup3e.jl:10\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmppcosup3e.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmppcosup3e.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppcosup3e.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmppcosup3e.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmppcosup3e.jl:12\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmppcosup3e.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmppcosup3e.jl:19\ntest set:\
    \ Error During Test"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers)]\n    sorted_list =\
    \ sort(num_list)\n    sorted_numbers = [key for (key, value) in num_dict if value\
    \ in sorted_list]\n    return join(sorted_numbers, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0xstoxjd.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp0xstoxjd.jl:21\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0xstoxjd.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0xstoxjd.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp0xstoxjd.jl:22\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0xstoxjd.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0xstoxjd.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp0xstoxjd.jl:23\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0xstoxjd.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0xstoxjd.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_5qlhtoj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp_5qlhtoj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    num_list = sort(num_list)\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7_ph_65_.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp7_ph_65_.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmp7_ph_65_.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp7_ph_65_.jl:10\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmp7_ph_65_.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmp7_ph_65_.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp7_ph_65_.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmp7_ph_65_.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp7_ph_65_.jl:12\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmp7_ph_65_.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmp7_ph_65_.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp7_ph_65_"
  timestamp: 1659798038
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = map(x -> parse(Int, x), nums)\n    sort!(nums)\n    nums = map(x ->\
    \ string(x), nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp0lbjjil_.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmp0lbjjil_.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmp0lbjjil_.jl:9 [inlined]\n    [5] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [7] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [8] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n    [9] sort_numbers(numbers::String)\n      @ Main /tmp/tmp0lbjjil_.jl:9\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmp0lbjjil_.jl:20 [inlined]\n\
    \   [12] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmp0lbjjil_.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp0lbjjil_.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmp0lbjjil_.jl:9 [inlined]\n    [5] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown"
  timestamp: 1659798038
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = map(x -> parse(Int, x), nums)\n    sort!(nums)\n    nums = map(x ->\
    \ string(x), nums)\n    join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpyaa_7gpk.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpyaa_7gpk.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmpyaa_7gpk.jl:9 [inlined]\n    [5] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [7] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [8] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n    [9] sort_numbers(numbers::String)\n      @ Main /tmp/tmpyaa_7gpk.jl:9\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmpyaa_7gpk.jl:20 [inlined]\n\
    \   [12] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmpyaa_7gpk.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpyaa_7gpk.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmpyaa_7gpk.jl:9 [inlined]\n    [5] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown"
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [int(num) for num in nums]\n    sort!(nums_int)\n    nums_str\
    \ = [string(num) for num in nums_int]\n    return join(nums_str, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp9pu6oyui.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmp9pu6oyui.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#3\")(num::SubString{String})\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp9pu6oyui.jl:9\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp9pu6oyui.jl:20 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp9pu6oyui.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp9pu6oyui.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: int\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#3\")(num::SubString{String})\n\
    \     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n  \
    \ [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\n \
    \    @ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmp9pu6oyui.jl:9\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp9pu6oyui.jl:21 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp9pu6oyui.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp9pu6oyui.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] (::var\"#1#3\"\
    )(num::SubString{String})\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#3\"})\n     @ Base ./array.jl:724\n   [4] sort_n"
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ numbers.split(\" \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp33hhaj23.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp33hhaj23.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp33hhaj23.jl:8\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp33hhaj23.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp33hhaj23.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp33hhaj23.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp33hhaj23.jl:8\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp33hhaj23.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp33hhaj23.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp33hhaj23.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp33hhaj23.jl:8\n   [3]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp33hhaj23.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp33hhaj23.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp33hhaj23.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  "
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = sort(num_list)\n   \
    \ num_list = map(num_list) do x\n        num_dict[x]\n    end\n    num_list =\
    \ sort(num_list)\n    num_list = map(num_list) do x\n        for (key, value)\
    \ in num_dict\n            if value == x\n                return key\n       \
    \     end\n        end\n    end\n    num_list = join(num_list, \" \")\n    return\
    \ num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t\
    @test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpawzqtbc6.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpawzqtbc6.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpawzqtbc6.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpawzqtbc6.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpawzqtbc6.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpawzqtbc6.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpawzqtbc6.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpawzqtbc6.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpawzqtbc6.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpawzqtbc6.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpawzqtbc6.jl:9\n   [3]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpawzqtbc6.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpawzqtbc6.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpawzqtbc6.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  "
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpx6aab.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpilpx6aab.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpx6aab.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpx6aab.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpilpx6aab.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpx6aab.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpx6aab.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpilpx6aab.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpx6aab.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpx6aab.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = map(x -> parse(Int, x), nums)\n    nums = sort(nums)\n  \
    \  nums = map(x -> string(x), nums)\n    nums = join(nums, \" \")\n    return\
    \ nums\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmphl2taspx.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmphl2taspx.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  ArgumentError: input string is empty\
    \ or only contains whitespace\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:109\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmphl2taspx.jl:9 [inlined]\n    [5] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [7] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [8] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n    [9] sort_numbers(numbers::String)\n      @ Main /tmp/tmphl2taspx.jl:9\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmphl2taspx.jl:20 [inlined]\n\
    \   [12] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmphl2taspx.jl:19\ntest set:\
    \ Error During Test at /tmp/tmphl2taspx.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  ArgumentError: invalid base 10 digit 't'\
    \ in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmphl2taspx.jl:9 [inlined]\n    [5] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasSh"
  timestamp: 1659798038
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = [num_dict[i] for i\
    \ in num_list]\n    num_list = sort(num_list)\n    num_list = [key for (key, value)\
    \ in num_dict if value in num_list]\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp0irz92fc.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp0irz92fc.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] #1\n     @ ./none:0 [inlined]\n\
    \   [3] iterate\n     @ ./generator.jl:47 [inlined]\n   [4] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#4\"{Dict{String, Int64}}})\n     @ Base ./array.jl:724\n   [5] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp0irz92fc.jl:10\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp0irz92fc.jl:20 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp0irz92fc.jl:19\ntest set:\
    \ Test Failed at /tmp/tmp0irz92fc.jl:22\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0irz92fc.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0irz92fc.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0irz92fc.jl:23\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0irz92fc.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0irz92fc.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0irz92fc.jl:24\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one"
  timestamp: 1659798038
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers)]\n    sort!(num_list)\n\
    \    return join([key for (key, value) in num_dict if value in num_list], \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpv1gl48su.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpv1gl48su.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1gl48su.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1gl48su.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpv1gl48su.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1gl48su.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1gl48su.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpv1gl48su.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1gl48su.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1gl48su.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmppcosup3e.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmppcosup3e.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmppcosup3e.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmppcosup3e.jl:10\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmppcosup3e.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmppcosup3e.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppcosup3e.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmppcosup3e.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmppcosup3e.jl:12\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmppcosup3e.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmppcosup3e.jl:19\ntest set:\
    \ Error During Test"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_5qlhtoj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp_5qlhtoj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers, \" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz4vwe96_.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpz4vwe96_.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = sort(num_list)\n   \
    \ num_list = map(num_list) do x\n        num_dict[x]\n    end\n    num_list =\
    \ sort(num_list)\n    num_list = map(num_list) do x\n        for (key, value)\
    \ in num_dict\n            if x == value\n                return key\n       \
    \     end\n        end\n    end\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp_kh606qo.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp_kh606qo.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp_kh606qo.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_kh606qo.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_kh606qo.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp_kh606qo.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp_kh606qo.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_kh606qo.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_kh606qo.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp_kh606qo.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp_kh606qo.jl:9\n   [3]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_kh606qo.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_kh606qo.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp_kh606qo.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  "
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpx6aab.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpilpx6aab.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpx6aab.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpx6aab.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpilpx6aab.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpx6aab.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpx6aab.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpilpx6aab.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpx6aab.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpx6aab.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, num) for num in nums]\n    sort!(nums_int)\n    nums_str\
    \ = [string(num) for num in nums_int]\n    return join(nums_str, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpghw3chtn.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpghw3chtn.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpghw3chtn.jl:9\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpghw3chtn.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpghw3chtn.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpghw3chtn.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpghw3chtn.jl:9\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpghw3chtn.jl:21 [inlined]\n\
    \   ["
  timestamp: 1659798038
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4gmw61bj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp4gmw61bj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4gmw61bj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4gmw61bj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4gmw61bj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4gmw61bj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4gmw61bj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4gmw61bj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4gmw61bj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4gmw61bj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmppcosup3e.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmppcosup3e.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmppcosup3e.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmppcosup3e.jl:10\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmppcosup3e.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmppcosup3e.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppcosup3e.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmppcosup3e.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmppcosup3e.jl:12\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmppcosup3e.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmppcosup3e.jl:19\ntest set:\
    \ Error During Test"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpo88t8pdd.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpo88t8pdd.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmpo88t8pdd.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpo88t8pdd.jl:10\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo88t8pdd.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo88t8pdd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpo88t8pdd.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmpo88t8pdd.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpo88t8pdd.jl:12\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo88t8pdd.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo88t8pdd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpo88t8pdd"
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = sort(num_list)\n   \
    \ num_list = map(num_list) do num\n        num_dict[num]\n    end\n    num_list\
    \ = sort(num_list)\n    num_list = map(num_list) do num\n        for (key, value)\
    \ in num_dict\n            if value == num\n                return key\n     \
    \       end\n        end\n    end\n    num_list = join(num_list, \" \")\n    return\
    \ num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t\
    @test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7na_rh7k.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp7na_rh7k.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp7na_rh7k.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7na_rh7k.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7na_rh7k.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7na_rh7k.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp7na_rh7k.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7na_rh7k.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7na_rh7k.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7na_rh7k.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp7na_rh7k.jl:9\n   [3]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7na_rh7k.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7na_rh7k.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7na_rh7k.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  "
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpx6aab.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpilpx6aab.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpx6aab.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpx6aab.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpilpx6aab.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpx6aab.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpx6aab.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpilpx6aab.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpx6aab.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpx6aab.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums_int = [int(n) for n in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(n) for n in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp_8469zz7.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmp_8469zz7.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#3\")(n::SubString{String})\n     @ Main ./none:0\n   [2] iterate\n\
    \     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp_8469zz7.jl:9\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp_8469zz7.jl:19 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp_8469zz7.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp_8469zz7.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#3\")(n::SubString{String})\n     @ Main ./none:0\n   [2] iterate\n\
    \     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp_8469zz7.jl:9\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp_8469zz7.jl:20 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp_8469zz7.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp_8469zz7.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: int\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#3\")(n::SubString{String})\n \
    \    @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\n     @\
    \ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n     @ Main /tmp/tmp_8469zz7.jl:9\n\
    \   [5] mac"
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n        \"two\" => 2,\n\
    \        \"three\" => 3,\n        \"four\" => 4,\n        \"five\" => 5,\n   \
    \     \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\" => 8,\n      \
    \  \"nine\" => 9\n    )\n    num_list = [num_dict[num] for num in split(numbers)]\n\
    \    sorted_list = sort(num_list)\n    sorted_numbers = [key for (key, value)\
    \ in num_dict if value in sorted_list]\n    return join(sorted_numbers, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvm9mlh2t.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpvm9mlh2t.jl:32\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvm9mlh2t.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvm9mlh2t.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpvm9mlh2t.jl:33\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvm9mlh2t.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvm9mlh2t.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpvm9mlh2t.jl:34\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvm9mlh2t.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvm9mlh2t.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmppcosup3e.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmppcosup3e.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmppcosup3e.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmppcosup3e.jl:10\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmppcosup3e.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmppcosup3e.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppcosup3e.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmppcosup3e.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmppcosup3e.jl:12\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmppcosup3e.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmppcosup3e.jl:19\ntest set:\
    \ Error During Test"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers)]\n    sort!(num_list)\n\
    \    return join([key for (key, value) in num_dict if value in num_list], \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpv1gl48su.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpv1gl48su.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1gl48su.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1gl48su.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpv1gl48su.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1gl48su.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1gl48su.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpv1gl48su.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1gl48su.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1gl48su.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers)]\n    sort!(num_list)\n\
    \    num_list = [string(x) for x in num_list]\n    return join(num_list, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplflbesgl.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmplflbesgl.jl:20\n  Expression: candidate(\"\
    three\") == \"three\"\n   Evaluated: \"3\" == \"three\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplflbesgl.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplflbesgl.jl:18\ntest set: Test\
    \ Failed at /tmp/tmplflbesgl.jl:21\n  Expression: candidate(\"three five nine\"\
    ) == \"three five nine\"\n   Evaluated: \"3 5 9\" == \"three five nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplflbesgl.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplflbesgl.jl:18\ntest set: Test\
    \ Failed at /tmp/tmplflbesgl.jl:22\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"0 4 5\
    \ 7 8 9\" == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplflbesgl.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplflbesgl.jl:18\ntest set: Test Failed at /tmp/tmplflbesgl.jl:23\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"0 1 2 3 4 5 6\" == \"zero one two three\
    \ four five six\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplflbesgl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplflbesgl.jl:18\nTest Summary:\
    \ | Pass  Fail  Total"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers)\n    num_list = sort(num_list)\n    return join(num_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpn5f4uq_p.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpn5f4uq_p.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn5f4uq_p.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn5f4uq_p.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # convert string\
    \ to array of numbers\n    nums = split(numbers, \" \")\n    # convert each number\
    \ to integer\n    for i in 1:length(nums)\n        nums[i] = parse(Int, nums[i])\n\
    \    end\n    # sort the array\n    sort!(nums)\n    # convert each number back\
    \ to string\n    for i in 1:length(nums)\n        nums[i] = string(nums[i])\n\
    \    end\n    # join the array into a string\n    return join(nums, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmphgn9oe8d.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmphgn9oe8d.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  ArgumentError: input string is empty\
    \ or only contains whitespace\n  Stacktrace:\n   [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \     @ Base ./parse.jl:109\n   [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n     @ Base ./parse.jl:241\n   [3] parse\n     @ ./parse.jl:241\
    \ [inlined]\n   [4] sort_numbers(numbers::String)\n     @ Main /tmp/tmphgn9oe8d.jl:12\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmphgn9oe8d.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmphgn9oe8d.jl:27\ntest set:\
    \ Error During Test at /tmp/tmphgn9oe8d.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  ArgumentError: invalid base 10 digit 't'\
    \ in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \     @ Base ./parse.jl:137\n   [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n     @ Base ./parse.jl:241\n   [3] parse\n     @ ./parse.jl:241\
    \ [inlined]\n   [4] sort_numbers(numbers::String)\n     @ Main /tmp/tmphgn9oe8d.jl:12\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmphgn9oe8d.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmphgn9oe8d.jl:27\ntest set:\
    \ Error During Test at /tmp/tmphgn9oe8d.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{S"
  timestamp: 1659798038
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = map(x -> parse(Int, x), nums)\n    sort!(nums)\n    nums = map(x ->\
    \ string(x), nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp0lbjjil_.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmp0lbjjil_.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmp0lbjjil_.jl:9 [inlined]\n    [5] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [7] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [8] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n    [9] sort_numbers(numbers::String)\n      @ Main /tmp/tmp0lbjjil_.jl:9\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmp0lbjjil_.jl:20 [inlined]\n\
    \   [12] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmp0lbjjil_.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp0lbjjil_.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmp0lbjjil_.jl:9 [inlined]\n    [5] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown"
  timestamp: 1659798038
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers, \" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz4vwe96_.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpz4vwe96_.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers, \" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz4vwe96_.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpz4vwe96_.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n        \"two\" => 2,\n\
    \        \"three\" => 3,\n        \"four\" => 4,\n        \"five\" => 5,\n   \
    \     \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\" => 8,\n      \
    \  \"nine\" => 9\n    )\n    num_list = split(numbers, \" \")\n    num_list =\
    \ sort(num_list) do x, y\n        num_dict[x] < num_dict[y]\n    end\n    return\
    \ join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7up2tn9q.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp7up2tn9q.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  MethodError: no method matching sort(::var\"\
    #1#2\"{Dict{String, Int64}}, ::Vector{SubString{String}})\n  Stacktrace:\n   [1]\
    \ sort_numbers(numbers::String)\n     @ Main /tmp/tmp7up2tn9q.jl:21\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7up2tn9q.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7up2tn9q.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp7up2tn9q.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  MethodError: no method matching sort(::var\"\
    #1#2\"{Dict{String, Int64}}, ::Vector{SubString{String}})\n  Stacktrace:\n   [1]\
    \ sort_numbers(numbers::String)\n     @ Main /tmp/tmp7up2tn9q.jl:21\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7up2tn9q.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7up2tn9q.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp7up2tn9q.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  MethodError: no method\
    \ matching sort(::var\"#1#2\"{Dict{String, Int64}}, ::Vector{SubString{String}})\n\
    \  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmp7up2tn9q.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7up2tn9q.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7up2tn9q.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp7up2tn9q.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero "
  timestamp: 1659798041
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_5qlhtoj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp_5qlhtoj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpo88t8pdd.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpo88t8pdd.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmpo88t8pdd.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpo88t8pdd.jl:10\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo88t8pdd.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo88t8pdd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpo88t8pdd.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmpo88t8pdd.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpo88t8pdd.jl:12\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo88t8pdd.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo88t8pdd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpo88t8pdd"
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptkztdern.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmptkztdern.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptkztdern.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptkztdern.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptkztdern.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptkztdern.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptkztdern.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptkztdern.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptkztdern.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptkztdern.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    num_list = sort(num_list)\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7_ph_65_.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp7_ph_65_.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmp7_ph_65_.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp7_ph_65_.jl:10\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmp7_ph_65_.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmp7_ph_65_.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp7_ph_65_.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmp7_ph_65_.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp7_ph_65_.jl:12\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmp7_ph_65_.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmp7_ph_65_.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp7_ph_65_"
  timestamp: 1659798038
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_5qlhtoj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp_5qlhtoj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    num_dict = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3,\
    \ \"four\" => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8,\
    \ \"nine\" => 9)\n    nums_int = [num_dict[num] for num in nums]\n    sorted_nums\
    \ = sort(nums_int)\n    sorted_nums_str = [key for (key, value) in num_dict if\
    \ value in sorted_nums]\n    return join(sorted_nums_str, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk4pygq4s.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpk4pygq4s.jl:22\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk4pygq4s.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk4pygq4s.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk4pygq4s.jl:23\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk4pygq4s.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk4pygq4s.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk4pygq4s.jl:24\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk4pygq4s.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk4pygq4s.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798039
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # split the\
    \ string into a vector of strings\n    nums = split(numbers)\n    # convert the\
    \ vector of strings to a vector of integers\n    nums = parse.(Int, nums)\n  \
    \  # sort the vector of integers\n    sort!(nums)\n    # convert the vector of\
    \ integers to a vector of strings\n    nums = string.(nums)\n    # join the vector\
    \ of strings into a single string\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw1o55xw6.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw1o55xw6.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broadcast.jl:653 [inlined]\n    [6] getindex\n\
    \      @ ./broadcast.jl:597 [inlined]\n    [7] macro expansion\n      @ ./broadcast.jl:961\
    \ [inlined]\n    [8] macro expansion\n      @ ./simdloop.jl:77 [inlined]\n   \
    \ [9] copyto!\n      @ ./broadcast.jl:960 [inlined]\n   [10] copyto!\n      @\
    \ ./broadcast.jl:913 [inlined]\n   [11] copy\n      @ ./broadcast.jl:885 [inlined]\n\
    \   [12] materialize\n      @ ./broadcast.jl:860 [inlined]\n   [13] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpw1o55xw6.jl:11\n   [14] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [15] macro expansion\n      @ /tmp/tmpw1o55xw6.jl:25 [inlined]\n\
    \   [16] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [17] top-level scope\n      @ /tmp/tmpw1o55xw6.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw1o55xw6.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broad"
  timestamp: 1659798040
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    number_dict\
    \ = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    number_list = split(numbers)\n    number_list = [number_dict[number]\
    \ for number in number_list]\n    number_list = sort(number_list)\n    number_list\
    \ = [key for (key, value) in number_dict if value in number_list]\n    return\
    \ join(number_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpoya_u9l1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpoya_u9l1.jl:22\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoya_u9l1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoya_u9l1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpoya_u9l1.jl:23\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoya_u9l1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoya_u9l1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpoya_u9l1.jl:24\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoya_u9l1.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoya_u9l1.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798039
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = map(x -> parse(Int, x), nums)\n    sort!(nums)\n    nums = map(x ->\
    \ string(x), nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp0lbjjil_.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmp0lbjjil_.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmp0lbjjil_.jl:9 [inlined]\n    [5] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [7] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [8] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n    [9] sort_numbers(numbers::String)\n      @ Main /tmp/tmp0lbjjil_.jl:9\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmp0lbjjil_.jl:20 [inlined]\n\
    \   [12] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmp0lbjjil_.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp0lbjjil_.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmp0lbjjil_.jl:9 [inlined]\n    [5] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown"
  timestamp: 1659798038
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = sort(num_list)\n   \
    \ num_list = [num_dict[x] for x in num_list]\n    num_list = sort(num_list)\n\
    \    num_list = [key for (key, value) in num_dict.items() if value in num_list]\n\
    \    return \" \".join(num_list)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmppsjk22b7.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmppsjk22b7.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmppsjk22b7.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppsjk22b7.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppsjk22b7.jl:20\ntest set:\
    \ Error During Test at /tmp/tmppsjk22b7.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmppsjk22b7.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppsjk22b7.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppsjk22b7.jl:20\ntest set:\
    \ Error During Test at /tmp/tmppsjk22b7.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmppsjk22b7.jl:9\n   [3]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppsjk22b7.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppsjk22b7.jl:20\ntest set:\
    \ Error During Test at /tmp/tmppsjk22b7.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  "
  timestamp: 1659798040
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpo88t8pdd.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpo88t8pdd.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmpo88t8pdd.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpo88t8pdd.jl:10\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo88t8pdd.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo88t8pdd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpo88t8pdd.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmpo88t8pdd.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpo88t8pdd.jl:12\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo88t8pdd.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo88t8pdd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpo88t8pdd"
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, n) for n in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(n) for n in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpcl3dwyui.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpcl3dwyui.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpcl3dwyui.jl:9\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpcl3dwyui.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpcl3dwyui.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpcl3dwyui.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpcl3dwyui.jl:9\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpcl3dwyui.jl:21 [inlined]\n\
    \   ["
  timestamp: 1659798040
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers)]\n    sorted_list =\
    \ sort(num_list)\n    sorted_string = join(string.(sorted_list), \" \")\n    return\
    \ sorted_string\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb9a1bllw.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpb9a1bllw.jl:20\n  Expression: candidate(\"\
    three\") == \"three\"\n   Evaluated: \"3\" == \"three\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9a1bllw.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9a1bllw.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpb9a1bllw.jl:21\n  Expression: candidate(\"three five nine\"\
    ) == \"three five nine\"\n   Evaluated: \"3 5 9\" == \"three five nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9a1bllw.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9a1bllw.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpb9a1bllw.jl:22\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"0 4 5\
    \ 7 8 9\" == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb9a1bllw.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpb9a1bllw.jl:18\ntest set: Test Failed at /tmp/tmpb9a1bllw.jl:23\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"0 1 2 3 4 5 6\" == \"zero one two three\
    \ four five six\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9a1bllw.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9a1bllw.jl:18\nTest Summary:\
    \ | Pass  Fail  Total"
  timestamp: 1659798039
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ numbers.split(\" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp0sr206mo.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp0sr206mo.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp0sr206mo.jl:8\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0sr206mo.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0sr206mo.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp0sr206mo.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp0sr206mo.jl:8\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0sr206mo.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0sr206mo.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp0sr206mo.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp0sr206mo.jl:8\n   [3]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0sr206mo.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0sr206mo.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp0sr206mo.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  "
  timestamp: 1659798040
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmppcosup3e.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmppcosup3e.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmppcosup3e.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmppcosup3e.jl:10\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmppcosup3e.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmppcosup3e.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppcosup3e.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmppcosup3e.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmppcosup3e.jl:12\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmppcosup3e.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmppcosup3e.jl:19\ntest set:\
    \ Error During Test"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ numbers.split()\n    num_list = sort(num_list)\n    return \" \".join(num_list)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpd1a4gfy9.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpd1a4gfy9.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpd1a4gfy9.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd1a4gfy9.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd1a4gfy9.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpd1a4gfy9.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpd1a4gfy9.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd1a4gfy9.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd1a4gfy9.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpd1a4gfy9.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpd1a4gfy9.jl:8\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd1a4gfy9.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd1a4gfy9.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpd1a4gfy9.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero "
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_5qlhtoj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp_5qlhtoj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n        \"two\" => 2,\n\
    \        \"three\" => 3,\n        \"four\" => 4,\n        \"five\" => 5,\n   \
    \     \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\" => 8,\n      \
    \  \"nine\" => 9\n    )\n    nums = [num_dict[n] for n in split(numbers)]\n  \
    \  sort!(nums)\n    return join([key for (key, value) in num_dict if value in\
    \ nums], \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1g05scie.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp1g05scie.jl:31\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1g05scie.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1g05scie.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1g05scie.jl:32\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1g05scie.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1g05scie.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1g05scie.jl:33\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1g05scie.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1g05scie.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798040
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [int(n) for n in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(n) for n in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsyclphi7.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpsyclphi7.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#3\")(n::SubString{String})\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpsyclphi7.jl:9\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpsyclphi7.jl:20 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpsyclphi7.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpsyclphi7.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: int\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#3\")(n::SubString{String})\n \
    \    @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\n     @\
    \ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n     @ Main /tmp/tmpsyclphi7.jl:9\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpsyclphi7.jl:21 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpsyclphi7.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpsyclphi7.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] (::var\"#1#3\"\
    )(n::SubString{String})\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#3\"})\n     @ Base ./array.jl:724\n   [4] sort_numbers"
  timestamp: 1659798041
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list_int = [num_dict[i] for\
    \ i in num_list]\n    sort!(num_list_int)\n    num_list_str = [key for (key, value)\
    \ in num_dict if value in num_list_int]\n    return join(num_list_str, \" \")\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp_6zc_3xo.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp_6zc_3xo.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] #1\n     @ ./none:0 [inlined]\n\
    \   [3] iterate\n     @ ./generator.jl:47 [inlined]\n   [4] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#4\"{Dict{String, Int64}}})\n     @ Base ./array.jl:724\n   [5] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp_6zc_3xo.jl:10\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp_6zc_3xo.jl:20 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp_6zc_3xo.jl:19\ntest set:\
    \ Test Failed at /tmp/tmp_6zc_3xo.jl:22\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_6zc_3xo.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_6zc_3xo.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp_6zc_3xo.jl:23\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_6zc_3xo.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_6zc_3xo.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp_6zc_3xo.jl:24\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one"
  timestamp: 1659798042
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpo88t8pdd.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpo88t8pdd.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmpo88t8pdd.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpo88t8pdd.jl:10\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo88t8pdd.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo88t8pdd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpo88t8pdd.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmpo88t8pdd.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpo88t8pdd.jl:12\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo88t8pdd.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo88t8pdd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpo88t8pdd"
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[num] for num in split(numbers)]\n    sort!(num_list)\n\
    \    return join([key for (key, value) in num_dict if value in num_list], \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6l9_pa9i.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp6l9_pa9i.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6l9_pa9i.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6l9_pa9i.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp6l9_pa9i.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6l9_pa9i.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6l9_pa9i.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp6l9_pa9i.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6l9_pa9i.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6l9_pa9i.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798040
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpo88t8pdd.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpo88t8pdd.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmpo88t8pdd.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpo88t8pdd.jl:10\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo88t8pdd.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo88t8pdd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpo88t8pdd.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmpo88t8pdd.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpo88t8pdd.jl:12\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo88t8pdd.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo88t8pdd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpo88t8pdd"
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = [num_dict[i] for i\
    \ in num_list]\n    sort!(num_list)\n    num_list = [key(num_dict, i) for i in\
    \ num_list]\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpuxwion_x.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpuxwion_x.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] #1\n     @ ./none:0 [inlined]\n\
    \   [3] iterate\n     @ ./generator.jl:47 [inlined]\n   [4] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"{Dict{String, Int64}}})\n     @ Base ./array.jl:724\n   [5] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpuxwion_x.jl:10\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpuxwion_x.jl:20 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpuxwion_x.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpuxwion_x.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  UndefVarError: key not defined\n  Stacktrace:\n\
    \   [1] (::var\"#2#4\"{Dict{String, Int64}})(i::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#2#4\"{Dict{String, Int64}}})\n     @ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpuxwion_x.jl:12\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpuxwion_x.jl:21 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpuxwion_x.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpuxwion_x.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: key\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#2#4\"{Dict{String, Int64}})(i::Int64)\n\
    \     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n  \
    \ [3] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Dict{String, Int64}}})\n\
    \     @ Base ./array.jl:724\n   [4] "
  timestamp: 1659798041
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_dict = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" =>\
    \ 3, \"four\" => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" =>\
    \ 8, \"nine\" => 9)\n    nums_int = [nums_dict[i] for i in nums]\n    nums_int\
    \ = sort(nums_int)\n    nums_str = [key for (key, value) in nums_dict if value\
    \ in nums_int]\n    return join(nums_str, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsom4mfk6.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpsom4mfk6.jl:22\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsom4mfk6.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsom4mfk6.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpsom4mfk6.jl:23\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsom4mfk6.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsom4mfk6.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpsom4mfk6.jl:24\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsom4mfk6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsom4mfk6.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798040
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n        \"two\" => 2,\n\
    \        \"three\" => 3,\n        \"four\" => 4,\n        \"five\" => 5,\n   \
    \     \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\" => 8,\n      \
    \  \"nine\" => 9\n    )\n    num_list = numbers.split(\" \")\n    num_list = sort(num_list)\
    \ do num_dict[a] <=> num_dict[b] end\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<=\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpks8s1iat.jl:21\nin expression starting at\
    \ /tmp/tmpks8s1iat.jl:21\n"
  stdout: ''
  timestamp: 1659798039
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmof24juo.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmof24juo.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmof24juo.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmof24juo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmof24juo.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmof24juo.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmof24juo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmof24juo.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmof24juo.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmof24juo.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798040
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers)\n    num_list = sort(num_list)\n    return join(num_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpn5f4uq_p.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpn5f4uq_p.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn5f4uq_p.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn5f4uq_p.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers, \" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz4vwe96_.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpz4vwe96_.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = sort(num_list)\n  \
    \  num_list = map(num_list) do x\n        num_dict[x]\n    end\n    num_list =\
    \ sort(num_list)\n    num_list = map(num_list) do x\n        for (key, value)\
    \ in num_dict\n            if value == x\n                return key\n       \
    \     end\n        end\n    end\n    num_list = join(num_list, \" \")\n    return\
    \ num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t\
    @test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpr41iex6h.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpr41iex6h.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmpr41iex6h.jl:12\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpr41iex6h.jl:11\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpr41iex6h.jl:30 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpr41iex6h.jl:29\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    4      1      5\n"
  timestamp: 1659798041
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(num_dict, num_list)\n\
    \    sort!(num_list)\n    num_list = map(num_dict, num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpdtq3dyh6.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpdtq3dyh6.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n\
    \     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] sort_numbers(numbers::String)\n     @ Main /tmp/tmpdtq3dyh6.jl:10\n  \
    \ [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdtq3dyh6.jl:20 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdtq3dyh6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpdtq3dyh6.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n\
    \     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] sort_numbers(numbers::String)\n     @ Main /tmp/tmpdtq3dyh6.jl:10\n  \
    \ [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdtq3dyh6.jl:21 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdtq3dyh6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpdtq3dyh6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  MethodError: objects\
    \ of type Dict{String, Int64} are not callable\n  Stacktrace:\n   [1] iterate\n\
    \     @ ./generator.jl:47 [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n\
    \   [3] collect_similar\n     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numeral_dict\
    \ = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    nums = [numeral_dict[num] for num in split(numbers)]\n    return \"\
    \ \".join([key for (key, value) in numeral_dict if value in sort(nums)])\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpof6tgj5j.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpof6tgj5j.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field join\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpof6tgj5j.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpof6tgj5j.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpof6tgj5j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpof6tgj5j.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field join\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpof6tgj5j.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpof6tgj5j.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpof6tgj5j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpof6tgj5j.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field join\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpof6tgj5j.jl:10\n  \
    \ [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpof6tgj5j.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpof6tgj5j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpof6tgj5j.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  "
  timestamp: 1659798041
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpq8d0b0ju.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpq8d0b0ju.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpq8d0b0ju.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpq8d0b0ju.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpq8d0b0ju.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpq8d0b0ju.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpq8d0b0ju.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpq8d0b0ju.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpq8d0b0ju.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpq8d0b0ju.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpq8d0b0ju.jl:8\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpq8d0b0ju.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpq8d0b0ju.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpq8d0b0ju.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero "
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = [num_dict[i] for i\
    \ in num_list]\n    num_list = sort(num_list)\n    num_list = [key for key in\
    \ num_dict.keys() if num_dict[key] in num_list]\n    return join(num_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpjrtjoxoj.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpjrtjoxoj.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] #1\n     @ ./none:0 [inlined]\n\
    \   [3] iterate\n     @ ./generator.jl:47 [inlined]\n   [4] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"{Dict{String, Int64}}})\n     @ Base ./array.jl:724\n   [5] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpjrtjoxoj.jl:10\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpjrtjoxoj.jl:20 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpjrtjoxoj.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpjrtjoxoj.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  MethodError: objects of type Vector{String}\
    \ are not callable\n  Use square brackets [] for indexing an Array.\n  Stacktrace:\n\
    \   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmpjrtjoxoj.jl:12\n  \
    \ [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjrtjoxoj.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjrtjoxoj.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpjrtjoxoj.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  MethodError: objects\
    \ of type Vector{String} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmpjrtjoxoj.jl:12\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjrtjoxoj.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1"
  timestamp: 1659798042
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpo88t8pdd.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpo88t8pdd.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmpo88t8pdd.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpo88t8pdd.jl:10\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo88t8pdd.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo88t8pdd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpo88t8pdd.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmpo88t8pdd.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpo88t8pdd.jl:12\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo88t8pdd.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo88t8pdd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpo88t8pdd"
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers)\n    sort!(numbers_list)\n    return join(numbers_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc8w65a7z.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpc8w65a7z.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc8w65a7z.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc8w65a7z.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc8w65a7z.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc8w65a7z.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc8w65a7z.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc8w65a7z.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc8w65a7z.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc8w65a7z.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798040
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers, \" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz4vwe96_.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpz4vwe96_.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpo88t8pdd.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpo88t8pdd.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmpo88t8pdd.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpo88t8pdd.jl:10\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo88t8pdd.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo88t8pdd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpo88t8pdd.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmpo88t8pdd.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpo88t8pdd.jl:12\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo88t8pdd.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo88t8pdd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpo88t8pdd"
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [int(i) for i in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(i) for i in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp3vjh9lwo.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmp3vjh9lwo.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#3\")(i::SubString{String})\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp3vjh9lwo.jl:9\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3vjh9lwo.jl:20 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3vjh9lwo.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp3vjh9lwo.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: int\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#3\")(i::SubString{String})\n \
    \    @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\n     @\
    \ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n     @ Main /tmp/tmp3vjh9lwo.jl:9\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3vjh9lwo.jl:21 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3vjh9lwo.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp3vjh9lwo.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] (::var\"#1#3\"\
    )(i::SubString{String})\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#3\"})\n     @ Base ./array.jl:724\n   [4] sort_numbers"
  timestamp: 1659798042
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n        \"two\" => 2,\n\
    \        \"three\" => 3,\n        \"four\" => 4,\n        \"five\" => 5,\n   \
    \     \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\" => 8,\n      \
    \  \"nine\" => 9\n    )\n    num_list = [num_dict[num] for num in split(numbers)]\n\
    \    sort!(num_list)\n    return join([key for (key, value) in num_dict if value\
    \ in num_list], \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzzzpuuhy.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpzzzpuuhy.jl:31\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzzzpuuhy.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzzzpuuhy.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzzzpuuhy.jl:32\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzzzpuuhy.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzzzpuuhy.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzzzpuuhy.jl:33\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzzzpuuhy.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzzzpuuhy.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798041
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = sort(num_list)\n  \
    \  num_list = map(num_dict, num_list)\n    num_list = sort(num_list)\n    num_list\
    \ = map(num_dict, num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpdwpr37lm.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmpdwpr37lm.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n\
    \     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] sort_numbers(numbers::String)\n     @ Main /tmp/tmpdwpr37lm.jl:11\n  \
    \ [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdwpr37lm.jl:21 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdwpr37lm.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpdwpr37lm.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n\
    \     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] sort_numbers(numbers::String)\n     @ Main /tmp/tmpdwpr37lm.jl:11\n  \
    \ [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdwpr37lm.jl:22 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdwpr37lm.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpdwpr37lm.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  MethodError: objects\
    \ of type Dict{String, Int64} are not callable\n  Stacktrace:\n   [1] iterate\n\
    \     @ ./generator.jl:47 [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n\
    \   [3] collect_similar\n     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867\
    \ [inlined]\n   ["
  timestamp: 1659798043
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = sort(num_list)\n  \
    \  num_list = map(x -> num_dict[x], num_list)\n    num_list = map(x -> string(x),\
    \ num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp9ovdr9d4.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp9ovdr9d4.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmp9ovdr9d4.jl:11\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp9ovdr9d4.jl:11\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmp9ovdr9d4.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmp9ovdr9d4.jl:19\ntest set:\
    \ Test Failed at /tmp/tmp9ovdr9d4.jl:21\n  Expression: candidate(\"three\") ==\
    \ \"three\"\n   Evaluated: \"3\" == \"three\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9ovdr9d4.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9ovdr9d4.jl:19\ntest set: Test Failed at /tmp/tmp9ovdr9d4.jl:22\n\
    \  Expression: candidate(\"three five nine\") == \"three five nine\"\n   Evaluated:\
    \ \"5 9 3\" == \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ovdr9d4.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ovdr9d4.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp9ovdr9d4.jl:23\n  Expression: candidate(\""
  timestamp: 1659798043
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = sort(num_list)\n   \
    \ num_list = map(x -> num_dict[x], num_list)\n    num_list = map(x -> string(x),\
    \ num_list)\n    num_list = join(num_list, \" \")\n    return num_list\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpiyc45fgn.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmpiyc45fgn.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpiyc45fgn.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpiyc45fgn.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpiyc45fgn.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpiyc45fgn.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpiyc45fgn.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpiyc45fgn.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpiyc45fgn.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpiyc45fgn.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpiyc45fgn.jl:9\n   [3]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpiyc45fgn.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpiyc45fgn.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpiyc45fgn.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  "
  timestamp: 1659798042
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = [num_dict[i] for i\
    \ in num_list]\n    num_list = sort(num_list)\n    num_list = [key for (key, value)\
    \ in num_dict if value in num_list]\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp0irz92fc.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp0irz92fc.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] #1\n     @ ./none:0 [inlined]\n\
    \   [3] iterate\n     @ ./generator.jl:47 [inlined]\n   [4] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#4\"{Dict{String, Int64}}})\n     @ Base ./array.jl:724\n   [5] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp0irz92fc.jl:10\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp0irz92fc.jl:20 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp0irz92fc.jl:19\ntest set:\
    \ Test Failed at /tmp/tmp0irz92fc.jl:22\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0irz92fc.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0irz92fc.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0irz92fc.jl:23\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0irz92fc.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0irz92fc.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0irz92fc.jl:24\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one"
  timestamp: 1659798038
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_array\
    \ = split(numbers)\n    sort!(numbers_array)\n    return join(numbers_array, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0cc2orvi.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp0cc2orvi.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0cc2orvi.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0cc2orvi.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0cc2orvi.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0cc2orvi.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0cc2orvi.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0cc2orvi.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0cc2orvi.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0cc2orvi.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798042
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, num) for num in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(num) for num in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmptnspybe9.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmptnspybe9.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmptnspybe9.jl:9\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmptnspybe9.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmptnspybe9.jl:18\ntest set:\
    \ Error During Test at /tmp/tmptnspybe9.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmptnspybe9.jl:9\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmptnspybe9.jl:21 [inlined]\n\
    \   ["
  timestamp: 1659798043
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = [num_dict[x] for x in\
    \ num_list]\n    num_list = sort(num_list)\n    num_list = [key for (key, value)\
    \ in num_dict if value in num_list]\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpi9lm6zoi.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpi9lm6zoi.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpi9lm6zoi.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpi9lm6zoi.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpi9lm6zoi.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpi9lm6zoi.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpi9lm6zoi.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpi9lm6zoi.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpi9lm6zoi.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpi9lm6zoi.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpi9lm6zoi.jl:9\n   [3]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpi9lm6zoi.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpi9lm6zoi.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpi9lm6zoi.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  "
  timestamp: 1659798043
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, x) for x in nums]\n    sort!(nums_int)\n    nums_str\
    \ = [string(x) for x in nums_int]\n    return join(nums_str, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw64c49zf.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpw64c49zf.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpw64c49zf.jl:9\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpw64c49zf.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpw64c49zf.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpw64c49zf.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpw64c49zf.jl:9\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpw64c49zf.jl:21 [inlined]\n\
    \   ["
  timestamp: 1659798043
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n        \"two\" => 2,\n\
    \        \"three\" => 3,\n        \"four\" => 4,\n        \"five\" => 5,\n   \
    \     \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\" => 8,\n      \
    \  \"nine\" => 9\n    )\n    num_list = map(x -> num_dict[x], split(numbers))\n\
    \    sorted_list = sort(num_list)\n    sorted_numbers = join(map(x -> num_dict[x],\
    \ sorted_list), \" \")\n    return sorted_numbers\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpxwoqq2r9.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpxwoqq2r9.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n\
    \  Stacktrace:\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @\
    \ Base ./dict.jl:481\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n\
    \      @ Main /tmp/tmpxwoqq2r9.jl:22\n    [3] iterate\n      @ ./generator.jl:47\
    \ [inlined]\n    [4] _collect\n      @ ./array.jl:744 [inlined]\n    [5] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n    [7] sort_numbers(numbers::String)\n      @ Main /tmp/tmpxwoqq2r9.jl:22\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpxwoqq2r9.jl:31 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpxwoqq2r9.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpxwoqq2r9.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  KeyError: key 3 not\
    \ found\n  Stacktrace:\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\n\
    \      @ Base ./dict.jl:481\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n\
    \      @ Main /tmp/tmpxwoqq2r9.jl:22\n    [3] iterate\n      @ ./generator.jl:47\
    \ [inlined]\n    [4] _collect\n      @ ./array.jl:744 [inlined]\n    [5] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n    [7] sort_numbers(numbers::String)\n      @ Main /tmp/tmpxwoqq2r9.jl:22\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpxwoqq2r9.jl:32 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpxwoqq2r9.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpxwoqq2r9.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"five z"
  timestamp: 1659798043
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_5qlhtoj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp_5qlhtoj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n        \"two\" => 2,\n\
    \        \"three\" => 3,\n        \"four\" => 4,\n        \"five\" => 5,\n   \
    \     \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\" => 8,\n      \
    \  \"nine\" => 9\n    )\n    num_list = [num_dict[x] for x in split(numbers)]\n\
    \    sort!(num_list)\n    return join([key for (key, value) in num_dict if value\
    \ in num_list], \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz7chq985.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpz7chq985.jl:31\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz7chq985.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz7chq985.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpz7chq985.jl:32\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz7chq985.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz7chq985.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpz7chq985.jl:33\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz7chq985.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz7chq985.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798043
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmof24juo.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmof24juo.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmof24juo.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmof24juo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmof24juo.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmof24juo.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmof24juo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmof24juo.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmof24juo.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmof24juo.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798040
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(num_dict, num_list)\n\
    \    sort!(num_list)\n    num_list = map(num_dict, num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpdtq3dyh6.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpdtq3dyh6.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n\
    \     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] sort_numbers(numbers::String)\n     @ Main /tmp/tmpdtq3dyh6.jl:10\n  \
    \ [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdtq3dyh6.jl:20 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdtq3dyh6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpdtq3dyh6.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n\
    \     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] sort_numbers(numbers::String)\n     @ Main /tmp/tmpdtq3dyh6.jl:10\n  \
    \ [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdtq3dyh6.jl:21 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdtq3dyh6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpdtq3dyh6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  MethodError: objects\
    \ of type Dict{String, Int64} are not callable\n  Stacktrace:\n   [1] iterate\n\
    \     @ ./generator.jl:47 [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n\
    \   [3] collect_similar\n     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers)\n    sort!(numbers_list)\n    return join(numbers_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc8w65a7z.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpc8w65a7z.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc8w65a7z.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc8w65a7z.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc8w65a7z.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc8w65a7z.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc8w65a7z.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc8w65a7z.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc8w65a7z.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc8w65a7z.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798040
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers)\n    num_list = sort(num_list)\n    return join(num_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpn5f4uq_p.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpn5f4uq_p.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn5f4uq_p.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn5f4uq_p.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = sort(num_list)\n   \
    \ for i in 1:length(num_list)\n        num_list[i] = num_dict[num_list[i]]\n \
    \   end\n    num_list = sort(num_list)\n    for i in 1:length(num_list)\n    \
    \    for (key, value) in num_dict\n            if num_list[i] == value\n     \
    \           num_list[i] = key\n            end\n        end\n    end\n    return\
    \ join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpg5re8qx6.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpg5re8qx6.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpg5re8qx6.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpg5re8qx6.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpg5re8qx6.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpg5re8qx6.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpg5re8qx6.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpg5re8qx6.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpg5re8qx6.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpg5re8qx6.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpg5re8qx6.jl:9\n   [3]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpg5re8qx6.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpg5re8qx6.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpg5re8qx6.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  "
  timestamp: 1659798043
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = sort(num_list)\n  \
    \  num_list = map(num_list) do x\n        num_dict[x]\n    end\n    num_list =\
    \ sort(num_list)\n    num_list = map(num_list) do x\n        for (key, value)\
    \ in num_dict\n            if x == value\n                return key\n       \
    \     end\n        end\n    end\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp7oeuh9ev.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp7oeuh9ev.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmp7oeuh9ev.jl:12\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp7oeuh9ev.jl:11\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmp7oeuh9ev.jl:29 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmp7oeuh9ev.jl:28\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    4      1      5\n"
  timestamp: 1659798044
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7zpuxlnr.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp7zpuxlnr.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zpuxlnr.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zpuxlnr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7zpuxlnr.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zpuxlnr.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zpuxlnr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7zpuxlnr.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zpuxlnr.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zpuxlnr.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4gmw61bj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp4gmw61bj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4gmw61bj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4gmw61bj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4gmw61bj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4gmw61bj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4gmw61bj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4gmw61bj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4gmw61bj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4gmw61bj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, num) for num in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(num) for num in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmptnspybe9.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmptnspybe9.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmptnspybe9.jl:9\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmptnspybe9.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmptnspybe9.jl:18\ntest set:\
    \ Error During Test at /tmp/tmptnspybe9.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmptnspybe9.jl:9\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmptnspybe9.jl:21 [inlined]\n\
    \   ["
  timestamp: 1659798043
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(num_dict, num_list)\n\
    \    sort!(num_list)\n    num_list = map(num_dict, num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpdtq3dyh6.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpdtq3dyh6.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n\
    \     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] sort_numbers(numbers::String)\n     @ Main /tmp/tmpdtq3dyh6.jl:10\n  \
    \ [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdtq3dyh6.jl:20 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdtq3dyh6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpdtq3dyh6.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n\
    \     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] sort_numbers(numbers::String)\n     @ Main /tmp/tmpdtq3dyh6.jl:10\n  \
    \ [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdtq3dyh6.jl:21 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdtq3dyh6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpdtq3dyh6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  MethodError: objects\
    \ of type Dict{String, Int64} are not callable\n  Stacktrace:\n   [1] iterate\n\
    \     @ ./generator.jl:47 [inlined]\n   [2] _collect\n     @ ./array.jl:744 [inlined]\n\
    \   [3] collect_similar\n     @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers)\n    num_list = sort(num_list)\n    return join(num_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpn5f4uq_p.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpn5f4uq_p.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn5f4uq_p.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn5f4uq_p.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpqfh6nyid.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpqfh6nyid.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpqfh6nyid.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqfh6nyid.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqfh6nyid.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpqfh6nyid.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpqfh6nyid.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqfh6nyid.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqfh6nyid.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpqfh6nyid.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpqfh6nyid.jl:9\n   [3]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqfh6nyid.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqfh6nyid.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpqfh6nyid.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  "
  timestamp: 1659798043
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = sort(num_list)\n   \
    \ num_list = map(x -> num_dict[x], num_list)\n    num_list = map(x -> string(x),\
    \ num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp1zdnltup.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp1zdnltup.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp1zdnltup.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1zdnltup.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1zdnltup.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp1zdnltup.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp1zdnltup.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1zdnltup.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1zdnltup.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp1zdnltup.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp1zdnltup.jl:9\n   [3]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1zdnltup.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1zdnltup.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp1zdnltup.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  "
  timestamp: 1659798044
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_5qlhtoj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp_5qlhtoj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list_int = [num_dict[i] for\
    \ i in num_list]\n    sort!(num_list_int)\n    num_list_str = [string(i) for i\
    \ in num_list_int]\n    return join(num_list_str, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpbluvz_c2.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpbluvz_c2.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] #1\n     @ ./none:0 [inlined]\n\
    \   [3] iterate\n     @ ./generator.jl:47 [inlined]\n   [4] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"{Dict{String, Int64}}})\n     @ Base ./array.jl:724\n   [5] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpbluvz_c2.jl:10\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpbluvz_c2.jl:20 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpbluvz_c2.jl:19\ntest set:\
    \ Test Failed at /tmp/tmpbluvz_c2.jl:21\n  Expression: candidate(\"three\") ==\
    \ \"three\"\n   Evaluated: \"3\" == \"three\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbluvz_c2.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbluvz_c2.jl:19\ntest set: Test Failed at /tmp/tmpbluvz_c2.jl:22\n\
    \  Expression: candidate(\"three five nine\") == \"three five nine\"\n   Evaluated:\
    \ \"3 5 9\" == \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbluvz_c2.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbluvz_c2.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpbluvz_c2.jl:23\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"0 4 5\
    \ 7 8 9\" == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/s"
  timestamp: 1659798045
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_5qlhtoj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp_5qlhtoj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_array\
    \ = split(numbers, \" \")\n    sort!(numbers_array)\n    return join(numbers_array,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3dxbk7fp.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp3dxbk7fp.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3dxbk7fp.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3dxbk7fp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3dxbk7fp.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3dxbk7fp.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3dxbk7fp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3dxbk7fp.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3dxbk7fp.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3dxbk7fp.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798043
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_to_int\
    \ = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    nums = [num_to_int[num] for num in split(numbers)]\n    sort!(nums)\n\
    \    return join([key for (key, value) in num_to_int if value in nums], \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpv6drd_pm.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpv6drd_pm.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv6drd_pm.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv6drd_pm.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpv6drd_pm.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv6drd_pm.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv6drd_pm.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpv6drd_pm.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv6drd_pm.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv6drd_pm.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798044
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    num_list = sort(num_list)\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7_ph_65_.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp7_ph_65_.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmp7_ph_65_.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp7_ph_65_.jl:10\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmp7_ph_65_.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmp7_ph_65_.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp7_ph_65_.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmp7_ph_65_.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp7_ph_65_.jl:12\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmp7_ph_65_.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmp7_ph_65_.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp7_ph_65_"
  timestamp: 1659798038
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ numbers.split(\" \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp33hhaj23.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp33hhaj23.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp33hhaj23.jl:8\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp33hhaj23.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp33hhaj23.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp33hhaj23.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp33hhaj23.jl:8\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp33hhaj23.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp33hhaj23.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp33hhaj23.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp33hhaj23.jl:8\n   [3]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp33hhaj23.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp33hhaj23.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp33hhaj23.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  "
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = [num_dict[x] for x\
    \ in num_list]\n    num_list = sort(num_list)\n    num_list = [key for (key, value)\
    \ in num_dict if value in num_list]\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpiaqxiqj2.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpiaqxiqj2.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] #1\n     @ ./none:0 [inlined]\n\
    \   [3] iterate\n     @ ./generator.jl:47 [inlined]\n   [4] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#4\"{Dict{String, Int64}}})\n     @ Base ./array.jl:724\n   [5] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpiaqxiqj2.jl:10\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpiaqxiqj2.jl:20 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpiaqxiqj2.jl:19\ntest set:\
    \ Test Failed at /tmp/tmpiaqxiqj2.jl:22\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiaqxiqj2.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiaqxiqj2.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpiaqxiqj2.jl:23\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiaqxiqj2.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiaqxiqj2.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpiaqxiqj2.jl:24\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one"
  timestamp: 1659798039
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptkztdern.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmptkztdern.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptkztdern.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptkztdern.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptkztdern.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptkztdern.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptkztdern.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptkztdern.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptkztdern.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptkztdern.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_5qlhtoj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp_5qlhtoj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # convert string\
    \ to array of numbers\n    numbers_array = split(numbers, \" \")\n    # convert\
    \ array of strings to array of integers\n    numbers_array = map(x -> parse(Int,\
    \ x), numbers_array)\n    # sort array of integers\n    sort!(numbers_array)\n\
    \    # convert array of integers to array of strings\n    numbers_array = map(x\
    \ -> string(x), numbers_array)\n    # convert array of strings to string\n   \
    \ numbers = join(numbers_array, \" \")\n    return numbers\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpy9km9ne1.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpy9km9ne1.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  ArgumentError: input string is empty\
    \ or only contains whitespace\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:109\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmpy9km9ne1.jl:11 [inlined]\n    [5] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [7] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [8] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n    [9] sort_numbers(numbers::String)\n      @ Main /tmp/tmpy9km9ne1.jl:11\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmpy9km9ne1.jl:25 [inlined]\n\
    \   [12] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmpy9km9ne1.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpy9km9ne1.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  ArgumentError: invalid base 10 digit 't'\
    \ in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmpy9km9ne1.jl:11 [inlined]\n    [5] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.Ha"
  timestamp: 1659798045
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers, \" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz4vwe96_.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpz4vwe96_.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_5qlhtoj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp_5qlhtoj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpx6aab.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpilpx6aab.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpx6aab.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpx6aab.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpilpx6aab.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpx6aab.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpx6aab.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpilpx6aab.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpx6aab.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpx6aab.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # split the\
    \ string into a vector of strings\n    num_vec = split(numbers)\n    # convert\
    \ the vector of strings to a vector of integers\n    num_vec = parse.(Int, num_vec)\n\
    \    # sort the vector of integers\n    sort!(num_vec)\n    # convert the vector\
    \ of integers to a vector of strings\n    num_vec = string.(num_vec)\n    # join\
    \ the vector of strings into a single string\n    num_vec = join(num_vec, \" \"\
    )\n    return num_vec\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpdcsqqs37.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpdcsqqs37.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broadcast.jl:653 [inlined]\n    [6] getindex\n\
    \      @ ./broadcast.jl:597 [inlined]\n    [7] macro expansion\n      @ ./broadcast.jl:961\
    \ [inlined]\n    [8] macro expansion\n      @ ./simdloop.jl:77 [inlined]\n   \
    \ [9] copyto!\n      @ ./broadcast.jl:960 [inlined]\n   [10] copyto!\n      @\
    \ ./broadcast.jl:913 [inlined]\n   [11] copy\n      @ ./broadcast.jl:885 [inlined]\n\
    \   [12] materialize\n      @ ./broadcast.jl:860 [inlined]\n   [13] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpdcsqqs37.jl:11\n   [14] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [15] macro expansion\n      @ /tmp/tmpdcsqqs37.jl:26 [inlined]\n\
    \   [16] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [17] top-level scope\n      @ /tmp/tmpdcsqqs37.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpdcsqqs37.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broad"
  timestamp: 1659798045
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = sort(num_list)\n   \
    \ num_list = map(x -> num_dict[x], num_list)\n    num_list = map(x -> string(x),\
    \ num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp1zdnltup.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp1zdnltup.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp1zdnltup.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1zdnltup.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1zdnltup.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp1zdnltup.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp1zdnltup.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1zdnltup.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1zdnltup.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp1zdnltup.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp1zdnltup.jl:9\n   [3]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1zdnltup.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1zdnltup.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp1zdnltup.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  "
  timestamp: 1659798044
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # convert string\
    \ to array of numbers\n    nums = split(numbers)\n    # convert array of strings\
    \ to array of integers\n    nums = parse.(Int, nums)\n    # sort array of integers\n\
    \    sort!(nums)\n    # convert array of integers to array of strings\n    nums\
    \ = string.(nums)\n    # convert array of strings to string\n    nums = join(nums,\
    \ \" \")\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpg6k0nd9l.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpg6k0nd9l.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broadcast.jl:653 [inlined]\n    [6] getindex\n\
    \      @ ./broadcast.jl:597 [inlined]\n    [7] macro expansion\n      @ ./broadcast.jl:961\
    \ [inlined]\n    [8] macro expansion\n      @ ./simdloop.jl:77 [inlined]\n   \
    \ [9] copyto!\n      @ ./broadcast.jl:960 [inlined]\n   [10] copyto!\n      @\
    \ ./broadcast.jl:913 [inlined]\n   [11] copy\n      @ ./broadcast.jl:885 [inlined]\n\
    \   [12] materialize\n      @ ./broadcast.jl:860 [inlined]\n   [13] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpg6k0nd9l.jl:11\n   [14] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [15] macro expansion\n      @ /tmp/tmpg6k0nd9l.jl:26 [inlined]\n\
    \   [16] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [17] top-level scope\n      @ /tmp/tmpg6k0nd9l.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpg6k0nd9l.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broad"
  timestamp: 1659798044
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums_int = [parse(Int, n) for n in nums]\n    nums_int_sorted =\
    \ sort(nums_int)\n    nums_sorted = [string(n) for n in nums_int_sorted]\n   \
    \ return join(nums_sorted, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpto466o_g.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpto466o_g.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  ArgumentError: input string is empty\
    \ or only contains whitespace\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:109\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpto466o_g.jl:9\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpto466o_g.jl:19 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpto466o_g.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpto466o_g.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  ArgumentError: invalid base 10 digit 't'\
    \ in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpto466o_g.jl:9\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpto466o_g.jl:20 [inlined]\n\
    \   [10] macro expansi"
  timestamp: 1659798045
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers)]\n    return join([key\
    \ for (key, value) in num_dict if value in sort(num_list)], \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpeevby3bf.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpeevby3bf.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeevby3bf.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeevby3bf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpeevby3bf.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeevby3bf.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeevby3bf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpeevby3bf.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeevby3bf.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeevby3bf.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798044
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_5qlhtoj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp_5qlhtoj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> string(x), num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpaj40xzkm.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpaj40xzkm.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmpaj40xzkm.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpaj40xzkm.jl:10\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpaj40xzkm.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpaj40xzkm.jl:19\ntest set:\
    \ Test Failed at /tmp/tmpaj40xzkm.jl:21\n  Expression: candidate(\"three\") ==\
    \ \"three\"\n   Evaluated: \"3\" == \"three\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpaj40xzkm.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpaj40xzkm.jl:19\ntest set: Test Failed at /tmp/tmpaj40xzkm.jl:22\n\
    \  Expression: candidate(\"three five nine\") == \"three five nine\"\n   Evaluated:\
    \ \"3 5 9\" == \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj40xzkm.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj40xzkm.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpaj40xzkm.jl:23\n  Expression: candidate(\""
  timestamp: 1659798046
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers, \" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz4vwe96_.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpz4vwe96_.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmppcosup3e.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmppcosup3e.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmppcosup3e.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmppcosup3e.jl:10\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmppcosup3e.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmppcosup3e.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppcosup3e.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmppcosup3e.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmppcosup3e.jl:12\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmppcosup3e.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmppcosup3e.jl:19\ntest set:\
    \ Error During Test"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpx6aab.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpilpx6aab.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpx6aab.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpx6aab.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpilpx6aab.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpx6aab.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpx6aab.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpilpx6aab.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpx6aab.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpx6aab.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers)\n    num_list = sort(num_list)\n    return join(num_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpn5f4uq_p.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpn5f4uq_p.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn5f4uq_p.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn5f4uq_p.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = sort(num_list)\n   \
    \ num_list = [num_dict[i] for i in num_list]\n    num_list = sort(num_list)\n\
    \    num_list = [key for (key, value) in num_dict if value in num_list]\n    return\
    \ \" \".join(num_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpgdw9dcvf.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmpgdw9dcvf.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpgdw9dcvf.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgdw9dcvf.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgdw9dcvf.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpgdw9dcvf.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpgdw9dcvf.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgdw9dcvf.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgdw9dcvf.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpgdw9dcvf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpgdw9dcvf.jl:9\n   [3]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgdw9dcvf.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgdw9dcvf.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpgdw9dcvf.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  "
  timestamp: 1659798045
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ numbers.split(\" \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp33hhaj23.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp33hhaj23.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp33hhaj23.jl:8\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp33hhaj23.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp33hhaj23.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp33hhaj23.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp33hhaj23.jl:8\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp33hhaj23.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp33hhaj23.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp33hhaj23.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp33hhaj23.jl:8\n   [3]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp33hhaj23.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp33hhaj23.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp33hhaj23.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  "
  timestamp: 1659798037
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    number_dict\
    \ = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    numbers_list = split(numbers, \" \")\n    numbers_list = map(x -> number_dict[x],\
    \ numbers_list)\n    sort!(numbers_list)\n    numbers_list = map(x -> number_dict[x],\
    \ numbers_list)\n    join(numbers_list, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpcep6_gbj.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpcep6_gbj.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmpcep6_gbj.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpcep6_gbj.jl:10\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpcep6_gbj.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpcep6_gbj.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpcep6_gbj.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmpcep6_gbj.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpcep6_gbj.jl:12\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpcep6_gbj.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpcep6_gbj.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpcep6_gbj"
  timestamp: 1659798046
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmof24juo.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmof24juo.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmof24juo.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmof24juo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmof24juo.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmof24juo.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmof24juo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmof24juo.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmof24juo.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmof24juo.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798040
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_5qlhtoj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp_5qlhtoj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_5qlhtoj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qlhtoj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qlhtoj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4gmw61bj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp4gmw61bj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4gmw61bj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4gmw61bj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4gmw61bj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4gmw61bj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4gmw61bj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4gmw61bj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4gmw61bj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4gmw61bj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list_int = [num_dict[i] for\
    \ i in num_list]\n    sort!(num_list_int)\n    num_list_str = [string(i) for i\
    \ in num_list_int]\n    return join(num_list_str, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpbluvz_c2.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpbluvz_c2.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] #1\n     @ ./none:0 [inlined]\n\
    \   [3] iterate\n     @ ./generator.jl:47 [inlined]\n   [4] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"{Dict{String, Int64}}})\n     @ Base ./array.jl:724\n   [5] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpbluvz_c2.jl:10\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpbluvz_c2.jl:20 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpbluvz_c2.jl:19\ntest set:\
    \ Test Failed at /tmp/tmpbluvz_c2.jl:21\n  Expression: candidate(\"three\") ==\
    \ \"three\"\n   Evaluated: \"3\" == \"three\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbluvz_c2.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbluvz_c2.jl:19\ntest set: Test Failed at /tmp/tmpbluvz_c2.jl:22\n\
    \  Expression: candidate(\"three five nine\") == \"three five nine\"\n   Evaluated:\
    \ \"3 5 9\" == \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbluvz_c2.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbluvz_c2.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpbluvz_c2.jl:23\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"0 4 5\
    \ 7 8 9\" == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/s"
  timestamp: 1659798045
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers,\
    \ \" \")\n    sort!(numbers)\n    return join(numbers, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1xy0d632.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1xy0d632.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xy0d632.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xy0d632.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1xy0d632.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xy0d632.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xy0d632.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1xy0d632.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xy0d632.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xy0d632.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798045
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers)]\n    sort!(num_list)\n\
    \    num_list = [string(x) for x in num_list]\n    return join(num_list, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplflbesgl.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmplflbesgl.jl:20\n  Expression: candidate(\"\
    three\") == \"three\"\n   Evaluated: \"3\" == \"three\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplflbesgl.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplflbesgl.jl:18\ntest set: Test\
    \ Failed at /tmp/tmplflbesgl.jl:21\n  Expression: candidate(\"three five nine\"\
    ) == \"three five nine\"\n   Evaluated: \"3 5 9\" == \"three five nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplflbesgl.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplflbesgl.jl:18\ntest set: Test\
    \ Failed at /tmp/tmplflbesgl.jl:22\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"0 4 5\
    \ 7 8 9\" == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplflbesgl.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplflbesgl.jl:18\ntest set: Test Failed at /tmp/tmplflbesgl.jl:23\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"0 1 2 3 4 5 6\" == \"zero one two three\
    \ four five six\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplflbesgl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplflbesgl.jl:18\nTest Summary:\
    \ | Pass  Fail  Total"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers)]\n    sorted_list =\
    \ sort(num_list)\n    sorted_string = join(string.(sorted_list), \" \")\n    return\
    \ sorted_string\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb9a1bllw.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpb9a1bllw.jl:20\n  Expression: candidate(\"\
    three\") == \"three\"\n   Evaluated: \"3\" == \"three\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9a1bllw.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9a1bllw.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpb9a1bllw.jl:21\n  Expression: candidate(\"three five nine\"\
    ) == \"three five nine\"\n   Evaluated: \"3 5 9\" == \"three five nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9a1bllw.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9a1bllw.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpb9a1bllw.jl:22\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"0 4 5\
    \ 7 8 9\" == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb9a1bllw.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpb9a1bllw.jl:18\ntest set: Test Failed at /tmp/tmpb9a1bllw.jl:23\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"0 1 2 3 4 5 6\" == \"zero one two three\
    \ four five six\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9a1bllw.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9a1bllw.jl:18\nTest Summary:\
    \ | Pass  Fail  Total"
  timestamp: 1659798039
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers)\n    num_list = sort(num_list)\n    return join(num_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpn5f4uq_p.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpn5f4uq_p.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn5f4uq_p.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn5f4uq_p.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5f4uq_p.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5f4uq_p.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798036
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = [num_dict[x] for x\
    \ in num_list]\n    sort!(num_list)\n    num_list = [key for (key, value) in num_dict\
    \ if value in num_list]\n    return join(num_list, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpf8i5e8fb.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpf8i5e8fb.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] #1\n     @ ./none:0 [inlined]\n\
    \   [3] iterate\n     @ ./generator.jl:47 [inlined]\n   [4] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#4\"{Dict{String, Int64}}})\n     @ Base ./array.jl:724\n   [5] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpf8i5e8fb.jl:10\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpf8i5e8fb.jl:20 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpf8i5e8fb.jl:19\ntest set:\
    \ Test Failed at /tmp/tmpf8i5e8fb.jl:22\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf8i5e8fb.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf8i5e8fb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpf8i5e8fb.jl:23\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf8i5e8fb.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf8i5e8fb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpf8i5e8fb.jl:24\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one"
  timestamp: 1659798046
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums_int = [int(num) for num in nums]\n    sort!(nums_int)\n   \
    \ return \" \".join(nums_int)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmprgy309ka.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmprgy309ka.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(num::SubString{String})\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmprgy309ka.jl:9\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmprgy309ka.jl:18 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmprgy309ka.jl:17\ntest set:\
    \ Error During Test at /tmp/tmprgy309ka.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(num::SubString{String})\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmprgy309ka.jl:9\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmprgy309ka.jl:19 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmprgy309ka.jl:17\ntest set:\
    \ Error During Test at /tmp/tmprgy309ka.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: int\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(num::SubString{String})\n\
    \     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n  \
    \ [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#2\"})\n \
    \    @ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmprgy309ka.jl:9\n   ["
  timestamp: 1659798046
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the\
    \ string into a vector of strings\n    num_vec = split(numbers)\n    # Convert\
    \ the vector of strings to a vector of integers\n    num_vec = parse.(Int, num_vec)\n\
    \    # Sort the vector of integers\n    sort!(num_vec)\n    # Convert the vector\
    \ of integers to a vector of strings\n    num_vec = string.(num_vec)\n    # Join\
    \ the vector of strings into a single string\n    return join(num_vec, \" \")\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpapyqpaz2.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpapyqpaz2.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broadcast.jl:653 [inlined]\n    [6] getindex\n\
    \      @ ./broadcast.jl:597 [inlined]\n    [7] macro expansion\n      @ ./broadcast.jl:961\
    \ [inlined]\n    [8] macro expansion\n      @ ./simdloop.jl:77 [inlined]\n   \
    \ [9] copyto!\n      @ ./broadcast.jl:960 [inlined]\n   [10] copyto!\n      @\
    \ ./broadcast.jl:913 [inlined]\n   [11] copy\n      @ ./broadcast.jl:885 [inlined]\n\
    \   [12] materialize\n      @ ./broadcast.jl:860 [inlined]\n   [13] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpapyqpaz2.jl:11\n   [14] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [15] macro expansion\n      @ /tmp/tmpapyqpaz2.jl:25 [inlined]\n\
    \   [16] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [17] top-level scope\n      @ /tmp/tmpapyqpaz2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpapyqpaz2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broad"
  timestamp: 1659798046
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, num) for num in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(num) for num in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmptnspybe9.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmptnspybe9.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmptnspybe9.jl:9\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmptnspybe9.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmptnspybe9.jl:18\ntest set:\
    \ Error During Test at /tmp/tmptnspybe9.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmptnspybe9.jl:9\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmptnspybe9.jl:21 [inlined]\n\
    \   ["
  timestamp: 1659798043
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers)\n    num_list = sort(num_list)\n    return join(num_list)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk1_qufp1.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpk1_qufp1.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk1_qufp1.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk1_qufp1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpk1_qufp1.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk1_qufp1.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpk1_qufp1.jl:16\ntest set: Test Failed at /tmp/tmpk1_qufp1.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\" == \"zero\
    \ one two three four five six\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk1_qufp1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk1_qufp1.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659798045
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers, \" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz4vwe96_.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpz4vwe96_.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz4vwe96_.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz4vwe96_.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz4vwe96_.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fy8va76.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp1fy8va76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1fy8va76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fy8va76.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fy8va76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # convert string\
    \ to array of numbers\n    nums = split(numbers)\n    # convert words to numbers\n\
    \    for i in 1:length(nums)\n        nums[i] = parse(Int, nums[i])\n    end\n\
    \    # sort numbers\n    sort!(nums)\n    # convert numbers to words\n    for\
    \ i in 1:length(nums)\n        nums[i] = string(nums[i])\n    end\n    # convert\
    \ array to string\n    return join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpu1d4vsuz.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpu1d4vsuz.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \     @ Base ./parse.jl:137\n   [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n     @ Base ./parse.jl:241\n   [3] parse\n     @ ./parse.jl:241\
    \ [inlined]\n   [4] sort_numbers(numbers::String)\n     @ Main /tmp/tmpu1d4vsuz.jl:12\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpu1d4vsuz.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpu1d4vsuz.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpu1d4vsuz.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \     @ Base ./parse.jl:137\n   [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n     @ Base ./parse.jl:241\n   [3] parse\n     @ ./parse.jl:241\
    \ [inlined]\n   [4] sort_numbers(numbers::String)\n     @ Main /tmp/tmpu1d4vsuz.jl:12\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpu1d4vsuz.jl:30 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpu1d4vsuz.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpu1d4vsuz.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  ArgumentError: invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n\
    \   [1] trypars"
  timestamp: 1659798046

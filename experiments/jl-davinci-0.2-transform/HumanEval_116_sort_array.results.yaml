language: jl
name: HumanEval_116_sort_array
results:
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsl579w4m.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpsl579w4m.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsl579w4m.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsl579w4m.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    sorted_arr = sort(arr, by = x -> (count_ones(x), x))\n    return\
    \ sorted_arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8t1dms2l.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp8t1dms2l.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8t1dms2l.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8t1dms2l.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then by decimal value\n    return sort(arr,\
    \ by = (x -> (count_ones(x), x)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp61vs9hxw.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp61vs9hxw.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp61vs9hxw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp61vs9hxw.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    # sort in ascending order\n    # return sorted array\n    return\
    \ sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz7md344b.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpz7md344b.jl:27\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz7md344b.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz7md344b.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Your code here\n\
    \    return sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgh01ff1c.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpgh01ff1c.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgh01ff1c.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgh01ff1c.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    return\
    \ sort(arr, by=[count_ones, identity])\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpfnlibjux.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpfnlibjux.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpfnlibjux.jl:17\n\
    \    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpfnlibjux.jl:24 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpfnlibjux.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpfnlibjux.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpfnlibjux.jl:17\n\
    \    [8] macro expansion\n      @ /shared"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of 1s in binary representation\n    # if number of 1s is the same, sort by decimal\
    \ value\n    # sort in ascending order\n    # return sorted array\n    return\
    \ sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp71ak118v.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp71ak118v.jl:27\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp71ak118v.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp71ak118v.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if equal, sort by decimal value\n  \
    \  return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpex1wvr2f.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpex1wvr2f.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpex1wvr2f.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpex1wvr2f.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp91iulunf.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp91iulunf.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91iulunf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91iulunf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp91iulunf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    arr_sorted = sort(arr,\
    \ by=x->(count_ones(x), x))\n    return arr_sorted\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwl0ba8k4.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpwl0ba8k4.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl0ba8k4.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl0ba8k4.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # and then by decimal value\n    sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjfsryvdz.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpjfsryvdz.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjfsryvdz.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjfsryvdz.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5m7j9ijk.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp5m7j9ijk.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m7j9ijk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5m7j9ijk.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5m7j9ijk.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp5m7j9ijk.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m7j9ijk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5m7j9ijk.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp91iulunf.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp91iulunf.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91iulunf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91iulunf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp91iulunf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp5xmz08r4.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp5xmz08r4.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp5xmz08r4.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5xmz08r4.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5xmz08r4.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp5xmz08r4.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp5xmz08r4.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp5xmz08r4.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp5xmz08r4.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp5xmz08r4.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5xmz08r4.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5xmz08r4.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp5xmz08r4.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp5xmz08r4.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp91iulunf.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp91iulunf.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91iulunf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91iulunf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp91iulunf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    return sort(arr, by = (x -> (count_ones(x), x)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0kl920ep.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp0kl920ep.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0kl920ep.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0kl920ep.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794693
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Sort by number\
    \ of ones in binary representation\n    # For similar number of ones, sort based\
    \ on decimal value\n    # Return the sorted array\n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmptwakc8sr.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmptwakc8sr.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmptwakc8sr.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptwakc8sr.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptwakc8sr.jl:24\ntest set:\
    \ Error During Test at /tmp/tmptwakc8sr.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmptwakc8sr.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptwakc8sr.jl:26 [inlined]\n\
    \   ["
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same, sort by decimal value\n   \
    \ # return sorted array\n    return sort(arr, by=x->(count_ones(x), x))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpothupgzh.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpothupgzh.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpothupgzh.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpothupgzh.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    sort(arr,\
    \ by=x->(sum(digits(x, base=2)), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprb4ys187.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmprb4ys187.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -3, -4, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprb4ys187.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprb4ys187.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    return sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7k9v71r6.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp7k9v71r6.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7k9v71r6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7k9v71r6.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5m7j9ijk.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp5m7j9ijk.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m7j9ijk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5m7j9ijk.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp5xmz08r4.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp5xmz08r4.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp5xmz08r4.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5xmz08r4.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5xmz08r4.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp5xmz08r4.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp5xmz08r4.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    sorted_ones = sort(arr, by=x->count_ones(x))\n\
    \    # sort by decimal value\n    sorted_ones = sort(sorted_ones, by=x->x)\n \
    \   return sorted_ones\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_i_m_9rq.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp_i_m_9rq.jl:26\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_i_m_9rq.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_i_m_9rq.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_i_m_9rq.jl:27\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_i_m_9rq.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_i_m_9rq.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_i_m_9rq.jl:28\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_i_m_9rq.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_i_m_9rq.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_i_m_9rq.jl:30\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_i_m_9rq.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_i_m_9rq.jl:25\ntest set"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # for similar number of ones, sort based\
    \ on decimal value\n    # return sorted array\n    return sort(arr, by=x->(count_ones(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplzjemhh4.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmplzjemhh4.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplzjemhh4.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplzjemhh4.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprp30hdft.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprp30hdft.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprp30hdft.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprp30hdft.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # for similar number of ones, sort based\
    \ on decimal value\n    # sort(arr, by = x -> (count_ones(x), x))\n    sort(arr,\
    \ by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpl9nlgzhg.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpl9nlgzhg.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl9nlgzhg.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl9nlgzhg.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794693
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp5xmz08r4.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp5xmz08r4.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp5xmz08r4.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5xmz08r4.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5xmz08r4.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp5xmz08r4.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp5xmz08r4.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    sort(arr,\
    \ by = [count_ones, identity])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp9tb2l8fl.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp9tb2l8fl.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp9tb2l8fl.jl:17\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmp9tb2l8fl.jl:24 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmp9tb2l8fl.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp9tb2l8fl.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp9tb2l8fl.jl:17\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/pol"
  timestamp: 1659794695
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is equal, sort by\
    \ decimal value\n    # return sorted array\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpx_wu5kuq.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpx_wu5kuq.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpx_wu5kuq.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx_wu5kuq.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx_wu5kuq.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpx_wu5kuq.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpx_wu5kuq.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx_wu5kuq.jl:25 [inlined]\n\
    \   ["
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    return\
    \ sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5pzztqqh.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp5pzztqqh.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5pzztqqh.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5pzztqqh.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    # sort by decimal value\n    # sort by decimal value\n    # sort\
    \ by decimal value\n    # sort by decimal value\n    # sort by decimal value\n\
    \    # sort by decimal value\n    # sort by decimal value\n    # sort by decimal\
    \ value\n    # sort by decimal value\n    # sort by decimal value\n    # sort\
    \ by decimal value\n    # sort by decimal value\n    # sort by decimal value\n\
    \    # sort by decimal value\n    # sort by decimal value\n    # sort by decimal\
    \ value\n    # sort by decimal value\n    # sort by decimal value\n    # sort\
    \ by decimal value\n    # sort by decimal value\n    # sort by decimal value\n\
    \    # sort by decimal value\n    # sort by decimal value\n    # sort by decimal\
    \ value\n    # sort by decimal value\n    # sort by decimal value\n    # sort\
    \ by decimal value\n    # sort by decimal value\n    # sort by decimal value\n\
    \    # sort by decimal value\n    # sort by decimal value\n    # sort by decimal\
    \ value\n    # sort by decimal value\n    # sort by decimal value\n    # sort\
    \ by decimal value\n    # sort by decimal value\n    # sort by decimal value\n\
    \    # sort by decimal value\n    # sort by decimal value\n    # sort by decimal\
    \ value\n    # sort by decimal value\n    # sort by decimal value\n    # sort\
    \ by decimal value\n    # sort by decimal value\n    # sort by decimal value\n\
    \    # sort by decimal value\n    # sort by decimal value\n    # sort by decimal\
    \ value\n    # sort by decimal value\n    # sort by decimal value\n    # sort\
    \ by decimal value\n    # sort by decimal value\n    # sort by decimal value\n\
    \    # sort by decimal value\n    # sort by decimal value\n    # sort by decimal\
    \ value\n    # sort by decimal value\n    # sort by decimal value\n    # sort\
    \ by decimal value\n    # sort by decimal value\n    # sort by decimal value\n\
    \    # sort by decimal value\n    # sort by decimal value\n    # sort by decimal\
    \ value\n    # sort by decimal value\n    # sort by decimal value\n    # sort\
    \ by decimal value\n    # sort by decimal value\n    # sort by decimal value\n\
    \    # sort by\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdqhvvt7d.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdqhvvt7d.jl:1\n\
    in expression starting at /tmp/tmpdqhvvt7d.jl:1\n"
  stdout: ''
  timestamp: 1659794693
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of 1's in binary representation\n    # if number of 1's are equal, sort by decimal\
    \ value\n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc4sh78eb.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpc4sh78eb.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4sh78eb.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4sh78eb.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794693
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsl579w4m.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpsl579w4m.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsl579w4m.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsl579w4m.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    return\
    \ sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5pzztqqh.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp5pzztqqh.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5pzztqqh.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5pzztqqh.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp91iulunf.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp91iulunf.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91iulunf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91iulunf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp91iulunf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpe8a_633g.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpe8a_633g.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe8a_633g.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe8a_633g.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    # return sorted array\n    # your code here\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpcsnu99fm.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpcsnu99fm.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpcsnu99fm.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcsnu99fm.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcsnu99fm.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpcsnu99fm.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpcsnu99fm.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcsnu99fm.jl:26 [inlined]\n\
    \   ["
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones\n    sorted_arr = sort(arr, by=x->count_ones(x))\n    # sort by decimal\
    \ value\n    sorted_arr = sort(sorted_arr, by=x->x)\n    return sorted_arr\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpivyor9pw.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpivyor9pw.jl:26\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpivyor9pw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpivyor9pw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpivyor9pw.jl:27\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpivyor9pw.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpivyor9pw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpivyor9pw.jl:28\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpivyor9pw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpivyor9pw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpivyor9pw.jl:30\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpivyor9pw.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpivyor9pw.jl:25\ntest set"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprp30hdft.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprp30hdft.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprp30hdft.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprp30hdft.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is equal, sort by\
    \ decimal value\n    # return sorted array\n    return sort(arr, by = x -> (count_ones(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx27ocqry.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpx27ocqry.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx27ocqry.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx27ocqry.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same, sort by decimal value\n   \
    \ # sort in ascending order\n    # return sorted array\n    return sort(arr, by=x->(count_ones(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa2n1w202.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpa2n1w202.jl:27\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa2n1w202.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa2n1w202.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprp30hdft.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprp30hdft.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprp30hdft.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprp30hdft.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5m7j9ijk.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp5m7j9ijk.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m7j9ijk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5m7j9ijk.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is equal, sort by\
    \ decimal value\n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpykv81kza.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpykv81kza.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpykv81kza.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpykv81kza.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794693
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is equal, sort by\
    \ decimal value\n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpykv81kza.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpykv81kza.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpykv81kza.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpykv81kza.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794693
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if equal, sort by decimal value\n  \
    \  return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpex1wvr2f.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpex1wvr2f.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpex1wvr2f.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpex1wvr2f.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is the same, sort\
    \ by decimal value\n    # return sorted array\n    return sort(arr, by = x ->\
    \ (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzh920neh.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpzh920neh.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzh920neh.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzh920neh.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794693
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    return sort(arr, by = (x -> (sum(digits(x, 2)), x)))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpm516a4nw.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpm516a4nw.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpm516a4nw.jl:17\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpm516a4nw.jl:17\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpm516a4nw.jl:24 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpm516a4nw.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpm516a4nw.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpm516a4nw.jl:17\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n   "
  timestamp: 1659794695
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is equal, sort by\
    \ decimal value\n    # sort in ascending order\n    # return sorted array\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpovbsiye1.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpovbsiye1.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpovbsiye1.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpovbsiye1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpovbsiye1.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpovbsiye1.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpovbsiye1.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpovbsiye1.jl:26 [inlined]\n\
    \   ["
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if equal, sort by decimal value\n  \
    \  return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpex1wvr2f.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpex1wvr2f.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpex1wvr2f.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpex1wvr2f.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpe8a_633g.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpe8a_633g.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe8a_633g.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe8a_633g.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5m7j9ijk.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp5m7j9ijk.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m7j9ijk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5m7j9ijk.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is the same, sort\
    \ by decimal value\n    # return sorted array\n    return sort(arr, by=x->(count_ones(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjs0o_wve.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpjs0o_wve.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjs0o_wve.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjs0o_wve.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794695
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is the same, sort\
    \ by decimal value\n    return sort(arr, by = x -> (count_ones(x), x))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpengc1013.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpengc1013.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpengc1013.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpengc1013.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5m7j9ijk.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp5m7j9ijk.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m7j9ijk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5m7j9ijk.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is the same, sort\
    \ by decimal value\n    return sort(arr, by=x->(sum(digits(x, base=2)), x))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprj86dybt.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmprj86dybt.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -3, -4, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprj86dybt.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprj86dybt.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpe8a_633g.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpe8a_633g.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe8a_633g.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe8a_633g.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp91iulunf.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp91iulunf.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91iulunf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91iulunf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp91iulunf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp91iulunf.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp91iulunf.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91iulunf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91iulunf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp91iulunf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    sort(arr, by=x->(sum(digits(x, base=2)),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo8hotkh9.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpo8hotkh9.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -3, -4, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo8hotkh9.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo8hotkh9.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then by decimal value\n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8i1wp994.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp8i1wp994.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8i1wp994.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8i1wp994.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is equal, sort by\
    \ decimal value\n    # sort in ascending order\n    # return sorted array\n  \
    \  # hint: use sort!\n    return sort!(arr)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9i094eg7.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp9i094eg7.jl:27\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9i094eg7.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9i094eg7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9i094eg7.jl:28\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9i094eg7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9i094eg7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9i094eg7.jl:29\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9i094eg7.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9i094eg7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9i094eg7.jl:31\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9i094eg7.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9i094eg7.jl:26\ntest set"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is equal, sort by\
    \ decimal value\n    arr = sort(arr, by = x -> (count_ones(x), x))\n    return\
    \ arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzx0xa_1_.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpzx0xa_1_.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzx0xa_1_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzx0xa_1_.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp91iulunf.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp91iulunf.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91iulunf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91iulunf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp91iulunf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprvrpu9_a.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmprvrpu9_a.jl:23\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvrpu9_a.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvrpu9_a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprvrpu9_a.jl:24\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvrpu9_a.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvrpu9_a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprvrpu9_a.jl:25\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvrpu9_a.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvrpu9_a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprvrpu9_a.jl:27\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvrpu9_a.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvrpu9_a.jl:22\ntest set"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is the same, sort\
    \ by decimal value\n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2g8_raty.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp2g8_raty.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2g8_raty.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2g8_raty.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    sort(arr, by = x -> sum(digits(x, base=2)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk1dwa2qp.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpk1dwa2qp.jl:23\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk1dwa2qp.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk1dwa2qp.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpk1dwa2qp.jl:24\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-3, -5, -6, -2, -4] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk1dwa2qp.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk1dwa2qp.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpk1dwa2qp.jl:27\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk1dwa2qp.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk1dwa2qp.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpk1dwa2qp.jl:28\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk1dwa2qp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tm"
  timestamp: 1659794697
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprvrpu9_a.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmprvrpu9_a.jl:23\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvrpu9_a.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvrpu9_a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprvrpu9_a.jl:24\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvrpu9_a.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvrpu9_a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprvrpu9_a.jl:25\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvrpu9_a.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvrpu9_a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprvrpu9_a.jl:27\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvrpu9_a.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvrpu9_a.jl:22\ntest set"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5m7j9ijk.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp5m7j9ijk.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m7j9ijk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5m7j9ijk.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    # return sorted array\n    return sort(arr, by = x -> (count_ones(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp79p_rbem.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp79p_rbem.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp79p_rbem.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp79p_rbem.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpe8a_633g.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpe8a_633g.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe8a_633g.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe8a_633g.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp91iulunf.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp91iulunf.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91iulunf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91iulunf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp91iulunf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    # sort in ascending order\n    # return sorted array\n    #\n   \
    \ # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpnyjc5g7v.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpnyjc5g7v.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpnyjc5g7v.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnyjc5g7v.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnyjc5g7v.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpnyjc5g7v.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpnyjc5g7v.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnyjc5g7v.jl:28 [inlined]\n\
    \   ["
  timestamp: 1659794698
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsl579w4m.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpsl579w4m.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsl579w4m.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsl579w4m.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5m7j9ijk.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp5m7j9ijk.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m7j9ijk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5m7j9ijk.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf9chwjp9.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpf9chwjp9.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf9chwjp9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf9chwjp9.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(sum(digits(x, base=2)), x))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjni0jmc4.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpjni0jmc4.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -3, -4, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjni0jmc4.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjni0jmc4.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprp30hdft.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprp30hdft.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprp30hdft.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprp30hdft.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same, sort by decimal value\n   \
    \ # sort by number of ones in binary representation\n    # if same, sort by decimal\
    \ value\n    sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpesrayjvb.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpesrayjvb.jl:27\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpesrayjvb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpesrayjvb.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5m7j9ijk.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp5m7j9ijk.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m7j9ijk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5m7j9ijk.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if equal, sort by decimal value\n  \
    \  sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7ao_xlys.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp7ao_xlys.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ao_xlys.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ao_xlys.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same, sort by decimal value\n   \
    \ return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpczfp8azk.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpczfp8azk.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpczfp8azk.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczfp8azk.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp91iulunf.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp91iulunf.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91iulunf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91iulunf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp91iulunf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5m7j9ijk.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp5m7j9ijk.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m7j9ijk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5m7j9ijk.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    sort(arr,\
    \ by = [count_ones, identity])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp9tb2l8fl.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp9tb2l8fl.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp9tb2l8fl.jl:17\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmp9tb2l8fl.jl:24 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmp9tb2l8fl.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp9tb2l8fl.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp9tb2l8fl.jl:17\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/pol"
  timestamp: 1659794695
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp91iulunf.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp91iulunf.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91iulunf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91iulunf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp91iulunf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is the same, sort\
    \ by decimal value\n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2g8_raty.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp2g8_raty.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2g8_raty.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2g8_raty.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    return\
    \ sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5pzztqqh.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp5pzztqqh.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5pzztqqh.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5pzztqqh.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is equal, sort by\
    \ decimal value\n    # return sorted array\n    return sort(arr, by=x->(count_ones(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpm3vyt2bb.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpm3vyt2bb.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm3vyt2bb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm3vyt2bb.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794698
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp91iulunf.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp91iulunf.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91iulunf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91iulunf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp91iulunf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    return\
    \ sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpca0s6byy.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpca0s6byy.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpca0s6byy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpca0s6byy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794698
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa8xw3efs.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpa8xw3efs.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa8xw3efs.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa8xw3efs.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794698
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Your code here\n\
    \    return sort(arr, by=x->(sum(digits(x, base=2)), x))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmps_dd7fkl.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmps_dd7fkl.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -3, -4, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps_dd7fkl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps_dd7fkl.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794698
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(sum(digits(x, base=2)), x))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjni0jmc4.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpjni0jmc4.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -3, -4, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjni0jmc4.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjni0jmc4.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    # sort(arr, by=x->(count_ones(x), x))\n    sort(arr, by=x->(count_ones(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9y5siveo.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp9y5siveo.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9y5siveo.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9y5siveo.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794698
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsl579w4m.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpsl579w4m.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsl579w4m.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsl579w4m.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is equal, sort by\
    \ decimal value\n    # return sorted array\n    return sort(arr, by=x->(count_ones(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpm3vyt2bb.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpm3vyt2bb.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm3vyt2bb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm3vyt2bb.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794698
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyngvmcl0.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpyngvmcl0.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyngvmcl0.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyngvmcl0.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794698
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    return\
    \ sort(arr, by = [count_ones, identity])\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpcrp9e74n.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpcrp9e74n.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpcrp9e74n.jl:17\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpcrp9e74n.jl:24 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpcrp9e74n.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpcrp9e74n.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpcrp9e74n.jl:17\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/pol"
  timestamp: 1659794700
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is the same, sort\
    \ by decimal value\n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2g8_raty.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp2g8_raty.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2g8_raty.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2g8_raty.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5m7j9ijk.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp5m7j9ijk.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m7j9ijk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5m7j9ijk.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp91iulunf.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp91iulunf.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91iulunf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91iulunf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp91iulunf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprp30hdft.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprp30hdft.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprp30hdft.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprp30hdft.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprp30hdft.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprp30hdft.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprp30hdft.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprp30hdft.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(sum(digits(x, 2)), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpco8li3yb.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpco8li3yb.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpco8li3yb.jl:16\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpco8li3yb.jl:16\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpco8li3yb.jl:23 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpco8li3yb.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpco8li3yb.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpco8li3yb.jl:16\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n   "
  timestamp: 1659794700
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same, sort by decimal value\n   \
    \ # sort(arr, by=x->(count_ones(x), x))\n    sort(arr, by=x->(count_ones(x), x))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzr3kug6l.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpzr3kug6l.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzr3kug6l.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzr3kug6l.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794699
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by = [count_ones, identity])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpi1n049jh.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpi1n049jh.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpi1n049jh.jl:15\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpi1n049jh.jl:22 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpi1n049jh.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpi1n049jh.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpi1n049jh.jl:15\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/pol"
  timestamp: 1659794700
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf9chwjp9.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpf9chwjp9.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf9chwjp9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf9chwjp9.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp91iulunf.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp91iulunf.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91iulunf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91iulunf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp91iulunf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprvrpu9_a.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmprvrpu9_a.jl:23\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvrpu9_a.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvrpu9_a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprvrpu9_a.jl:24\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvrpu9_a.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvrpu9_a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprvrpu9_a.jl:25\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvrpu9_a.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvrpu9_a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprvrpu9_a.jl:27\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvrpu9_a.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvrpu9_a.jl:22\ntest set"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is the same, sort\
    \ by decimal value\n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2g8_raty.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp2g8_raty.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2g8_raty.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2g8_raty.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is equal, sort by\
    \ decimal value\n    # return sorted array\n    return sort(arr, by=x->(count_ones(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpm3vyt2bb.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpm3vyt2bb.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm3vyt2bb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm3vyt2bb.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794698
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is equal, sort by\
    \ decimal value\n    # sort in ascending order\n    # return sorted array\n  \
    \  # your code here\n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcfyeh30q.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpcfyeh30q.jl:28\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcfyeh30q.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcfyeh30q.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794699
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones\n    sort(arr, by=x->(sum(digits(x, base=2)), x))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7jnzszsx.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp7jnzszsx.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -3, -4, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7jnzszsx.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7jnzszsx.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794699
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then by decimal value\n    return sort(arr,\
    \ by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo_h3_v3y.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpo_h3_v3y.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo_h3_v3y.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo_h3_v3y.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794699
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of 1s in binary representation\n    # then sort by decimal value\n    sort(arr,\
    \ by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpynlzt1df.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpynlzt1df.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpynlzt1df.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpynlzt1df.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794699
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if equal, sort by decimal value\n  \
    \  # return sorted array\n    return sort(arr, by = x -> (count_ones(x), x))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpi7sljkph.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpi7sljkph.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7sljkph.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7sljkph.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794699
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same, sort by decimal value\n   \
    \ sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr054in94.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpr054in94.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr054in94.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr054in94.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794699
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsl579w4m.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpsl579w4m.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsl579w4m.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsl579w4m.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5m7j9ijk.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp5m7j9ijk.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m7j9ijk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5m7j9ijk.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(sum(digits(x, base=2)), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyngmwzma.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpyngmwzma.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -3, -4, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyngmwzma.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyngmwzma.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794699
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    # sort(arr, by=x->(count_ones(x), x))\n    sort(arr, by=x->(count_ones(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9y5siveo.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp9y5siveo.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9y5siveo.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9y5siveo.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794698
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is the same, sort\
    \ by decimal value\n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2g8_raty.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp2g8_raty.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2g8_raty.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2g8_raty.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by = x -> (sum(digits(x, 2)), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmppf7hijzb.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmppf7hijzb.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmppf7hijzb.jl:15\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmppf7hijzb.jl:15\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmppf7hijzb.jl:22 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmppf7hijzb.jl:21\ntest set:\
    \ Error During Test at /tmp/tmppf7hijzb.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmppf7hijzb.jl:15\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n   "
  timestamp: 1659794700
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp91iulunf.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp91iulunf.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91iulunf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91iulunf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp91iulunf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp91iulunf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones\n    sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1cvlzim4.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp1cvlzim4.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1cvlzim4.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1cvlzim4.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794699
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    # return sorted array\n    return sort(arr, by = x -> (count_ones(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp79p_rbem.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp79p_rbem.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp79p_rbem.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp79p_rbem.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbm8xtcic.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpbm8xtcic.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbm8xtcic.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbm8xtcic.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794699
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is the same, sort\
    \ by decimal value\n    # return sorted array\n    return sort(arr, by = x ->\
    \ (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzh920neh.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpzh920neh.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzh920neh.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzh920neh.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794693
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    # return sorted array\n    return sort(arr, by=x->(count_ones(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5k7nbkk2.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp5k7nbkk2.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5k7nbkk2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5k7nbkk2.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794699
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is the same, sort\
    \ by decimal value\n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2g8_raty.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp2g8_raty.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2g8_raty.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2g8_raty.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then by decimal value\n    return sort(arr,\
    \ by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo_h3_v3y.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpo_h3_v3y.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo_h3_v3y.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo_h3_v3y.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794699
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5m7j9ijk.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp5m7j9ijk.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m7j9ijk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5m7j9ijk.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    return\
    \ sort(arr, by = [count_ones, identity])\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpcrp9e74n.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpcrp9e74n.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpcrp9e74n.jl:17\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpcrp9e74n.jl:24 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpcrp9e74n.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpcrp9e74n.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpcrp9e74n.jl:17\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/pol"
  timestamp: 1659794700
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    return\
    \ sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpca0s6byy.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpca0s6byy.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpca0s6byy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpca0s6byy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794698
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprp30hdft.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprp30hdft.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprp30hdft.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprp30hdft.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsl579w4m.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpsl579w4m.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsl579w4m.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsl579w4m.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # sort by decimal value for similar number\
    \ of ones\n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5hnjmlb6.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp5hnjmlb6.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5hnjmlb6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5hnjmlb6.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794699
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if equal, sort by decimal value\n  \
    \  return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpex1wvr2f.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpex1wvr2f.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpex1wvr2f.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpex1wvr2f.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpe8a_633g.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpe8a_633g.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe8a_633g.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe8a_633g.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # for similar number of ones, sort based\
    \ on decimal value\n    # return sorted array\n    return sort(arr, by=x->(count_ones(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplzjemhh4.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmplzjemhh4.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplzjemhh4.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplzjemhh4.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x),x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpie2sdtn9.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpie2sdtn9.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpie2sdtn9.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpie2sdtn9.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794700
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if number of ones is the same, sort\
    \ by decimal value\n    return sort(arr, by = x -> (count_ones(x), x))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpengc1013.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpengc1013.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpengc1013.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpengc1013.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilpjk074.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpilpjk074.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilpjk074.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilpjk074.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same, sort by decimal value\n   \
    \ # sort(arr, by=x->(count_ones(x), x))\n    sort(arr, by=x->(count_ones(x), x))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzr3kug6l.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpzr3kug6l.jl:26\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzr3kug6l.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzr3kug6l.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794699
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(sum(digits(x, 2)), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpco8li3yb.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpco8li3yb.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpco8li3yb.jl:16\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpco8li3yb.jl:16\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpco8li3yb.jl:23 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpco8li3yb.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpco8li3yb.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpco8li3yb.jl:16\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n   "
  timestamp: 1659794700
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Sort by number\
    \ of ones in binary representation\n    # If number of ones is the same, sort\
    \ by decimal value\n    sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk_75zfrv.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpk_75zfrv.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk_75zfrv.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk_75zfrv.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794700
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf9chwjp9.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpf9chwjp9.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf9chwjp9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf9chwjp9.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # if same number of ones, sort by decimal\
    \ value\n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf9chwjp9.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpf9chwjp9.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf9chwjp9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf9chwjp9.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794696
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpe8a_633g.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpe8a_633g.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe8a_633g.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe8a_633g.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659794694
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5m7j9ijk.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp5m7j9ijk.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m7j9ijk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5m7j9ijk.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->(sum(digits(x, 2)), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpco8li3yb.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpco8li3yb.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpco8li3yb.jl:16\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpco8li3yb.jl:16\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpco8li3yb.jl:23 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpco8li3yb.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpco8li3yb.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpco8li3yb.jl:16\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n   "
  timestamp: 1659794700
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in binary representation\n    # then sort by decimal value\n    sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsl579w4m.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpsl579w4m.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsl579w4m.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsl579w4m.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"

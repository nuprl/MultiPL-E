name: HumanEval_95_check_dict_case
language: jl
prompt: "\"\"\"\n    Given a dictionary, return True if all keys are strings in lower\
  \ \n    case or all keys are strings in upper case, else return False.\n    The\
  \ function should return False is the given dictionary is empty.\n    Examples:\n\
  \    >>> check_dict_case(Dict(\"a\" => \"apple\", \"b\" => \"banana\"))\n    true\n\
  \    >>> check_dict_case(Dict(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
  \ \"banana\"))\n    false\n    >>> check_dict_case(Dict(\"a\" => \"apple\", 8 =>\
  \ \"banana\", \"a\" => \"apple\"))\n    false\n    >>> check_dict_case(Dict(\"Name\"\
  \ => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\n    false\n    >>>\
  \ check_dict_case(Dict(\"STATE\" => \"NC\", \"ZIP\" => \"12345\"))\n    true\n \
  \   \"\"\"\nfunction check_dict_case(dict::Dict{String, String}>)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = check_dict_case;\n\t@test(candidate(Dict(\"\
  p\" => \"pineapple\", \"b\" => \"banana\")) == true)\n\t@test(candidate(Dict(\"\
  p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) == false)\n\t@test(candidate(Dict(\"\
  p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) == false)\n\t@test(candidate(Dict(\"\
  Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) == false)\n\t@test(candidate(Dict(\"\
  STATE\" => \"NC\", \"ZIP\" => \"12345\")) == true)\n\t@test(candidate(Dict(\"fruit\"\
  \ => \"Orange\", \"taste\" => \"Sweet\")) == true)\n\t@test(candidate(Dict()) ==\
  \ false)\nend\n"
completions: ["    lower_keys = true\n    upper_keys = true\n    for (key, value)\
    \ in dict\n        if !islower(key)\n            lower_keys = false\n        end\n\
    \        if !isupper(key)\n            upper_keys = false\n        end\n    end\n\
    \    return lower_keys || upper_keys\nend", "    lower_case = true\n    upper_case\
    \ = true\n    for (key, value) in dict\n        if islower(key[1])\n         \
    \   upper_case = false\n        elseif isupper(key[1])\n            lower_case\
    \ = false\n        else\n            return false\n        end\n    end\n    return\
    \ lower_case || upper_case\nend", "    lower_keys = true\n    upper_keys = true\n\
    \    for key in keys(dict)\n        if !islower(key)\n            lower_keys =\
    \ false\n        end\n        if !isupper(key)\n            upper_keys = false\n\
    \        end\n    end\n    return lower_keys || upper_keys\nend", "    lower_case\
    \ = true\n    upper_case = true\n    for key in keys(dict)\n        if !islower(key)\n\
    \            lower_case = false\n        end\n        if !isupper(key)\n     \
    \       upper_case = false\n        end\n    end\n    return lower_case || upper_case\n\
    end", "    # check if all keys are lower case\n    all_lower = true\n    for key\
    \ in keys(dict)\n        if !isascii(key) || !islower(key)\n            all_lower\
    \ = false\n            break\n        end\n    end\n    if all_lower\n       \
    \ return true\n    end\n    # check if all keys are upper case\n    all_upper\
    \ = true\n    for key in keys(dict)\n        if !isascii(key) || !isupper(key)\n\
    \            all_upper = false\n            break\n        end\n    end\n    if\
    \ all_upper\n        return true\n    end\n    return false\nend", "    if length(dict)\
    \ == 0\n        return false\n    end\n    if all(isupper.(keys(dict)))\n    \
    \    return true\n    elseif all(islower.(keys(dict)))\n        return true\n\
    \    else\n        return false\n    end\nend", "    # YOUR CODE HERE\n    return\
    \ true\nend", "    lower_keys = true\n    upper_keys = true\n    for key in keys(dict)\n\
    \        if !islower(key)\n            lower_keys = false\n        end\n     \
    \   if !isupper(key)\n            upper_keys = false\n        end\n    end\n \
    \   return lower_keys || upper_keys\nend", "    lower_case = true\n    upper_case\
    \ = true\n    for (key, value) in dict\n        if !islower(key)\n           \
    \ lower_case = false\n        end\n        if !isupper(key)\n            upper_case\
    \ = false\n        end\n    end\n    return lower_case || upper_case\nend", " \
    \   lower_keys = true\n    upper_keys = true\n    for key in keys(dict)\n    \
    \    if !islower(key)\n            lower_keys = false\n        end\n        if\
    \ !isupper(key)\n            upper_keys = false\n        end\n    end\n    return\
    \ lower_keys || upper_keys\nend", "    lower_keys = [key for key in keys(dict)\
    \ if key == lowercase(key)]\n    upper_keys = [key for key in keys(dict) if key\
    \ == uppercase(key)]\n    return length(dict) == length(lower_keys) || length(dict)\
    \ == length(upper_keys)\nend", "    # check if the dictionary is empty\n    if\
    \ isempty(dict)\n        return false\n    end\n    # check if all keys are lower\
    \ case\n    if all(isascii(x) && islower(x) for x in keys(dict))\n        return\
    \ true\n    # check if all keys are upper case\n    elseif all(isascii(x) && isupper(x)\
    \ for x in keys(dict))\n        return true\n    else\n        return false\n\
    \    end\nend", "    lower_keys = true\n    upper_keys = true\n    for key in\
    \ keys(dict)\n        if !islower(key)\n            lower_keys = false\n     \
    \   end\n        if !isupper(key)\n            upper_keys = false\n        end\n\
    \    end\n    return lower_keys || upper_keys\nend", "    lower_case_keys = true\n\
    \    upper_case_keys = true\n    for key in keys(dict)\n        if !islower(key)\n\
    \            lower_case_keys = false\n        end\n        if !isupper(key)\n\
    \            upper_case_keys = false\n        end\n    end\n    return lower_case_keys\
    \ || upper_case_keys\nend", "    lower_case = true\n    upper_case = true\n  \
    \  for (key, value) in dict\n        if !islower(key)\n            lower_case\
    \ = false\n        end\n        if !isupper(key)\n            upper_case = false\n\
    \        end\n    end\n    return lower_case || upper_case\nend", "    lower_keys\
    \ = [key for key in keys(dict) if key == lowercase(key)]\n    upper_keys = [key\
    \ for key in keys(dict) if key == uppercase(key)]\n    return length(lower_keys)\
    \ == length(dict) || length(upper_keys) == length(dict)\nend", "    # check if\
    \ the dictionary is empty\n    if length(dict) == 0\n        return false\n  \
    \  end\n    # check if all keys are in lower case\n    if all(lowercase.(collect(keys(dict))))\n\
    \        return true\n    # check if all keys are in upper case\n    elseif all(uppercase.(collect(keys(dict))))\n\
    \        return true\n    else\n        return false\n    end\nend", "    lower_case_keys\
    \ = true\n    upper_case_keys = true\n    for key in keys(dict)\n        if !islower(key)\n\
    \            lower_case_keys = false\n        end\n        if !isupper(key)\n\
    \            upper_case_keys = false\n        end\n    end\n    return lower_case_keys\
    \ || upper_case_keys\nend", "    lower_keys = true\n    upper_keys = true\n  \
    \  for key in keys(dict)\n        if !islower(key)\n            lower_keys = false\n\
    \        end\n        if !isupper(key)\n            upper_keys = false\n     \
    \   end\n    end\n    return lower_keys || upper_keys\nend", "    lower = true\n\
    \    upper = true\n    for key in keys(dict)\n        if !islower(key)\n     \
    \       lower = false\n        end\n        if !isupper(key)\n            upper\
    \ = false\n        end\n    end\n    return lower || upper\nend", "    lower_keys\
    \ = true\n    upper_keys = true\n    for (key, value) in dict\n        if !islower(key)\n\
    \            lower_keys = false\n        end\n        if !isupper(key)\n     \
    \       upper_keys = false\n        end\n    end\n    return lower_keys || upper_keys\n\
    end", "    keys = collect(keys(dict))\n    if length(keys) == 0\n        return\
    \ false\n    end\n    if islower(keys[1])\n        for key in keys\n         \
    \   if !islower(key)\n                return false\n            end\n        end\n\
    \    elseif isupper(keys[1])\n        for key in keys\n            if !isupper(key)\n\
    \                return false\n            end\n        end\n    else\n      \
    \  return false\n    end\n    return true\nend", "    lower_keys = true\n    upper_keys\
    \ = true\n    for (key, value) in dict\n        if !islower(key)\n           \
    \ lower_keys = false\n        end\n        if !isupper(key)\n            upper_keys\
    \ = false\n        end\n    end\n    return lower_keys || upper_keys\nend", " \
    \   lower_keys = true\n    upper_keys = true\n    for key in keys(dict)\n    \
    \    if !islower(key)\n            lower_keys = false\n        end\n        if\
    \ !isupper(key)\n            upper_keys = false\n        end\n    end\n    return\
    \ lower_keys || upper_keys\nend", "    lower_case_keys = true\n    upper_case_keys\
    \ = true\n    for (key, value) in dict\n        if !islower(key)\n           \
    \ lower_case_keys = false\n        end\n        if !isupper(key)\n           \
    \ upper_case_keys = false\n        end\n    end\n    return lower_case_keys ||\
    \ upper_case_keys\nend", "    lower = true\n    upper = true\n    for (k, v) in\
    \ dict\n        if !islower(k)\n            lower = false\n        end\n     \
    \   if !isupper(k)\n            upper = false\n        end\n    end\n    return\
    \ lower || upper\nend", "    # check if the dictionary is empty\n    if length(dict)\
    \ == 0\n        return false\n    end\n    # check if all keys are in lower case\n\
    \    if all(lowercase.(collect(keys(dict))))\n        return true\n    # check\
    \ if all keys are in upper case\n    elseif all(uppercase.(collect(keys(dict))))\n\
    \        return true\n    else\n        return false\n    end\nend", "    lower_keys\
    \ = true\n    upper_keys = true\n    for key in keys(dict)\n        if !islower(key)\n\
    \            lower_keys = false\n        end\n        if !isupper(key)\n     \
    \       upper_keys = false\n        end\n    end\n    return lower_keys || upper_keys\n\
    end", "    # check if the dictionary is empty\n    if length(dict) == 0\n    \
    \    return false\n    end\n    # check if all keys are in lower case\n    if\
    \ all(lowercase.(collect(keys(dict))))\n        return true\n    # check if all\
    \ keys are in upper case\n    elseif all(uppercase.(collect(keys(dict))))\n  \
    \      return true\n    else\n        return false\n    end\nend", "    # check\
    \ if dict is empty\n    if length(dict) == 0\n        return false\n    end\n\
    \    # check if all keys are lowercase\n    if all(x -> x == lowercase(x), keys(dict))\n\
    \        return true\n    # check if all keys are uppercase\n    elseif all(x\
    \ -> x == uppercase(x), keys(dict))\n        return true\n    else\n        return\
    \ false\n    end\nend", "    # check if the dictionary is empty\n    if length(dict)\
    \ == 0\n        return false\n    end\n    # check if all keys are strings in\
    \ lower case\n    if all(x -> x == lowercase(x), keys(dict))\n        return true\n\
    \    # check if all keys are strings in upper case\n    elseif all(x -> x == uppercase(x),\
    \ keys(dict))\n        return true\n    else\n        return false\n    end\n\
    end", "    # check if the dictionary is empty\n    if isempty(dict)\n        return\
    \ false\n    end\n    # check if all keys are lower case\n    if all(lowercase.(keys(dict)))\n\
    \        return true\n    # check if all keys are upper case\n    elseif all(uppercase.(keys(dict)))\n\
    \        return true\n    else\n        return false\n    end\nend", "    lower\
    \ = true\n    upper = true\n    for key in keys(dict)\n        lower = lower &&\
    \ islower(key)\n        upper = upper && isupper(key)\n    end\n    return lower\
    \ || upper\nend", "    # check if the dictionary is empty\n    if length(dict)\
    \ == 0\n        return false\n    end\n    # check if all keys are in lower case\n\
    \    if all(islower, keys(dict))\n        return true\n    # check if all keys\
    \ are in upper case\n    elseif all(isupper, keys(dict))\n        return true\n\
    \    else\n        return false\n    end\nend", "    lower = true\n    upper =\
    \ true\n    for (key, value) in dict\n        if islower(key[1])\n           \
    \ upper = false\n        elseif isupper(key[1])\n            lower = false\n \
    \       else\n            return false\n        end\n    end\n    return lower\
    \ || upper\nend", "    return all(x in string.lowercase for x in keys(dict)) ||\
    \ all(x in string.uppercase for x in keys(dict))\nend", "    lower = true\n  \
    \  upper = true\n    for key in keys(dict)\n        if islower(key[1])\n     \
    \       upper = false\n        elseif isupper(key[1])\n            lower = false\n\
    \        else\n            return false\n        end\n    end\n    return lower\
    \ || upper\nend", "    # YOUR CODE HERE\n    return false\nend", "    # Your code\
    \ here\nend", "    lower_keys = true\n    upper_keys = true\n    for (key, value)\
    \ in dict\n        if !islower(key)\n            lower_keys = false\n        end\n\
    \        if !isupper(key)\n            upper_keys = false\n        end\n    end\n\
    \    return lower_keys || upper_keys\nend", "    # check if the dictionary is\
    \ empty\n    if length(dict) == 0\n        return false\n    end\n    # check\
    \ if all keys are in lower case\n    if all(key in keys(dict) for key in lowercase(keys(dict)))\n\
    \        return true\n    # check if all keys are in upper case\n    elseif all(key\
    \ in keys(dict) for key in uppercase(keys(dict)))\n        return true\n    else\n\
    \        return false\n    end\nend", "    lower_case = true\n    upper_case =\
    \ true\n    for (key, value) in dict\n        if !isupper(key)\n            upper_case\
    \ = false\n        end\n        if !islower(key)\n            lower_case = false\n\
    \        end\n    end\n    return lower_case || upper_case\nend", "    lower_case_keys\
    \ = true\n    upper_case_keys = true\n    for key in keys(dict)\n        if !islower(key)\n\
    \            lower_case_keys = false\n        end\n        if !isupper(key)\n\
    \            upper_case_keys = false\n        end\n    end\n    return lower_case_keys\
    \ || upper_case_keys\nend", "    lower_case = true\n    upper_case = true\n  \
    \  for (key, value) in dict\n        if !islower(key)\n            lower_case\
    \ = false\n        end\n        if !isupper(key)\n            upper_case = false\n\
    \        end\n    end\n    return lower_case || upper_case\nend", "    # your\
    \ code here\nend", "    lower_keys = [key for key in keys(dict) if key == lowercase(key)]\n\
    \    upper_keys = [key for key in keys(dict) if key == uppercase(key)]\n    if\
    \ length(lower_keys) == length(dict) || length(upper_keys) == length(dict)\n \
    \       return true\n    else\n        return false\n    end\nend", "    # check\
    \ if the dictionary is empty\n    if length(dict) == 0\n        return false\n\
    \    end\n    # check if all keys are in lower case\n    if all(isascii(x) &&\
    \ islower(x) for x in keys(dict))\n        return true\n    # check if all keys\
    \ are in upper case\n    elseif all(isascii(x) && isupper(x) for x in keys(dict))\n\
    \        return true\n    else\n        return false\n    end\nend", "    keys\
    \ = collect(keys(dict))\n    if length(keys) == 0\n        return false\n    end\n\
    \    if islowercase(keys[1])\n        for key in keys\n            if !islowercase(key)\n\
    \                return false\n            end\n        end\n    else\n      \
    \  for key in keys\n            if !isuppercase(key)\n                return false\n\
    \            end\n        end\n    end\n    return true\nend", "    lower_case\
    \ = true\n    upper_case = true\n    for (key, value) in dict\n        if !islower(key)\n\
    \            lower_case = false\n        end\n        if !isupper(key)\n     \
    \       upper_case = false\n        end\n    end\n    return lower_case || upper_case\n\
    end", "    lower_case = true\n    upper_case = true\n    for (key, value) in dict\n\
    \        if !islower(key)\n            lower_case = false\n        end\n     \
    \   if !isupper(key)\n            upper_case = false\n        end\n    end\n \
    \   return lower_case || upper_case\nend", "    if length(dict) == 0\n       \
    \ return false\n    end\n    if length(dict) == 1\n        return true\n    end\n\
    \    if length(dict) == 2\n        if islower(keys(dict)[1]) == islower(keys(dict)[2])\n\
    \            return true\n        else\n            return false\n        end\n\
    \    end\n    if length(dict) > 2\n        if islower(keys(dict)[1]) == islower(keys(dict)[2])\
    \ == islower(keys(dict)[3])\n            return true\n        else\n         \
    \   return false\n        end\n    end\nend", "    lower_keys = true\n    upper_keys\
    \ = true\n    for (key, value) in dict\n        if !islower(key)\n           \
    \ lower_keys = false\n        end\n        if !isupper(key)\n            upper_keys\
    \ = false\n        end\n    end\n    return lower_keys || upper_keys\nend", " \
    \   # YOUR CODE HERE\nend", "    lower_keys = true\n    upper_keys = true\n  \
    \  for (key, value) in dict\n        if !islower(key)\n            lower_keys\
    \ = false\n        end\n        if !isupper(key)\n            upper_keys = false\n\
    \        end\n    end\n    return lower_keys || upper_keys\nend", "    # TODO:\
    \ Implement this function\n    return false\nend", "    lower_keys = [key for\
    \ key in keys(dict) if key == lowercase(key)]\n    upper_keys = [key for key in\
    \ keys(dict) if key == uppercase(key)]\n    return length(lower_keys) == length(dict)\
    \ || length(upper_keys) == length(dict)\nend", "    lower_keys = true\n    upper_keys\
    \ = true\n    for key in keys(dict)\n        if !(islower(key))\n            lower_keys\
    \ = false\n        end\n        if !(isupper(key))\n            upper_keys = false\n\
    \        end\n    end\n    return lower_keys || upper_keys\nend", "    lower_keys\
    \ = 0\n    upper_keys = 0\n    for key in keys(dict)\n        if islower(key)\n\
    \            lower_keys += 1\n        elseif isupper(key)\n            upper_keys\
    \ += 1\n        end\n    end\n    if lower_keys == length(dict) || upper_keys\
    \ == length(dict)\n        return true\n    else\n        return false\n    end\n\
    end", "    lower_case = true\n    upper_case = true\n    for (key, value) in dict\n\
    \        if !islower(key)\n            lower_case = false\n        end\n     \
    \   if !isupper(key)\n            upper_case = false\n        end\n    end\n \
    \   return lower_case || upper_case\nend", "    lower_keys = true\n    upper_keys\
    \ = true\n    for key in keys(dict)\n        if !islower(key)\n            lower_keys\
    \ = false\n        end\n        if !isupper(key)\n            upper_keys = false\n\
    \        end\n    end\n    return lower_keys || upper_keys\nend", "    # check\
    \ if the dictionary is empty\n    if length(dict) == 0\n        return false\n\
    \    end\n    # check if all keys are lower case\n    if all(lowercase.(collect(keys(dict))))\n\
    \        return true\n    # check if all keys are upper case\n    elseif all(uppercase.(collect(keys(dict))))\n\
    \        return true\n    else\n        return false\n    end\nend", "    lower_keys\
    \ = true\n    upper_keys = true\n    for (key, value) in dict\n        if !islower(key)\n\
    \            lower_keys = false\n        end\n        if !isupper(key)\n     \
    \       upper_keys = false\n        end\n    end\n    return lower_keys || upper_keys\n\
    end", "    return true\nend", "    # check if the dictionary is empty\n    if\
    \ length(dict) == 0\n        return false\n    end\n    # check if all keys are\
    \ in lower case\n    if all(x -> x == lowercase(x), keys(dict))\n        return\
    \ true\n    # check if all keys are in upper case\n    elseif all(x -> x == uppercase(x),\
    \ keys(dict))\n        return true\n    else\n        return false\n    end\n\
    end", "    # YOUR CODE HERE\n    return true\nend", "    return false\nend", " \
    \   # YOUR CODE HERE\n    return false\nend", "    # check if the dictionary is\
    \ empty\n    if length(dict) == 0\n        return false\n    end\n    # check\
    \ if all keys are in lower case\n    if all(lowercase.(keys(dict)))\n        return\
    \ true\n    # check if all keys are in upper case\n    elseif all(uppercase.(keys(dict)))\n\
    \        return true\n    else\n        return false\n    end\nend", "    lower_case_keys\
    \ = true\n    upper_case_keys = true\n    for key in keys(dict)\n        if !islower(key)\n\
    \            lower_case_keys = false\n        end\n        if !isupper(key)\n\
    \            upper_case_keys = false\n        end\n    end\n    return lower_case_keys\
    \ || upper_case_keys\nend", "    lower_case = true\n    upper_case = true\n  \
    \  for key in keys(dict)\n        if !islower(key)\n            lower_case = false\n\
    \        end\n        if !isupper(key)\n            upper_case = false\n     \
    \   end\n    end\n    return lower_case || upper_case\nend", "    lower_case_keys\
    \ = true\n    upper_case_keys = true\n    for key in keys(dict)\n        if !islower(key)\n\
    \            lower_case_keys = false\n        end\n        if !isupper(key)\n\
    \            upper_case_keys = false\n        end\n    end\n    return lower_case_keys\
    \ || upper_case_keys\nend", "    # check if the dictionary is empty\n    if length(dict)\
    \ == 0\n        return false\n    end\n    # check if all keys are in lower case\n\
    \    if all(isupper.(collect(keys(dict))))\n        return true\n    # check if\
    \ all keys are in upper case\n    elseif all(islower.(collect(keys(dict))))\n\
    \        return true\n    else\n        return false\n    end\nend", "    lower_keys\
    \ = true\n    upper_keys = true\n    for (key, value) in dict\n        if !islower(key)\n\
    \            lower_keys = false\n        end\n        if !isupper(key)\n     \
    \       upper_keys = false\n        end\n    end\n    return lower_keys || upper_keys\n\
    end", "    lower_case = true\n    upper_case = true\n    for key in keys(dict)\n\
    \        if islower(key[1])\n            upper_case = false\n        elseif isupper(key[1])\n\
    \            lower_case = false\n        else\n            return false\n    \
    \    end\n    end\n    return lower_case || upper_case\nend", "    return all(k\
    \ in lowercase(string) for k in keys(dict)) || all(k in uppercase(string) for\
    \ k in keys(dict))\nend", "    keys = keys(dict)\n    if length(keys) == 0\n \
    \       return false\n    end\n    if islower(keys[1])\n        for key in keys\n\
    \            if !islower(key)\n                return false\n            end\n\
    \        end\n    elseif isupper(keys[1])\n        for key in keys\n         \
    \   if !isupper(key)\n                return false\n            end\n        end\n\
    \    else\n        return false\n    end\n    return true\nend", "    # check\
    \ if the dictionary is empty\n    if length(dict) == 0\n        return false\n\
    \    end\n    # check if all keys are lower case\n    if all(islower.(collect(keys(dict))))\n\
    \        return true\n    end\n    # check if all keys are upper case\n    if\
    \ all(isupper.(collect(keys(dict))))\n        return true\n    end\n    # if neither\
    \ of the above conditions are met, return false\n    return false\nend", "   \
    \ # check if the dictionary is empty\n    if length(dict) == 0\n        return\
    \ false\n    end\n    # check if all keys are lower case\n    if all(isascii(key)\
    \ && islower(key) for key in keys(dict))\n        return true\n    # check if\
    \ all keys are upper case\n    elseif all(isascii(key) && isupper(key) for key\
    \ in keys(dict))\n        return true\n    else\n        return false\n    end\n\
    end", "    lower_keys = [key for key in keys(dict) if key == lowercase(key)]\n\
    \    upper_keys = [key for key in keys(dict) if key == uppercase(key)]\n    if\
    \ length(lower_keys) == length(dict) || length(upper_keys) == length(dict)\n \
    \       return true\n    else\n        return false\n    end\nend", "    # check\
    \ if all keys are lower case\n    all_lower = true\n    for key in keys(dict)\n\
    \        if !islower(key)\n            all_lower = false\n            break\n\
    \        end\n    end\n    # check if all keys are upper case\n    all_upper =\
    \ true\n    for key in keys(dict)\n        if !isupper(key)\n            all_upper\
    \ = false\n            break\n        end\n    end\n    # return true if all keys\
    \ are lower case or all keys are upper case\n    return all_lower || all_upper\n\
    end", "    # YOUR CODE HERE\n    return false\nend", "    # check if the dictionary\
    \ is empty\n    if length(dict) == 0\n        return false\n    end\n    # check\
    \ if all keys are in lower case\n    if all(lowercase.(collect(keys(dict))))\n\
    \        return true\n    # check if all keys are in upper case\n    elseif all(uppercase.(collect(keys(dict))))\n\
    \        return true\n    else\n        return false\n    end\nend", "    # your\
    \ code here\nend", "    return true\nend", "    # check if the dictionary is empty\n\
    \    if length(dict) == 0\n        return false\n    end\n    # check if all keys\
    \ are in lower case\n    if all(isascii(key) && islower(key) for key in keys(dict))\n\
    \        return true\n    # check if all keys are in upper case\n    elseif all(isascii(key)\
    \ && isupper(key) for key in keys(dict))\n        return true\n    else\n    \
    \    return false\n    end\nend", "    lower_keys = 0\n    upper_keys = 0\n  \
    \  for (key, value) in dict\n        if islower(key)\n            lower_keys +=\
    \ 1\n        elseif isupper(key)\n            upper_keys += 1\n        end\n \
    \   end\n    if lower_keys == 0 && upper_keys == 0\n        return false\n   \
    \ elseif lower_keys == 0 && upper_keys > 0\n        return true\n    elseif lower_keys\
    \ > 0 && upper_keys == 0\n        return true\n    else\n        return false\n\
    \    end\nend", "    lower_keys = true\n    upper_keys = true\n    for (key, value)\
    \ in dict\n        if !islower(key)\n            lower_keys = false\n        end\n\
    \        if !isupper(key)\n            upper_keys = false\n        end\n    end\n\
    \    return lower_keys || upper_keys\nend", "    # check if the dictionary is\
    \ empty\n    if length(dict) == 0\n        return false\n    end\n    # check\
    \ if all keys are in lower case\n    if all(lowercase.(collect(keys(dict))))\n\
    \        return true\n    # check if all keys are in upper case\n    elseif all(uppercase.(collect(keys(dict))))\n\
    \        return true\n    else\n        return false\n    end\nend", "    # check\
    \ if the dictionary is empty\n    if length(dict) == 0\n        return false\n\
    \    end\n    # check if all keys are in lower case\n    if all(isupper.(keys(dict)))\n\
    \        return true\n    # check if all keys are in upper case\n    elseif all(islower.(keys(dict)))\n\
    \        return true\n    else\n        return false\n    end\nend", "    # check\
    \ if all keys are lower case\n    lower_case = true\n    for key in keys(dict)\n\
    \        if !islower(key)\n            lower_case = false\n            break\n\
    \        end\n    end\n    if lower_case\n        return true\n    end\n    #\
    \ check if all keys are upper case\n    upper_case = true\n    for key in keys(dict)\n\
    \        if !isupper(key)\n            upper_case = false\n            break\n\
    \        end\n    end\n    if upper_case\n        return true\n    end\n    return\
    \ false\nend", "    # YOUR CODE HERE\n    return true\nend", "    # YOUR CODE\
    \ HERE\n    return false\nend", "    lower_keys = [key for key in keys(dict) if\
    \ islower(key)]\n    upper_keys = [key for key in keys(dict) if isupper(key)]\n\
    \    return length(lower_keys) == length(dict) || length(upper_keys) == length(dict)\n\
    end", "    lower_keys = 0\n    upper_keys = 0\n    for key in keys(dict)\n   \
    \     if islower(key)\n            lower_keys += 1\n        elseif isupper(key)\n\
    \            upper_keys += 1\n        end\n    end\n    if lower_keys == 0 &&\
    \ upper_keys == 0\n        return false\n    elseif lower_keys == 0 && upper_keys\
    \ > 0\n        return true\n    elseif lower_keys > 0 && upper_keys == 0\n   \
    \     return true\n    else\n        return false\n    end\nend", "    return\
    \ true\nend", "    lower_case = true\n    upper_case = true\n    for (key, value)\
    \ in dict\n        if !isascii(key) || !islower(key)\n            lower_case =\
    \ false\n        end\n        if !isascii(key) || !isupper(key)\n            upper_case\
    \ = false\n        end\n    end\n    return lower_case || upper_case\nend", " \
    \   # your code here\nend", "    # check if the dictionary is empty\n    if length(dict)\
    \ == 0\n        return false\n    end\n    # check if all keys are in lower case\n\
    \    if all(isascii(key) && islower(key) for key in keys(dict))\n        return\
    \ true\n    # check if all keys are in upper case\n    elseif all(isascii(key)\
    \ && isupper(key) for key in keys(dict))\n        return true\n    else\n    \
    \    return false\n    end\nend", "    lower_keys = [k for k in keys(dict) if\
    \ k == lowercase(k)]\n    upper_keys = [k for k in keys(dict) if k == uppercase(k)]\n\
    \    return length(lower_keys) == length(dict) || length(upper_keys) == length(dict)\n\
    end", "    # YOUR CODE HERE\n    return false\nend", "    lower_keys = true\n\
    \    upper_keys = true\n    for (key, value) in dict\n        if !islower(key)\n\
    \            lower_keys = false\n        end\n        if !isupper(key)\n     \
    \       upper_keys = false\n        end\n    end\n    return lower_keys || upper_keys\n\
    end", "    # your code here\nend", "    lower_keys = true\n    upper_keys = true\n\
    \    for key in keys(dict)\n        if !islower(key)\n            lower_keys =\
    \ false\n        end\n        if !isupper(key)\n            upper_keys = false\n\
    \        end\n    end\n    return lower_keys || upper_keys\nend", "    # YOUR\
    \ CODE HERE\n    return true\nend", "    lower_keys = true\n    upper_keys = true\n\
    \    for key in keys(dict)\n        if !islower(key)\n            lower_keys =\
    \ false\n        end\n        if !isupper(key)\n            upper_keys = false\n\
    \        end\n    end\n    return lower_keys || upper_keys\nend", "    lower_keys\
    \ = 0\n    upper_keys = 0\n    for key in keys(dict)\n        if islower(key)\n\
    \            lower_keys += 1\n        elseif isupper(key)\n            upper_keys\
    \ += 1\n        end\n    end\n    if lower_keys == 0 && upper_keys == 0\n    \
    \    return false\n    elseif lower_keys == 0 && upper_keys > 0\n        return\
    \ true\n    elseif lower_keys > 0 && upper_keys == 0\n        return true\n  \
    \  else\n        return false\n    end\nend", "    lower_keys = true\n    upper_keys\
    \ = true\n    for (key, value) in dict\n        if !islower(key)\n           \
    \ lower_keys = false\n        end\n        if !isupper(key)\n            upper_keys\
    \ = false\n        end\n    end\n    return lower_keys || upper_keys\nend", " \
    \   lower_case = true\n    upper_case = true\n    for (key, value) in dict\n \
    \       if !islower(key)\n            lower_case = false\n        end\n      \
    \  if !isupper(key)\n            upper_case = false\n        end\n    end\n  \
    \  if lower_case || upper_case\n        return true\n    else\n        return\
    \ false\n    end\nend", "    # check if the dictionary is empty\n    if length(dict)\
    \ == 0\n        return false\n    end\n    # check if all keys are in lower case\n\
    \    if all(lowercase.(collect(keys(dict))))\n        return true\n    end\n \
    \   # check if all keys are in upper case\n    if all(uppercase.(collect(keys(dict))))\n\
    \        return true\n    end\n    # if none of the above conditions are met,\
    \ return false\n    return false\nend", "    # check if the dictionary is empty\n\
    \    if length(dict) == 0\n        return false\n    end\n    # check if all keys\
    \ are lower case\n    if all(x -> x == lowercase(x), keys(dict))\n        return\
    \ true\n    # check if all keys are upper case\n    elseif all(x -> x == uppercase(x),\
    \ keys(dict))\n        return true\n    else\n        return false\n    end\n\
    end", "    lower_case_keys = true\n    upper_case_keys = true\n    for key in\
    \ keys(dict)\n        if !islower(key)\n            lower_case_keys = false\n\
    \        end\n        if !isupper(key)\n            upper_case_keys = false\n\
    \        end\n    end\n    return lower_case_keys || upper_case_keys\nend", " \
    \   lower_keys = [key for key in keys(dict) if key == lowercase(key)]\n    upper_keys\
    \ = [key for key in keys(dict) if key == uppercase(key)]\n    return length(lower_keys)\
    \ == length(dict) || length(upper_keys) == length(dict)\nend", "    lower_keys\
    \ = true\n    upper_keys = true\n    for key in keys(dict)\n        if !islower(key)\n\
    \            lower_keys = false\n        end\n        if !isupper(key)\n     \
    \       upper_keys = false\n        end\n    end\n    return lower_keys || upper_keys\n\
    end", "    lower_case_keys = true\n    upper_case_keys = true\n    for (key, value)\
    \ in dict\n        if !islower(key)\n            lower_case_keys = false\n   \
    \     end\n        if !isupper(key)\n            upper_case_keys = false\n   \
    \     end\n    end\n    return lower_case_keys || upper_case_keys\nend", "   \
    \ lower_case = true\n    upper_case = true\n    for key in keys(dict)\n      \
    \  if !islower(key)\n            lower_case = false\n        end\n        if !isupper(key)\n\
    \            upper_case = false\n        end\n    end\n    return lower_case ||\
    \ upper_case\nend", "    lower_count = 0\n    upper_count = 0\n    for (key, value)\
    \ in dict\n        if islower(key)\n            lower_count += 1\n        elseif\
    \ isupper(key)\n            upper_count += 1\n        end\n    end\n    if lower_count\
    \ == length(dict) || upper_count == length(dict)\n        return true\n    else\n\
    \        return false\n    end\nend", "    lower_keys = true\n    upper_keys =\
    \ true\n    for (key, value) in dict\n        if !islower(key)\n            lower_keys\
    \ = false\n        end\n        if !isupper(key)\n            upper_keys = false\n\
    \        end\n    end\n    return lower_keys || upper_keys\nend", "    # check\
    \ if all keys are lower case\n    all_lower = true\n    for key in keys(dict)\n\
    \        if !islower(key)\n            all_lower = false\n            break\n\
    \        end\n    end\n    # check if all keys are upper case\n    all_upper =\
    \ true\n    for key in keys(dict)\n        if !isupper(key)\n            all_upper\
    \ = false\n            break\n        end\n    end\n    # return true if all keys\
    \ are lower case or all keys are upper case\n    if all_lower || all_upper\n \
    \       return true\n    else\n        return false\n    end\nend", "    # YOUR\
    \ CODE HERE\n    return true\nend", "    if length(dict) == 0\n        return\
    \ false\n    end\n    if all(isupper.(keys(dict)))\n        return true\n    elseif\
    \ all(islower.(keys(dict)))\n        return true\n    else\n        return false\n\
    \    end\nend", "    # check if dict is empty\n    if length(dict) == 0\n    \
    \    return false\n    end\n    # check if all keys are lower case\n    if all(lowercase.(collect(keys(dict))))\n\
    \        return true\n    # check if all keys are upper case\n    elseif all(uppercase.(collect(keys(dict))))\n\
    \        return true\n    else\n        return false\n    end\nend", "    lower_case_keys\
    \ = true\n    upper_case_keys = true\n    for (key, value) in dict\n        if\
    \ !islower(key)\n            lower_case_keys = false\n        end\n        if\
    \ !isupper(key)\n            upper_case_keys = false\n        end\n    end\n \
    \   return lower_case_keys || upper_case_keys\nend", "    return true\nend", " \
    \   lower_case = true\n    upper_case = true\n    for (key, value) in dict\n \
    \       if !(islower(key[1]))\n            lower_case = false\n        end\n \
    \       if !(isupper(key[1]))\n            upper_case = false\n        end\n \
    \   end\n    return lower_case || upper_case\nend", "    lower_keys = [key for\
    \ key in keys(dict) if key == lowercase(key)]\n    upper_keys = [key for key in\
    \ keys(dict) if key == uppercase(key)]\n    if length(lower_keys) == length(dict)\
    \ || length(upper_keys) == length(dict)\n        return true\n    else\n     \
    \   return false\n    end\nend", "    # check if the dictionary is empty\n   \
    \ if length(dict) == 0\n        return false\n    end\n    # check if all keys\
    \ are in lower case\n    if all(isascii(x) && islower(x) for x in keys(dict))\n\
    \        return true\n    # check if all keys are in upper case\n    elseif all(isascii(x)\
    \ && isupper(x) for x in keys(dict))\n        return true\n    else\n        return\
    \ false\n    end\nend", "    lower_keys = true\n    upper_keys = true\n    for\
    \ (key, value) in dict\n        if !islower(key)\n            lower_keys = false\n\
    \        end\n        if !isupper(key)\n            upper_keys = false\n     \
    \   end\n    end\n    return lower_keys || upper_keys\nend", "    return all(isupper.(collect(keys(dict))))\
    \ || all(islower.(collect(keys(dict))))\nend", "    # check if the dictionary\
    \ is empty\n    if length(dict) == 0\n        return false\n    end\n    # check\
    \ if all keys are in lower case\n    if all(isupper.(collect(keys(dict))))\n \
    \       return true\n    # check if all keys are in upper case\n    elseif all(islower.(collect(keys(dict))))\n\
    \        return true\n    else\n        return false\n    end\nend", "    lower_keys\
    \ = true\n    upper_keys = true\n    for key in keys(dict)\n        if !islower(key)\n\
    \            lower_keys = false\n        end\n        if !isupper(key)\n     \
    \       upper_keys = false\n        end\n    end\n    return lower_keys || upper_keys\n\
    end", "    lower_keys = true\n    upper_keys = true\n    for key in keys(dict)\n\
    \        if !islower(key)\n            lower_keys = false\n        end\n     \
    \   if !isupper(key)\n            upper_keys = false\n        end\n    end\n \
    \   return lower_keys || upper_keys\nend", "    lower_keys = true\n    upper_keys\
    \ = true\n    for key in keys(dict)\n        if !islower(key)\n            lower_keys\
    \ = false\n        end\n        if !isupper(key)\n            upper_keys = false\n\
    \        end\n    end\n    return lower_keys || upper_keys\nend", "    # your\
    \ code here\nend", "    lower_case = true\n    upper_case = true\n    for (key,\
    \ value) in dict\n        if !islower(key)\n            lower_case = false\n \
    \       end\n        if !isupper(key)\n            upper_case = false\n      \
    \  end\n    end\n    return lower_case || upper_case\nend", "    lower_count =\
    \ 0\n    upper_count = 0\n    for key in keys(dict)\n        if islower(key)\n\
    \            lower_count += 1\n        elseif isupper(key)\n            upper_count\
    \ += 1\n        end\n    end\n    if lower_count == length(dict) || upper_count\
    \ == length(dict)\n        return true\n    else\n        return false\n    end\n\
    end", "    # check if the dictionary is empty\n    if length(dict) == 0\n    \
    \    return false\n    end\n    # check if all keys are in lower case\n    if\
    \ all(isupper.(collect(keys(dict))))\n        return true\n    # check if all\
    \ keys are in upper case\n    elseif all(islower.(collect(keys(dict))))\n    \
    \    return true\n    else\n        return false\n    end\nend", "    return true\n\
    end", "    lower_case = true\n    upper_case = true\n    for (key, value) in dict\n\
    \        if !islower(key)\n            lower_case = false\n        end\n     \
    \   if !isupper(key)\n            upper_case = false\n        end\n    end\n \
    \   return lower_case || upper_case\nend", "    lower_case = true\n    upper_case\
    \ = true\n    for (key, value) in dict\n        if !islower(key)\n           \
    \ lower_case = false\n        end\n        if !isupper(key)\n            upper_case\
    \ = false\n        end\n    end\n    return lower_case || upper_case\nend", " \
    \   lower_case_keys = true\n    upper_case_keys = true\n    for (key, value) in\
    \ dict\n        if !islower(key)\n            lower_case_keys = false\n      \
    \  end\n        if !isupper(key)\n            upper_case_keys = false\n      \
    \  end\n    end\n    return lower_case_keys || upper_case_keys\nend", "    lower_keys\
    \ = 0\n    upper_keys = 0\n    for (key, value) in dict\n        if islower(key)\n\
    \            lower_keys += 1\n        elseif isupper(key)\n            upper_keys\
    \ += 1\n        end\n    end\n    if lower_keys == length(dict) || upper_keys\
    \ == length(dict)\n        return true\n    else\n        return false\n    end\n\
    end", "    lower_case = true\n    upper_case = true\n    for (key, value) in dict\n\
    \        if !islower(key)\n            lower_case = false\n        end\n     \
    \   if !isupper(key)\n            upper_case = false\n        end\n    end\n \
    \   return lower_case || upper_case\nend", "    lower_case = true\n    upper_case\
    \ = true\n    for (key, value) in dict\n        if !islower(key)\n           \
    \ lower_case = false\n        end\n        if !isupper(key)\n            upper_case\
    \ = false\n        end\n    end\n    return lower_case || upper_case\nend", " \
    \   # check if the dictionary is empty\n    if length(dict) == 0\n        return\
    \ false\n    end\n    # check if all keys are in lower case\n    if all(lowercase.(collect(keys(dict))))\n\
    \        return true\n    # check if all keys are in upper case\n    elseif all(uppercase.(collect(keys(dict))))\n\
    \        return true\n    else\n        return false\n    end\nend", "    lower_keys\
    \ = true\n    upper_keys = true\n    for (key, value) in dict\n        if !islower(key)\n\
    \            lower_keys = false\n        end\n        if !isupper(key)\n     \
    \       upper_keys = false\n        end\n    end\n    return lower_keys || upper_keys\n\
    end", "    lower_case_keys = true\n    upper_case_keys = true\n    for (key, value)\
    \ in dict\n        if !islower(key)\n            lower_case_keys = false\n   \
    \     end\n        if !isupper(key)\n            upper_case_keys = false\n   \
    \     end\n    end\n    return lower_case_keys || upper_case_keys\nend", "   \
    \ # your code here\nend", "    # check if the dictionary is empty\n    if length(dict)\
    \ == 0\n        return false\n    end\n    # check if all keys are strings in\
    \ lower case\n    if all(isascii(x) && islower(x) for x in keys(dict))\n     \
    \   return true\n    # check if all keys are strings in upper case\n    elseif\
    \ all(isascii(x) && isupper(x) for x in keys(dict))\n        return true\n   \
    \ else\n        return false\n    end\nend", "    # your code here\nend", "  \
    \  lower_case = true\n    upper_case = true\n    for (key, value) in dict\n  \
    \      if !islower(key)\n            lower_case = false\n        end\n       \
    \ if !isupper(key)\n            upper_case = false\n        end\n    end\n   \
    \ return lower_case || upper_case\nend", "    # YOUR CODE HERE\n    return false\n\
    end", "    # YOUR CODE HERE\n    return true\nend", "    lower = true\n    upper\
    \ = true\n    for (key, value) in dict\n        if !isupper(key[1])\n        \
    \    upper = false\n        end\n        if !islower(key[1])\n            lower\
    \ = false\n        end\n    end\n    return lower || upper\nend", "    lower_keys\
    \ = true\n    upper_keys = true\n    for (key, value) in dict\n        if !islower(key)\n\
    \            lower_keys = false\n        end\n        if !isupper(key)\n     \
    \       upper_keys = false\n        end\n    end\n    return lower_keys || upper_keys\n\
    end", "    if length(dict) == 0\n        return false\n    end\n    if length(dict)\
    \ == 1\n        return true\n    end\n    if all(lowercase.(collect(keys(dict))))\n\
    \        return true\n    elseif all(uppercase.(collect(keys(dict))))\n      \
    \  return true\n    else\n        return false\n    end\nend", "    # your code\
    \ here\nend", "    lower_keys = true\n    upper_keys = true\n    for (key, value)\
    \ in dict\n        if !islower(key)\n            lower_keys = false\n        end\n\
    \        if !isupper(key)\n            upper_keys = false\n        end\n    end\n\
    \    return lower_keys || upper_keys\nend", "    # YOUR CODE HERE\n    return\
    \ false\nend", "    # your code here\nend", "    lower_keys = map(x -> x == lowercase(x),\
    \ keys(dict))\n    upper_keys = map(x -> x == uppercase(x), keys(dict))\n    return\
    \ all(lower_keys) || all(upper_keys)\nend", "    # Check if the dictionary is\
    \ empty\n    if length(dict) == 0\n        return false\n    end\n    # Check\
    \ if all keys are strings in lower case\n    if all(isascii(key) && islower(key)\
    \ for key in keys(dict))\n        return true\n    end\n    # Check if all keys\
    \ are strings in upper case\n    if all(isascii(key) && isupper(key) for key in\
    \ keys(dict))\n        return true\n    end\n    # If none of the above conditions\
    \ are satisfied, return false\n    return false\nend", "    # YOUR CODE HERE\n\
    \    return true\nend", "    lower_case_keys = true\n    upper_case_keys = true\n\
    \    for key in keys(dict)\n        if !islower(key)\n            lower_case_keys\
    \ = false\n        end\n        if !isupper(key)\n            upper_case_keys\
    \ = false\n        end\n    end\n    return lower_case_keys || upper_case_keys\n\
    end", "    lower_keys = true\n    upper_keys = true\n    for key in keys(dict)\n\
    \        if !islower(key)\n            lower_keys = false\n        end\n     \
    \   if !isupper(key)\n            upper_keys = false\n        end\n    end\n \
    \   return lower_keys || upper_keys\nend", "    # check if the dictionary is empty\n\
    \    if length(dict) == 0\n        return false\n    end\n    # check if all keys\
    \ are in lower case\n    if all(x -> x == lowercase(x), keys(dict))\n        return\
    \ true\n    # check if all keys are in upper case\n    elseif all(x -> x == uppercase(x),\
    \ keys(dict))\n        return true\n    else\n        return false\n    end\n\
    end", "    # your code here\nend", "    # YOUR CODE HERE\n    return true\nend",
  "    if length(dict) == 0\n        return false\n    end\n    if islower(first(keys(dict)))\n\
    \        for key in keys(dict)\n            if !islower(key)\n               \
    \ return false\n            end\n        end\n    elseif isupper(first(keys(dict)))\n\
    \        for key in keys(dict)\n            if !isupper(key)\n               \
    \ return false\n            end\n        end\n    else\n        return false\n\
    \    end\n    return true\nend", "    # YOUR CODE HERE\n    return true\nend",
  "    # check if the dictionary is empty\n    if length(dict) == 0\n        return\
    \ false\n    end\n    # check if all keys are lower case\n    if all(isupper.(keys(dict)))\n\
    \        return true\n    # check if all keys are upper case\n    elseif all(islower.(keys(dict)))\n\
    \        return true\n    else\n        return false\n    end\nend", "    lower_keys\
    \ = [key for key in keys(dict) if key == lowercase(key)]\n    upper_keys = [key\
    \ for key in keys(dict) if key == uppercase(key)]\n    if length(lower_keys) ==\
    \ length(dict) || length(upper_keys) == length(dict)\n        return true\n  \
    \  else\n        return false\n    end\nend", "    lower_keys = true\n    upper_keys\
    \ = true\n    for key in keys(dict)\n        if !islower(key)\n            lower_keys\
    \ = false\n        end\n        if !isupper(key)\n            upper_keys = false\n\
    \        end\n    end\n    return lower_keys || upper_keys\nend", "    lower_keys\
    \ = true\n    upper_keys = true\n    for key in keys(dict)\n        if !islower(key)\n\
    \            lower_keys = false\n        end\n        if !isupper(key)\n     \
    \       upper_keys = false\n        end\n    end\n    return lower_keys || upper_keys\n\
    end", "    lower_case = true\n    upper_case = true\n    for (key, value) in dict\n\
    \        if !islower(key)\n            lower_case = false\n        end\n     \
    \   if !isupper(key)\n            upper_case = false\n        end\n    end\n \
    \   return lower_case || upper_case\nend", "    lower_case = true\n    upper_case\
    \ = true\n    for (key, value) in dict\n        if !isupper(key)\n           \
    \ upper_case = false\n        end\n        if !islower(key)\n            lower_case\
    \ = false\n        end\n    end\n    return lower_case || upper_case\nend", " \
    \   lower_case = true\n    upper_case = true\n    for (key, value) in dict\n \
    \       if islower(key[1])\n            upper_case = false\n        elseif isupper(key[1])\n\
    \            lower_case = false\n        else\n            return false\n    \
    \    end\n    end\n    return lower_case || upper_case\nend", "    # check if\
    \ the dictionary is empty\n    if length(dict) == 0\n        return false\n  \
    \  end\n    # check if all keys are in lower case\n    if all(lowercase.(keys(dict)))\n\
    \        return true\n    # check if all keys are in upper case\n    elseif all(uppercase.(keys(dict)))\n\
    \        return true\n    else\n        return false\n    end\nend", "    # check\
    \ if the dictionary is empty\n    if length(dict) == 0\n        return false\n\
    \    end\n    # check if all keys are in lower case\n    if all(isupper.(keys(dict)))\n\
    \        return true\n    # check if all keys are in upper case\n    elseif all(islower.(keys(dict)))\n\
    \        return true\n    else\n        return false\n    end\nend", "    lower_keys\
    \ = true\n    upper_keys = true\n    for key in keys(dict)\n        if !islower(key)\n\
    \            lower_keys = false\n        end\n        if !isupper(key)\n     \
    \       upper_keys = false\n        end\n    end\n    return lower_keys || upper_keys\n\
    end", "    # check if the dictionary is empty\n    if length(dict) == 0\n    \
    \    return false\n    end\n    # check if all keys are lower case\n    if all(key\
    \ in keys(dict) for key in lowercase(keys(dict)))\n        return true\n    #\
    \ check if all keys are upper case\n    elseif all(key in keys(dict) for key in\
    \ uppercase(keys(dict)))\n        return true\n    else\n        return false\n\
    \    end\nend", "    # TODO: Implement this function\n    return true\nend", " \
    \   # check if the dictionary is empty\n    if length(dict) == 0\n        return\
    \ false\n    end\n    # check if all keys are in lower case\n    if all(lowercase.(collect(keys(dict))))\n\
    \        return true\n    # check if all keys are in upper case\n    elseif all(uppercase.(collect(keys(dict))))\n\
    \        return true\n    else\n        return false\n    end\nend", "    lower_keys\
    \ = 0\n    upper_keys = 0\n    for (key, value) in dict\n        if islower(key)\n\
    \            lower_keys += 1\n        elseif isupper(key)\n            upper_keys\
    \ += 1\n        end\n    end\n    if lower_keys == length(dict) || upper_keys\
    \ == length(dict)\n        return true\n    else\n        return false\n    end\n\
    end", "    return false\nend", "    if length(dict) == 0\n        return false\n\
    \    end\n    if islower(first(keys(dict)))\n        for key in keys(dict)\n \
    \           if !islower(key)\n                return false\n            end\n\
    \        end\n    elseif isupper(first(keys(dict)))\n        for key in keys(dict)\n\
    \            if !isupper(key)\n                return false\n            end\n\
    \        end\n    else\n        return false\n    end\n    return true\nend",
  "    lower_case = true\n    upper_case = true\n    for (key, value) in dict\n  \
    \      if !islower(key)\n            lower_case = false\n        end\n       \
    \ if !isupper(key)\n            upper_case = false\n        end\n    end\n   \
    \ return lower_case || upper_case\nend", "    # check if the dictionary is empty\n\
    \    if length(dict) == 0\n        return false\n    end\n    # check if all keys\
    \ are strings in lower case\n    if all(islower.(collect(keys(dict))))\n     \
    \   return true\n    # check if all keys are strings in upper case\n    elseif\
    \ all(isupper.(collect(keys(dict))))\n        return true\n    else\n        return\
    \ false\n    end\nend", "    # Your code here\nend", "    # Your code here\nend",
  "    if length(dict) == 0\n        return false\n    end\n    if length(dict) ==\
    \ 1\n        return true\n    end\n    if all(isupper.(collect(keys(dict))))\n\
    \        return true\n    elseif all(islower.(collect(keys(dict))))\n        return\
    \ true\n    else\n        return false\n    end\nend", "    # check if the dictionary\
    \ is empty\n    if length(dict) == 0\n        return false\n    end\n    # check\
    \ if all keys are in lower case\n    if all(lowercase.(collect(keys(dict))))\n\
    \        return true\n    # check if all keys are in upper case\n    elseif all(uppercase.(collect(keys(dict))))\n\
    \        return true\n    else\n        return false\n    end\nend", "    # YOUR\
    \ CODE HERE\n    return false\nend", "    # check if the dictionary is empty\n\
    \    if length(dict) == 0\n        return false\n    end\n    # check if all keys\
    \ are strings in lower case\n    if all(isascii(key) && islower(key) for key in\
    \ keys(dict))\n        return true\n    end\n    # check if all keys are strings\
    \ in upper case\n    if all(isascii(key) && isupper(key) for key in keys(dict))\n\
    \        return true\n    end\n    # if none of the above conditions are true,\
    \ return false\n    return false\nend", "    # YOUR CODE HERE\n    return false\n\
    end", "    lower_keys = true\n    upper_keys = true\n    for (key, value) in dict\n\
    \        if !islower(key)\n            lower_keys = false\n        end\n     \
    \   if !isupper(key)\n            upper_keys = false\n        end\n    end\n \
    \   return lower_keys || upper_keys\nend", "    # check if the dictionary is empty\n\
    \    if length(dict) == 0\n        return false\n    end\n    # check if all keys\
    \ are in lower case\n    if all(islower.(keys(dict)))\n        return true\n \
    \   # check if all keys are in upper case\n    elseif all(isupper.(keys(dict)))\n\
    \        return true\n    else\n        return false\n    end\nend", "    # check\
    \ if the dictionary is empty\n    if length(dict) == 0\n        return false\n\
    \    end\n    # check if all keys are in lower case\n    if all(lowercase.(collect(keys(dict))))\n\
    \        return true\n    # check if all keys are in upper case\n    elseif all(uppercase.(collect(keys(dict))))\n\
    \        return true\n    else\n        return false\n    end\nend", "    # YOUR\
    \ CODE HERE\n    return false\nend", "    return all(isupper.(keys(dict))) ||\
    \ all(islower.(keys(dict)))\nend", "    # your code here\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_35_max_element
language: jl
prompt: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
  \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
  \    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
  \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\n\
  end\n"
completions: ["    max = l[1]\n    for i in l\n        if i > max\n            max\
    \ = i\n        end\n    end\n    return max\nend", "    max = l[1]\n    for i\
    \ in l\n        if i > max\n            max = i\n        end\n    end\n    return\
    \ max\nend", "    max = l[1]\n    for i in l\n        if i > max\n           \
    \ max = i\n        end\n    end\n    return max\nend", "    max = l[1]\n    for\
    \ i in l\n        if i > max\n            max = i\n        end\n    end\n    return\
    \ max\nend", "    max = l[1]\n    for i in l\n        if i > max\n           \
    \ max = i\n        end\n    end\n    return max\nend", "    max = l[1]\n    for\
    \ i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n        end\n\
    \    end\n    return max\nend", "    max = l[1]\n    for i in l\n        if i\
    \ > max\n            max = i\n        end\n    end\n    return max\nend", "  \
    \  max = l[1]\n    for i in l\n        if i > max\n            max = i\n     \
    \   end\n    end\n    return max\nend", "    max = l[1]\n    for i in l\n    \
    \    if i > max\n            max = i\n        end\n    end\n    return max\nend",
  "    max = l[1]\n    for i in l\n        if i > max\n            max = i\n     \
    \   end\n    end\n    return max\nend", "    max = l[1]\n    for i in 2:length(l)\n\
    \        if l[i] > max\n            max = l[i]\n        end\n    end\n    return\
    \ max\nend", "    max = l[1]\n    for i in l\n        if i > max\n           \
    \ max = i\n        end\n    end\n    return max\nend", "    max = l[1]\n    for\
    \ i in l\n        if i > max\n            max = i\n        end\n    end\n    return\
    \ max\nend", "    max = l[1]\n    for i in l\n        if i > max\n           \
    \ max = i\n        end\n    end\n    return max\nend", "    max = l[1]\n    for\
    \ i in l\n        if i > max\n            max = i\n        end\n    end\n    return\
    \ max\nend", "    max = l[1]\n    for i in 2:length(l)\n        if l[i] > max\n\
    \            max = l[i]\n        end\n    end\n    return max\nend", "    max\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend", "    max = l[1]\n    for i in 2:length(l)\n\
    \        if l[i] > max\n            max = l[i]\n        end\n    end\n    return\
    \ max\nend", "    max = l[1]\n    for i in l\n        if i > max\n           \
    \ max = i\n        end\n    end\n    return max\nend", "    max = l[1]\n    for\
    \ i in l\n        if i > max\n            max = i\n        end\n    end\n    return\
    \ max\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

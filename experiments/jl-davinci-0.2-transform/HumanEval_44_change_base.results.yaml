language: jl
name: HumanEval_44_change_base
results:
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    result\
    \ = \"\"\n    while x > 0\n        result = string(x % base) * result\n      \
    \  x = x \xF7 base\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    result\
    \ = \"\"\n    while x > 0\n        result = string(x % base) * result\n      \
    \  x = x \xF7 base\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x > 0\n        result =\
    \ string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x > 0\n        result =\
    \ string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        return change_base(x \xF7 base, base) * string(x % base)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    result\
    \ = \"\"\n    while x > 0\n        result = string(x % base) * result\n      \
    \  x = x \xF7 base\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    remainder = 0\n    result = \"\"\
    \n    while quotient != 0\n        remainder = quotient % base\n        quotient\
    \ = quotient \xF7 base\n        result = string(remainder) * result\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        return change_base(x \xF7 base, base) * string(x % base)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    remainder = 0\n    result = \"\"\
    \n    while quotient != 0\n        remainder = quotient % base\n        quotient\
    \ = quotient \xF7 base\n        result = string(remainder) * result\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    result\
    \ = \"\"\n    while x > 0\n        result = string(x % base) * result\n      \
    \  x = x // base\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp7z9sbuyv.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp7z9sbuyv.jl:27\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp7z9sbuyv.jl:17\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp7z9sbuyv.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp7z9sbuyv.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp7z9sbuyv.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp7z9sbuyv.jl:17\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp7z9sbuyv.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp7z9sbuyv.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp7z9sbuyv.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4"
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if base > 10\n        throw(ArgumentError(\"base\
    \ must be less than 10\"))\n    end\n    if x < 0\n        throw(ArgumentError(\"\
    x must be positive\"))\n    end\n    if x == 0\n        return \"0\"\n    end\n\
    \    result = \"\"\n    while x != 0\n        result = string(x % base) * result\n\
    \        x = x \xF7 base\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x > 0\n        result =\
    \ string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    remainder = 0\n    result = \"\"\
    \n    while quotient > 0\n        remainder = quotient % base\n        quotient\
    \ = quotient \xF7 base\n        result = string(remainder) * result\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    remainder = 0\n    result = \"\"\
    \n    while quotient > 0\n        remainder = quotient % base\n        quotient\
    \ = quotient \xF7 base\n        result = string(remainder) * result\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    remainder = 0\n    result = \"\"\
    \n    while quotient != 0\n        remainder = quotient % base\n        quotient\
    \ = quotient \xF7 base\n        result = string(remainder) * result\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    result\
    \ = \"\"\n    while x > 0\n        result = string(x % base) * result\n      \
    \  x = x \xF7 base\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    result\
    \ = \"\"\n    while x > 0\n        result = string(x % base) * result\n      \
    \  x = x \xF7 base\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    remainder = 0\n    result = \"\"\
    \n    while quotient != 0\n        remainder = quotient % base\n        quotient\
    \ = quotient \xF7 base\n        result = string(remainder) * result\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        return change_base(div(x, base), base) * string(mod(x, base))\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    result\
    \ = \"\"\n    while x > 0\n        result = string(x % base) * result\n      \
    \  x = x \xF7 base\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''

name: HumanEval_101_words_string
language: jl
prompt: "\"\"\"\n    You will be given a string of words separated by commas or spaces.\
  \ Your task is\n    to split the string into words and return an array of the words.\n\
  \    \n    For example:\n    >>> words_string(\"Hi, my name is John\")\n    [\"\
  Hi\", \"my\", \"name\", \"is\", \"John\"]\n    >>> words_string(\"One, two, three,\
  \ four, five, six\")\n    [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
  ]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n"
tests: "using Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
  Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
  One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"\
  five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"\
  ])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
  , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
  \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
completions: ["    return split(s, r\"[\\s,]+\")\nend", "    return split(s, r\"[\\\
    s,]+\")\nend", "    return split(s, r\"[, ]+\")\nend", "    return split(s, \"\
    \ \")\nend", "    return split(s)\nend", "    return split(s, r\"[\\s,]+\")\n\
    end", "    return split(s, r\"[, ]\")\nend", "    return split(s, r\"[\\s,]+\"\
    )\nend", "    return split(s, r\"[\\s,]+\")\nend", "    return split(s, r\"[,\
    \ ]+\")\nend", "    return split(s, r\"[, ]+\")\nend", "    return split(s, r\"\
    [\\s,]+\")\nend", "    return split(s, r\"[\\s,]+\")\nend", "    return split(s,\
    \ r\"[\\s,]+\")\nend", "    return split(s, r\"[\\s,]+\")\nend", "    return split(s,\
    \ r\"[\\s,]+\")\nend", "    return split(s, r\"[\\s,]+\")\nend", "    return split(s,\
    \ r\"[\\s,]+\")\nend", "    return split(s, r\"[\\s,]+\")\nend", "    return split(s,\
    \ r\"[, ]+\")\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

language: jl
name: HumanEval_31_is_prime
results:
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64,sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2 \n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:sqrt(n)\n        if n % i == 0\n          \
    \  return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64,sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    for i in 2:n-1\n        if n\
    \ % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64,sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64,sqrt(n))\n        if n % i == 0\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64,sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    if n <= 3\n        return true\n    end\n    if n % 2 == 0 || n % 3 == 0\n\
    \        return false\n    end\n    i = 5\n    while i * i <= n\n        if n\
    \ % i == 0 || n % (i + 2) == 0\n            return false\n        end\n      \
    \  i += 6\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:round(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i = 3:2:floor(sqrt(n))\n        if n % i == 0\n    \
    \        return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    for i in 2:n-1\n        if n\
    \ % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i = 2:n-1\n        if n % i == 0\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2 return false end\n    for i =\
    \ 2:floor(Int64, sqrt(n))\n        if n % i == 0 return false end\n    end\n \
    \   return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t\
    @test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:Int(sqrt(n))\n        if n % i == 0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 11 errored,
    0 broken.

    in expression starting at /tmp/tmpi6gz3h1_.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpi6gz3h1_.jl:33\n  Test threw exception\n\
    \  Expression: candidate(6) == false\n  InexactError: Int64(2.449489742783178)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_prime(n::Int64)\n\
    \     @ Main /tmp/tmpi6gz3h1_.jl:21\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpi6gz3h1_.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpi6gz3h1_.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpi6gz3h1_.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(101) == true\n  InexactError: Int64(10.04987562112089)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_prime(n::Int64)\n  \
    \   @ Main /tmp/tmpi6gz3h1_.jl:21\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpi6gz3h1_.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpi6gz3h1_.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpi6gz3h1_.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(11) == true\n  InexactError: Int64(3.3166247903554)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_prime(n::Int64)\n  \
    \   @ Main /tmp/tmpi6gz3h1_.jl:21\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpi6gz3h1_.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpi6gz3h1_.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpi6gz3h1_.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(13441) == true\n  InexactError: Int64(115.93532679903913)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_p"
  timestamp: 1659792790
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    if n <= 3\n        return true\n    end\n    if n % 2 == 0 || n % 3 == 0\n\
    \        return false\n    end\n    i = 5\n    while i*i <= n\n        if n %\
    \ i == 0 || n % (i + 2) == 0\n            return false\n        end\n        i\
    \ += 6\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2 \n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    if n <= 3\n        return true\n    end\n    if n % 2 == 0 || n % 3 == 0\n\
    \        return false\n    end\n    i = 5\n    while i * i <= n\n        if n\
    \ % i == 0 || n % (i + 2) == 0\n            return false\n        end\n      \
    \  i += 6\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    if n <= 3\n        return true\n    end\n    if n % 2 == 0 || n % 3 == 0\n\
    \        return false\n    end\n    i = 5\n    while i*i <= n\n        if n %\
    \ i == 0 || n % (i + 2) == 0\n            return false\n        end\n        i\
    \ += 6\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64,sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i = 3:2:floor(sqrt(n))\n\
    \            if n % i == 0\n                return false\n            end\n  \
    \      end\n        return true\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64,sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64,sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64,sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    if n <= 3\n        return true\n    end\n    if n % 2 == 0 || n % 3 == 0\n\
    \        return false\n    end\n    i = 5\n    while i * i <= n\n        if n\
    \ % i == 0 || n % (i + 2) == 0\n            return false\n        end\n      \
    \  i += 6\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
  timestamp: 1659792788
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
    \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n\
    \    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   13     13

    '
  stdout: ''

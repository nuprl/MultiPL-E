name: HumanEval_85_add
language: jl
prompt: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
  \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n  \
  \  \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
  \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
  \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
completions: ["    sum = 0\n    for i in 1:2:length(lst)\n        sum += lst[i]\n\
    \    end\n    return sum\nend", "    sum = 0\n    for i in 1:2:length(lst)\n \
    \       sum += lst[i]\n    end\n    return sum\nend", "    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            sum += lst[i]\n       \
    \ end\n    end\n    return sum\nend", "    sum = 0\n    for i in 1:length(lst)\n\
    \        if i % 2 != 0 && lst[i] % 2 == 0\n            sum += lst[i]\n       \
    \ end\n    end\n    return sum\nend", "    sum = 0\n    for i in 1:2:length(lst)\n\
    \        sum += lst[i]\n    end\n    return sum\nend", "    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend", " \
    \   sum = 0\n    for i in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 ==\
    \ 0\n            sum += lst[i]\n        end\n    end\n    return sum\nend", " \
    \   sum = 0\n    for i in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 ==\
    \ 0\n            sum += lst[i]\n        end\n    end\n    return sum\nend", " \
    \   sum = 0\n    for i in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 ==\
    \ 0\n            sum += lst[i]\n        end\n    end\n    return sum\nend", " \
    \   sum = 0\n    for i in 1:2:length(lst)\n        sum += lst[i]\n    end\n  \
    \  return sum\nend", "    sum = 0\n    for i in 1:2:length(lst)\n        sum +=\
    \ lst[i]\n    end\n    return sum\nend", "    sum = 0\n    for i in 1:2:length(lst)\n\
    \        sum += lst[i]\n    end\n    return sum\nend", "    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend", " \
    \   sum = 0\n    for i in 1:2:length(lst)\n        sum += lst[i]\n    end\n  \
    \  return sum\nend", "    sum = 0\n    for i in 1:length(lst)\n        if i %\
    \ 2 != 0 && lst[i] % 2 == 0\n            sum += lst[i]\n        end\n    end\n\
    \    return sum\nend", "    return sum(lst[2:2:end])\nend", "    sum = 0\n   \
    \ for i in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n         \
    \   sum += lst[i]\n        end\n    end\n    return sum\nend", "    sum = 0\n\
    \    for i in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\n\
    end", "    sum = 0\n    for i in 1:length(lst)\n        if i % 2 != 0 && lst[i]\
    \ % 2 == 0\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end", "    sum = 0\n    for i in 1:2:length(lst)\n        sum += lst[i]\n    end\n\
    \    return sum\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

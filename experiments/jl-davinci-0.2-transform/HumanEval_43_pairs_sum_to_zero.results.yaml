language: jl
name: HumanEval_43_pairs_sum_to_zero
results:
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    # check if the length of the list is less than 2\n    if length(l) < 2\n\
    \        return false\n    end\n    # sort the list\n    sort!(l)\n    # initialize\
    \ the left and right pointers\n    left = 1\n    right = length(l)\n    # loop\
    \ through the list\n    while left < right\n        # check if the sum of the\
    \ left and right pointers is zero\n        if l[left] + l[right] == 0\n      \
    \      return true\n        # if the sum is less than zero, increment the left\
    \ pointer\n        elseif l[left] + l[right] < 0\n            left += 1\n    \
    \    # if the sum is greater than zero, decrement the right pointer\n        else\n\
    \            right -= 1\n        end\n    end\n    # if the left pointer is greater\
    \ than the right pointer, return false\n    return false\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    # if the length of the list is less than 2, return false\n    if length(l)\
    \ < 2\n        return false\n    end\n    # sort the list\n    sorted_l = sort(l)\n\
    \    # if the first element is greater than 0, return false\n    if sorted_l[1]\
    \ > 0\n        return false\n    end\n    # if the last element is less than 0,\
    \ return false\n    if sorted_l[end] < 0\n        return false\n    end\n    #\
    \ if the first element is 0, return true\n    if sorted_l[1] == 0\n        return\
    \ true\n    end\n    # if the last element is 0, return true\n    if sorted_l[end]\
    \ == 0\n        return true\n    end\n    # if the first element is less than\
    \ 0, and the last element is greater than 0, return true\n    if sorted_l[1] <\
    \ 0 && sorted_l[end] > 0\n        return true\n    end\n    # otherwise, return\
    \ false\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfr2e02zn.jl:48

    '
  stdout: "test set: Test Failed at /tmp/tmpfr2e02zn.jl:51\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfr2e02zn.jl:51 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfr2e02zn.jl:50\ntest set: Test Failed at /tmp/tmpfr2e02zn.jl:52\n\
    \  Expression: candidate([1, 3, -2, 1]) == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfr2e02zn.jl:52 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfr2e02zn.jl:50\ntest set: Test\
    \ Failed at /tmp/tmpfr2e02zn.jl:58\n  Expression: candidate([-3, 9, -1, 4, 2,\
    \ 30]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfr2e02zn.jl:58 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfr2e02zn.jl:50\ntest set: Test Failed at /tmp/tmpfr2e02zn.jl:59\n\
    \  Expression: candidate([-3, 9, -1, 4, 2, 31]) == false\n   Evaluated: true ==\
    \ false\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfr2e02zn.jl:59 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfr2e02zn.jl:50\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659799332
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0ltmvw54.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp0ltmvw54.jl:31\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0ltmvw54.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0ltmvw54.jl:30\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     1      9\n"
  timestamp: 1659799332
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    # YOUR CODE HERE\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpi975ff9g.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpi975ff9g.jl:28\n  Expression: candidate([2,\
    \ 4, -5, 3, 5, 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi975ff9g.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi975ff9g.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpi975ff9g.jl:30\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 30]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpi975ff9g.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpi975ff9g.jl:24\ntest set: Test Failed at /tmp/tmpi975ff9g.jl:31\n\
    \  Expression: candidate([-3, 9, -1, 3, 2, 31]) == true\n   Evaluated: false ==\
    \ true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi975ff9g.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi975ff9g.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
  timestamp: 1659799332
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    n = length(l)\n    for i in 1:n\n        for j in i+1:n\n            if\
    \ l[i] + l[j] == 0\n                return true\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659799330
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    # YOUR CODE HERE\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpi975ff9g.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpi975ff9g.jl:28\n  Expression: candidate([2,\
    \ 4, -5, 3, 5, 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi975ff9g.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi975ff9g.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpi975ff9g.jl:30\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 30]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpi975ff9g.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpi975ff9g.jl:24\ntest set: Test Failed at /tmp/tmpi975ff9g.jl:31\n\
    \  Expression: candidate([-3, 9, -1, 3, 2, 31]) == true\n   Evaluated: false ==\
    \ true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi975ff9g.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi975ff9g.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
  timestamp: 1659799332
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    n = length(l)\n    for i in 1:n\n        for j in 1:n\n            if\
    \ i != j && l[i] + l[j] == 0\n                return true\n            end\n \
    \       end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659799330
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    if length(l) < 2\n        return false\n    end\n    for i in 1:length(l)\n\
    \        for j in 1:length(l)\n            if i != j\n                if l[i]\
    \ + l[j] == 0\n                    return true\n                end\n        \
    \    end\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659799330
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    # check if the list is empty\n    if length(l) == 0\n        return false\n\
    \    end\n    # check if the list has only one element\n    if length(l) == 1\n\
    \        return false\n    end\n    # check if the list has two elements\n   \
    \ if length(l) == 2\n        if l[1] + l[2] == 0\n            return true\n  \
    \      else\n            return false\n        end\n    end\n    # check if the\
    \ list has more than two elements\n    if length(l) > 2\n        # check if the\
    \ first element is zero\n        if l[1] == 0\n            # check if the second\
    \ element is zero\n            if l[2] == 0\n                return true\n   \
    \         else\n                return pairs_sum_to_zero(l[2:end])\n         \
    \   end\n        else\n            # check if the second element is zero\n   \
    \         if l[2] == 0\n                return pairs_sum_to_zero(l[1:end-1])\n\
    \            else\n                # check if the sum of the first two elements\
    \ is zero\n                if l[1] + l[2] == 0\n                    return true\n\
    \                else\n                    return pairs_sum_to_zero(l[1:end-1])\
    \ || pairs_sum_to_zero(l[2:end])\n                end\n            end\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg3yr7026.jl:60

    '
  stdout: "test set: Test Failed at /tmp/tmpg3yr7026.jl:66\n  Expression: candidate([2,\
    \ 4, -5, 3, 5, 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3yr7026.jl:66 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3yr7026.jl:62\ntest set: Test\
    \ Failed at /tmp/tmpg3yr7026.jl:68\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 30]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpg3yr7026.jl:68 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpg3yr7026.jl:62\ntest set: Test Failed at /tmp/tmpg3yr7026.jl:69\n\
    \  Expression: candidate([-3, 9, -1, 3, 2, 31]) == true\n   Evaluated: false ==\
    \ true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3yr7026.jl:69 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3yr7026.jl:62\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
  timestamp: 1659799332
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    if length(l) < 2\n        return false\n    end\n    for i in 1:length(l)\n\
    \        for j in i+1:length(l)\n            if l[i] + l[j] == 0\n           \
    \     return true\n            end\n        end\n    end\n    return false\nend\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659799330
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if (l[i]\
    \ + l[j] == 0) && (i != j)\n                return true\n            end\n   \
    \     end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659799330
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp5f2z5mw3.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp5f2z5mw3.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] pairs_sum_to_zero(l::Vector{Int64})\n     @ Main\
    \ /tmp/tmp5f2z5mw3.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5f2z5mw3.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5f2z5mw3.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp5f2z5mw3.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, -2, 1]) == false\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] pairs_sum_to_zero(l::Vector{Int64})\n     @ Main\
    \ /tmp/tmp5f2z5mw3.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5f2z5mw3.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5f2z5mw3.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp5f2z5mw3.jl:"
  timestamp: 1659799334
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    if length(l) == 1\n        return false\n    end\n    for i in 1:length(l)\n\
    \        for j in 1:length(l)\n            if i != j && l[i] + l[j] == 0\n   \
    \             return true\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659799330
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0ltmvw54.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp0ltmvw54.jl:31\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0ltmvw54.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0ltmvw54.jl:30\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     1      9\n"
  timestamp: 1659799332
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if (i\
    \ != j) && (l[i] + l[j] == 0)\n                return true\n            end\n\
    \        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659799330
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    # your code here\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpil3lhvtc.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpil3lhvtc.jl:28\n  Expression: candidate([2,\
    \ 4, -5, 3, 5, 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil3lhvtc.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil3lhvtc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpil3lhvtc.jl:30\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 30]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpil3lhvtc.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpil3lhvtc.jl:24\ntest set: Test Failed at /tmp/tmpil3lhvtc.jl:31\n\
    \  Expression: candidate([-3, 9, -1, 3, 2, 31]) == true\n   Evaluated: false ==\
    \ true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil3lhvtc.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil3lhvtc.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
  timestamp: 1659799332
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    # YOUR CODE HERE\n    for i in 1:length(l)\n        for j in 1:length(l)\n\
    \            if i != j\n                if l[i] + l[j] == 0\n                \
    \    return true\n                end\n            end\n        end\n    end\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659799330
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if (l[i]\
    \ + l[j] == 0) && (i != j)\n                return true\n            end\n   \
    \     end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659799330
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    if length(l) == 1\n        return false\n    end\n    for i in 1:length(l)\n\
    \        for j in i+1:length(l)\n            if l[i] + l[j] == 0\n           \
    \     return true\n            end\n        end\n    end\n    return false\nend\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659799330
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    # Check if there are two distinct elements in the list that sum to zero\n\
    \    for i in 1:length(l)\n        for j in 1:length(l)\n            if i != j\
    \ && l[i] + l[j] == 0\n                return true\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659799330
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    # YOUR CODE HERE\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpi975ff9g.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpi975ff9g.jl:28\n  Expression: candidate([2,\
    \ 4, -5, 3, 5, 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi975ff9g.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi975ff9g.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpi975ff9g.jl:30\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 30]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpi975ff9g.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpi975ff9g.jl:24\ntest set: Test Failed at /tmp/tmpi975ff9g.jl:31\n\
    \  Expression: candidate([-3, 9, -1, 3, 2, 31]) == true\n   Evaluated: false ==\
    \ true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi975ff9g.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi975ff9g.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
  timestamp: 1659799332
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if (i\
    \ != j) && (l[i] + l[j] == 0)\n                return true\n            end\n\
    \        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659799330
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''

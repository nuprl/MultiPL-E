language: jl
name: HumanEval_43_pairs_sum_to_zero
results:
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    # check if the length of the list is less than 2\n    if length(l) < 2\n\
    \        return false\n    end\n    # sort the list\n    sort!(l)\n    # initialize\
    \ the left and right pointers\n    left = 1\n    right = length(l)\n    # loop\
    \ through the list\n    while left < right\n        # check if the sum of the\
    \ left and right pointers is zero\n        if l[left] + l[right] == 0\n      \
    \      return true\n        # if the sum is less than zero, increment the left\
    \ pointer\n        elseif l[left] + l[right] < 0\n            left += 1\n    \
    \    # if the sum is greater than zero, decrement the right pointer\n        else\n\
    \            right -= 1\n        end\n    end\n    # if the left pointer is greater\
    \ than the right pointer, return false\n    return false\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''

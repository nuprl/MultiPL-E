name: HumanEval_21_rescale_to_unit
language: jl
prompt: "\"\"\" Given list of numbers (of at least two elements), apply a linear transform\
  \ to that list,\n    such that the smallest number will become 0 and the largest\
  \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25,\
  \ 0.5, 0.75, 1.0]\n    \"\"\"\nfunction rescale_to_unit(numbers::Vector{Float64})::Vector{Float64}\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = rescale_to_unit;\n\t@test(candidate([2.0,\
  \ 49.9]) == [0.0, 1.0])\n\t@test(candidate([100.0, 49.9]) == [1.0, 0.0])\n\t@test(candidate([1.0,\
  \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0])\n\t@test(candidate([2.0,\
  \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75])\n\t@test(candidate([12.0,\
  \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75])\nend\n"
completions: ["    min_number = minimum(numbers)\n    max_number = maximum(numbers)\n\
    \    return (numbers .- min_number) ./ (max_number - min_number)\nend", "    min_number\
    \ = minimum(numbers)\n    max_number = maximum(numbers)\n    return (numbers .-\
    \ min_number) ./ (max_number - min_number)\nend", "    min_value = minimum(numbers)\n\
    \    max_value = maximum(numbers)\n    return (numbers .- min_value) ./ (max_value\
    \ - min_value)\nend", "    min_value = minimum(numbers)\n    max_value = maximum(numbers)\n\
    \    return (numbers .- min_value) ./ (max_value - min_value)\nend", "    min_val\
    \ = minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_value = minimum(numbers)\n    max_value\
    \ = maximum(numbers)\n    return (numbers .- min_value) ./ (max_value - min_value)\n\
    end", "    min_number = minimum(numbers)\n    max_number = maximum(numbers)\n\
    \    return (numbers .- min_number) ./ (max_number - min_number)\nend", "    min_value\
    \ = minimum(numbers)\n    max_value = maximum(numbers)\n    return (numbers .-\
    \ min_value) ./ (max_value - min_value)\nend", "    min_val = minimum(numbers)\n\
    \    max_val = maximum(numbers)\n    return (numbers .- min_val) ./ (max_val -\
    \ min_val)\nend", "    min_value = minimum(numbers)\n    max_value = maximum(numbers)\n\
    \    return (numbers .- min_value) ./ (max_value - min_value)\nend", "    min_number\
    \ = minimum(numbers)\n    max_number = maximum(numbers)\n    return (numbers .-\
    \ min_number) ./ (max_number - min_number)\nend", "    min_value = minimum(numbers)\n\
    \    max_value = maximum(numbers)\n    return (numbers .- min_value) ./ (max_value\
    \ - min_value)\nend", "    min_value = minimum(numbers)\n    max_value = maximum(numbers)\n\
    \    return (numbers .- min_value) ./ (max_value - min_value)\nend", "    min_val\
    \ = minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_value = minimum(numbers)\n    max_value\
    \ = maximum(numbers)\n    return (numbers .- min_value) ./ (max_value - min_value)\n\
    end", "    min_number = minimum(numbers)\n    max_number = maximum(numbers)\n\
    \    return (numbers .- min_number) ./ (max_number - min_number)\nend", "    min_value\
    \ = minimum(numbers)\n    max_value = maximum(numbers)\n    return (numbers .-\
    \ min_value) ./ (max_value - min_value)\nend", "    min_val = minimum(numbers)\n\
    \    max_val = maximum(numbers)\n    return (numbers .- min_val) ./ (max_val -\
    \ min_val)\nend", "    min_number = minimum(numbers)\n    max_number = maximum(numbers)\n\
    \    return (numbers .- min_number) ./ (max_number - min_number)\nend", "    min_number\
    \ = minimum(numbers)\n    max_number = maximum(numbers)\n    return (numbers .-\
    \ min_number) ./ (max_number - min_number)\nend", "    min_val = minimum(numbers)\n\
    \    max_val = maximum(numbers)\n    return (numbers .- min_val) ./ (max_val -\
    \ min_val)\nend", "    min_value = minimum(numbers)\n    max_value = maximum(numbers)\n\
    \    return (numbers .- min_value) ./ (max_value - min_value)\nend", "    min_number\
    \ = minimum(numbers)\n    max_number = maximum(numbers)\n    return (numbers .-\
    \ min_number) ./ (max_number - min_number)\nend", "    min_value = minimum(numbers)\n\
    \    max_value = maximum(numbers)\n    return (numbers .- min_value) ./ (max_value\
    \ - min_value)\nend", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n\
    \    return (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_value\
    \ = minimum(numbers)\n    max_value = maximum(numbers)\n    return (numbers .-\
    \ min_value) ./ (max_value - min_value)\nend", "    min_val = minimum(numbers)\n\
    \    max_val = maximum(numbers)\n    return (numbers .- min_val) ./ (max_val -\
    \ min_val)\nend", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n\
    \    return (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_n = minimum(numbers)\n\
    \    max_n = maximum(numbers)\n    return (numbers .- min_n) ./ (max_n - min_n)\n\
    end", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n    return\
    \ (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_val = minimum(numbers)\n\
    \    max_val = maximum(numbers)\n    return (numbers .- min_val) ./ (max_val -\
    \ min_val)\nend", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n\
    \    return (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_number\
    \ = minimum(numbers)\n    max_number = maximum(numbers)\n    return (numbers .-\
    \ min_number) ./ (max_number - min_number)\nend", "    min_number = minimum(numbers)\n\
    \    max_number = maximum(numbers)\n    return (numbers .- min_number) ./ (max_number\
    \ - min_number)\nend", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n\
    \    return (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_val =\
    \ minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_val = minimum(numbers)\n    max_val =\
    \ maximum(numbers)\n    return (numbers .- min_val) ./ (max_val - min_val)\nend",
  "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers\
    \ .- min_val) ./ (max_val - min_val)\nend", "    min_value = minimum(numbers)\n\
    \    max_value = maximum(numbers)\n    return (numbers .- min_value) ./ (max_value\
    \ - min_value)\nend", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n\
    \    return (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_val =\
    \ minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_number = minimum(numbers)\n    max_number\
    \ = maximum(numbers)\n    return (numbers .- min_number) ./ (max_number - min_number)\n\
    end", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n    return\
    \ (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_number = minimum(numbers)\n\
    \    max_number = maximum(numbers)\n    return (numbers .- min_number) ./ (max_number\
    \ - min_number)\nend", "    min_number = minimum(numbers)\n    max_number = maximum(numbers)\n\
    \    return (numbers .- min_number) ./ (max_number - min_number)\nend", "    min_val\
    \ = minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_val = minimum(numbers)\n    max_val =\
    \ maximum(numbers)\n    return (numbers .- min_val) ./ (max_val - min_val)\nend",
  "    min_number = minimum(numbers)\n    max_number = maximum(numbers)\n    return\
    \ (numbers .- min_number) ./ (max_number - min_number)\nend", "    min_val = minimum(numbers)\n\
    \    max_val = maximum(numbers)\n    return (numbers .- min_val) ./ (max_val -\
    \ min_val)\nend", "    min_number = minimum(numbers)\n    max_number = maximum(numbers)\n\
    \    return (numbers .- min_number) ./ (max_number - min_number)\nend", "    min_val\
    \ = minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_number = minimum(numbers)\n    max_number\
    \ = maximum(numbers)\n    return (numbers .- min_number) ./ (max_number - min_number)\n\
    end", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n    return\
    \ (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_val = minimum(numbers)\n\
    \    max_val = maximum(numbers)\n    return (numbers .- min_val) ./ (max_val -\
    \ min_val)\nend", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n\
    \    return (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_val =\
    \ minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_value = minimum(numbers)\n    max_value\
    \ = maximum(numbers)\n    return (numbers .- min_value) ./ (max_value - min_value)\n\
    end", "    minimum = minimum(numbers)\n    maximum = maximum(numbers)\n    return\
    \ (numbers .- minimum) ./ (maximum - minimum)\nend", "    min_number = minimum(numbers)\n\
    \    max_number = maximum(numbers)\n    return (numbers .- min_number) ./ (max_number\
    \ - min_number)\nend", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n\
    \    return (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_val =\
    \ minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_value = minimum(numbers)\n    max_value\
    \ = maximum(numbers)\n    return (numbers .- min_value) ./ (max_value - min_value)\n\
    end", "    min_value = minimum(numbers)\n    max_value = maximum(numbers)\n  \
    \  return (numbers .- min_value) ./ (max_value - min_value)\nend", "    min_val\
    \ = minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_val = minimum(numbers)\n    max_val =\
    \ maximum(numbers)\n    return (numbers .- min_val) ./ (max_val - min_val)\nend",
  "    min_number = minimum(numbers)\n    max_number = maximum(numbers)\n    return\
    \ (numbers .- min_number) ./ (max_number - min_number)\nend", "    min_val = minimum(numbers)\n\
    \    max_val = maximum(numbers)\n    return (numbers .- min_val) ./ (max_val -\
    \ min_val)\nend", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n\
    \    return (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_number\
    \ = minimum(numbers)\n    max_number = maximum(numbers)\n    return (numbers .-\
    \ min_number) ./ (max_number - min_number)\nend", "    min_value = minimum(numbers)\n\
    \    max_value = maximum(numbers)\n    return (numbers .- min_value) ./ (max_value\
    \ - min_value)\nend", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n\
    \    return (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_val =\
    \ minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_val = minimum(numbers)\n    max_val =\
    \ maximum(numbers)\n    return (numbers .- min_val) ./ (max_val - min_val)\nend",
  "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers\
    \ .- min_val) ./ (max_val - min_val)\nend", "    min_number = minimum(numbers)\n\
    \    max_number = maximum(numbers)\n    return (numbers .- min_number) ./ (max_number\
    \ - min_number)\nend", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n\
    \    return (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_val =\
    \ minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_number = minimum(numbers)\n    max_number\
    \ = maximum(numbers)\n    return (numbers .- min_number) ./ (max_number - min_number)\n\
    end", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n    return\
    \ (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_val = minimum(numbers)\n\
    \    max_val = maximum(numbers)\n    return (numbers .- min_val) ./ (max_val -\
    \ min_val)\nend", "    min_number = minimum(numbers)\n    max_number = maximum(numbers)\n\
    \    return (numbers .- min_number) ./ (max_number - min_number)\nend", "    min_val\
    \ = minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_val = minimum(numbers)\n    max_val =\
    \ maximum(numbers)\n    return (numbers .- min_val) ./ (max_val - min_val)\nend",
  "    min_number = minimum(numbers)\n    max_number = maximum(numbers)\n    return\
    \ (numbers .- min_number) ./ (max_number - min_number)\nend", "    min_number\
    \ = minimum(numbers)\n    max_number = maximum(numbers)\n    return (numbers .-\
    \ min_number) ./ (max_number - min_number)\nend", "    min_val = minimum(numbers)\n\
    \    max_val = maximum(numbers)\n    return (numbers .- min_val) ./ (max_val -\
    \ min_val)\nend", "    minimum = minimum(numbers)\n    maximum = maximum(numbers)\n\
    \    return (numbers .- minimum) ./ (maximum - minimum)\nend", "    min_val =\
    \ minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_number = minimum(numbers)\n    max_number\
    \ = maximum(numbers)\n    return (numbers .- min_number) ./ (max_number - min_number)\n\
    end", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n    return\
    \ (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_value = minimum(numbers)\n\
    \    max_value = maximum(numbers)\n    return (numbers .- min_value) ./ (max_value\
    \ - min_value)\nend", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n\
    \    return (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_val =\
    \ minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_value = minimum(numbers)\n    max_value\
    \ = maximum(numbers)\n    return (numbers .- min_value) ./ (max_value - min_value)\n\
    end", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n    return\
    \ (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_number = minimum(numbers)\n\
    \    max_number = maximum(numbers)\n    return (numbers .- min_number) ./ (max_number\
    \ - min_number)\nend", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n\
    \    return (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_val =\
    \ minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_n = minimum(numbers)\n    max_n = maximum(numbers)\n\
    \    return (numbers .- min_n) ./ (max_n - min_n)\nend", "    min_number = minimum(numbers)\n\
    \    max_number = maximum(numbers)\n    return (numbers .- min_number) ./ (max_number\
    \ - min_number)\nend", "    min_value = minimum(numbers)\n    max_value = maximum(numbers)\n\
    \    return (numbers .- min_value) ./ (max_value - min_value)\nend", "    min_number\
    \ = minimum(numbers)\n    max_number = maximum(numbers)\n    return (numbers .-\
    \ min_number) ./ (max_number - min_number)\nend", "    min_val = minimum(numbers)\n\
    \    max_val = maximum(numbers)\n    return (numbers .- min_val) ./ (max_val -\
    \ min_val)\nend", "    min_value = minimum(numbers)\n    max_value = maximum(numbers)\n\
    \    return (numbers .- min_value) ./ (max_value - min_value)\nend", "    min_number\
    \ = minimum(numbers)\n    max_number = maximum(numbers)\n    return (numbers .-\
    \ min_number) ./ (max_number - min_number)\nend", "    min_number = minimum(numbers)\n\
    \    max_number = maximum(numbers)\n    return (numbers .- min_number) ./ (max_number\
    \ - min_number)\nend", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n\
    \    return (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_val =\
    \ minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_val = minimum(numbers)\n    max_val =\
    \ maximum(numbers)\n    return (numbers .- min_val) ./ (max_val - min_val)\nend",
  "    min_value = minimum(numbers)\n    max_value = maximum(numbers)\n    return\
    \ (numbers .- min_value) ./ (max_value - min_value)\nend", "    min_number = minimum(numbers)\n\
    \    max_number = maximum(numbers)\n    return (numbers .- min_number) ./ (max_number\
    \ - min_number)\nend", "    min_number = minimum(numbers)\n    max_number = maximum(numbers)\n\
    \    return (numbers .- min_number) ./ (max_number - min_number)\nend", "    min_number\
    \ = minimum(numbers)\n    max_number = maximum(numbers)\n    return (numbers .-\
    \ min_number) ./ (max_number - min_number)\nend", "    min_val = minimum(numbers)\n\
    \    max_val = maximum(numbers)\n    return (numbers .- min_val) ./ (max_val -\
    \ min_val)\nend", "    min_number = minimum(numbers)\n    max_number = maximum(numbers)\n\
    \    return (numbers .- min_number) ./ (max_number - min_number)\nend", "    min_number\
    \ = minimum(numbers)\n    max_number = maximum(numbers)\n    return (numbers -\
    \ min_number) / (max_number - min_number)\nend", "    min_val = minimum(numbers)\n\
    \    max_val = maximum(numbers)\n    return (numbers .- min_val) ./ (max_val -\
    \ min_val)\nend", "    min_number = minimum(numbers)\n    max_number = maximum(numbers)\n\
    \    return (numbers .- min_number) ./ (max_number - min_number)\nend", "    min_val\
    \ = minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_number = minimum(numbers)\n    max_number\
    \ = maximum(numbers)\n    return (numbers .- min_number) ./ (max_number - min_number)\n\
    end", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n    return\
    \ (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_number = minimum(numbers)\n\
    \    max_number = maximum(numbers)\n    return (numbers .- min_number) ./ (max_number\
    \ - min_number)\nend", "    min_number = minimum(numbers)\n    max_number = maximum(numbers)\n\
    \    return (numbers .- min_number) ./ (max_number - min_number)\nend", "    min_value\
    \ = minimum(numbers)\n    max_value = maximum(numbers)\n    return (numbers .-\
    \ min_value) ./ (max_value - min_value)\nend", "    min_val = minimum(numbers)\n\
    \    max_val = maximum(numbers)\n    return (numbers .- min_val) ./ (max_val -\
    \ min_val)\nend", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n\
    \    return (numbers .- min_val) ./ (max_val - min_val)\nend", "    min_value\
    \ = minimum(numbers)\n    max_value = maximum(numbers)\n    return (numbers .-\
    \ min_value) ./ (max_value - min_value)\nend", "    min_value = minimum(numbers)\n\
    \    max_value = maximum(numbers)\n    return (numbers .- min_value) ./ (max_value\
    \ - min_value)\nend", "    min_value = minimum(numbers)\n    max_value = maximum(numbers)\n\
    \    return (numbers .- min_value) ./ (max_value - min_value)\nend", "    min_val\
    \ = minimum(numbers)\n    max_val = maximum(numbers)\n    return (numbers .- min_val)\
    \ ./ (max_val - min_val)\nend", "    min_number = minimum(numbers)\n    max_number\
    \ = maximum(numbers)\n    return (numbers .- min_number) ./ (max_number - min_number)\n\
    end", "    min_val = minimum(numbers)\n    max_val = maximum(numbers)\n    return\
    \ (numbers .- min_val) ./ (max_val - min_val)\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_118_get_closest_vowel
language: jl
prompt: "\"\"\"You are given a word. Your task is to find the closest vowel that stands\
  \ between \n    two consonants from the right side of the word (case sensitive).\n\
  \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
  \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
  \ that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel(\"\
  yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\")\n    \"U\"\n    >>> get_closest_vowel(\"\
  quick\")\n    \"\"\n    >>> get_closest_vowel(\"ab\")\n    \"\"\n    \"\"\"\nfunction\
  \ get_closest_vowel(word::String)::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
  yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
  easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
  ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
  \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
  )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
  )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\n\
  end\n"
completions: ["    vowels = \"aeiouAEIOU\"\n    consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    for i in 1:length(word)\n        if word[end-i] in vowels\n            if\
    \ word[end-i-1] in consonants\n                return word[end-i]\n          \
    \  end\n        end\n    end\n    return \"\"\nend", "    vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    for i in 1:length(word)\n        if word[end-i]\
    \ in vowels\n            if word[end-i-1] in vowels\n                continue\n\
    \            else\n                return word[end-i]\n            end\n     \
    \   end\n    end\n    return \"\"\nend", "    vowels = \"aeiouAEIOU\"\n    consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    for i in 1:length(word)\n\
    \        if word[end-i] in vowels\n            if word[end-i-1] in consonants\
    \ && word[end-i+1] in consonants\n                return word[end-i]\n       \
    \     end\n        end\n    end\n    return \"\"\nend", "    vowels = [\"a\",\
    \ \"e\", \"i\", \"o\", \"u\"]\n    for i in 1:length(word)\n        if word[end-i]\
    \ in vowels\n            return word[end-i]\n        end\n    end\n    return\
    \ \"\"\nend", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in\
    \ 1:length(word)\n        if word[end-i] in vowels\n            return word[end-i]\n\
    \        end\n    end\n    return \"\"\nend", "    vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    for i in 1:length(word)\n        if word[end-i] in vowels\n\
    \            if word[end-i-1] in vowels\n                continue\n          \
    \  else\n                return word[end-i]\n            end\n        end\n  \
    \  end\n    return \"\"\nend", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    for i in 1:length(word)\n        if word[end-i] in vowels\n           \
    \ return word[end-i]\n        end\n    end\n    return \"\"\nend", "    vowels\
    \ = \"aeiouAEIOU\"\n    for i in length(word)::Int:-1:1\n        if word[i] in\
    \ vowels\n            if i == length(word)\n                return \"\"\n    \
    \        elseif word[i+1] in vowels\n                return \"\"\n           \
    \ else\n                return word[i]\n            end\n        end\n    end\n\
    \    return \"\"\nend", "    vowels = \"aeiouAEIOU\"\n    for i in length(word)::Int:-1:1\n\
    \        if word[i] in vowels\n            if i == length(word)\n            \
    \    return \"\"\n            elseif word[i+1] in vowels\n                return\
    \ \"\"\n            else\n                return word[i]\n            end\n  \
    \      end\n    end\n    return \"\"\nend", "    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    for i in 1:length(word)\n        if word[end-i] in vowels\n\
    \            if (end-i) == 1\n                return \"\"\n            elseif\
    \ word[end-i-1] in vowels\n                return \"\"\n            else\n   \
    \             return word[end-i]\n            end\n        end\n    end\n    return\
    \ \"\"\nend", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in\
    \ length(word)::Int:-1:1\n        if word[i] in vowels && word[i-1] not in vowels\n\
    \            return word[i]\n        end\n    end\n    return \"\"\nend", "  \
    \  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in 1:length(word)\n\
    \        if word[end-i] in vowels\n            return word[end-i]\n        end\n\
    \    end\n    return \"\"\nend", "    vowels = \"aeiouAEIOU\"\n    for i in length(word)::Int:-1:1\n\
    \        if word[i] in vowels\n            if i == length(word)\n            \
    \    return \"\"\n            elseif word[i+1] in vowels\n                return\
    \ \"\"\n            else\n                return word[i]\n            end\n  \
    \      end\n    end\n    return \"\"\nend", "    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    for i in 1:length(word)\n        if word[end-i] in vowels\
    \ && word[end-i+1] in vowels\n            return word[end-i]\n        end\n  \
    \  end\n    return \"\"\nend", "    vowels = \"aeiouAEIOU\"\n    consonants =\
    \ \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    for i in 1:length(word)\n\
    \        if word[end-i] in vowels && word[end-i+1] in consonants\n           \
    \ return word[end-i]\n        end\n    end\n    return \"\"\nend", "    vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in 1:length(word)\n       \
    \ if word[end-i] in vowels\n            if word[end-i-1] in vowels\n         \
    \       continue\n            else\n                return word[end-i]\n     \
    \       end\n        end\n    end\n    return \"\"\nend", "    vowels = \"aeiouAEIOU\"\
    \n    for i in 1:length(word)\n        if word[end-i] in vowels\n            if\
    \ word[end-i+1] in \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n          \
    \      return word[end-i]\n            end\n        end\n    end\n    return \"\
    \"\nend", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in 1:length(word)\n\
    \        if word[end-i] in vowels && word[end-i+1] in vowels\n            return\
    \ word[end-i]\n        end\n    end\n    return \"\"\nend", "    vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in 1:length(word)\n        if word[end-i]\
    \ in vowels\n            if i == 1\n                return \"\"\n            elseif\
    \ word[end-i-1] in vowels\n                continue\n            else\n      \
    \          return word[end-i]\n            end\n        end\n    end\n    return\
    \ \"\"\nend", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in\
    \ 1:length(word)\n        if word[end-i] in vowels\n            if i == 1\n  \
    \              return \"\"\n            elseif word[end-i-1] in vowels\n     \
    \           return \"\"\n            else\n                return word[end-i]\n\
    \            end\n        end\n    end\n    return \"\"\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

{
  "name": "mbpp_65_recursive_list_sum",
  "language": "js",
  "prompt": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_65_recursive_list_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "  var sum = 0;\n  for(var i = 0; i < data_list.length; i++){\n    if(typeof(data_list[i]) == 'number'){\n      sum += data_list[i];\n    }\n    else{\n      sum += recursive_list_sum(data_list[i]);\n    }\n  }\n  return sum;\n}\n",
    "    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,[3,4,[5,6],7],8];",
    "    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i=0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4,5,6,7,8,9,10];",
    "    var sum = 0;\n    for (var i = 0; i < data_list.length; i++) {\n        if (typeof(data_list[i]) == typeof([])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else if(typeof data_list[i] == \"object\"){\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n"
  ]
}
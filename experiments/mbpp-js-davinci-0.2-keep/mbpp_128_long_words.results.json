{
  "name": "mbpp_128_long_words",
  "language": "js",
  "prompt": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_128_long_words.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    arr1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    arr1.forEach(function(arr1){\n        if(arr1.length > n){\n            result.push(arr1);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    arr.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = [];\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result.push(arr[x]);\n        }\n    }\n    return result.join(\" \");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language'\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmprmn9_7zy.js:17:10)\n    at Object.<anonymous> (/tmp/tmprmn9_7zy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.filter(function(str) {\n        return str.length > n;\n    });\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmpu1qhlq6g.js:3\n    var arr = str.filter(function(str) {\n                  ^\n\nTypeError: str.filter is not a function\n    at long_words (/tmp/tmpu1qhlq6g.js:3:19)\n    at test (/tmp/tmpu1qhlq6g.js:13:20)\n    at Object.<anonymous> (/tmp/tmpu1qhlq6g.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = [];\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result.push(arr[x]);\n        }\n    }\n    return result.join(\" \");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language'\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmprmn9_7zy.js:17:10)\n    at Object.<anonymous> (/tmp/tmprmn9_7zy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr.forEach(function(entry) {\n        if(entry.length > n){\n            result.push(entry);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.filter(function(str) {\n        return str.length > n;\n    });\n    return arr1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "/tmp/tmp10d3c9h4.js:3\n    var arr1 = str.filter(function(str) {\n                   ^\n\nTypeError: str.filter is not a function\n    at long_words (/tmp/tmp10d3c9h4.js:3:20)\n    at test (/tmp/tmp10d3c9h4.js:13:20)\n    at Object.<anonymous> (/tmp/tmp10d3c9h4.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n  var array1 = str.match(/\\w[a-z]{0,}/gi);\n  var result = [];\n\n  array1.forEach(function(word){\n    if(word.length > n){\n      result.push(word);\n    }\n  });\n  return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.split(\" \");\n    var newarray1 = [];\n    \n    for(var x = 0; x < array1.length; x++){\n        if(array1[x].length > n){\n            newarray1.push(array1[x]);\n        }\n    }\n    return newarray1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.filter(function(str){\n        return str.length > n;\n    });\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "/tmp/tmp5dmqeul7.js:3\n    var arr = str.filter(function(str){\n                  ^\n\nTypeError: str.filter is not a function\n    at long_words (/tmp/tmp5dmqeul7.js:3:19)\n    at test (/tmp/tmp5dmqeul7.js:13:20)\n    at Object.<anonymous> (/tmp/tmp5dmqeul7.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = [];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i].length > n){\n            result.push(arr[i]);\n        }\n    }\n    return result.join(\" \");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language'\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmp_dvxnu3f.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_dvxnu3f.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = array1.filter(function(word){\n        return word.length > n;\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n  var arr = str.split(\" \");\n  var result = \"\";\n  for(var x = 0; x < arr.length; x++){\n    if(arr[x].length > n){\n      result += arr[x] + \" \";\n    }\n  }\n  return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmp3y73_nm0.js:17:10)\n    at Object.<anonymous> (/tmp/tmp3y73_nm0.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = [];\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result.push(arr[x]);\n        }\n    }\n    return result.join(\" \");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language'\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmprmn9_7zy.js:17:10)\n    at Object.<anonymous> (/tmp/tmprmn9_7zy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr.forEach(function(entry) {\n        if(entry.length > n){\n            result.push(entry);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr1.forEach(function(arr1){\n        if(arr1.length > n){\n            result.push(arr1);\n        } \n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = [];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i].length > n){\n            result.push(arr[i]);\n        }\n    }\n    return result.join(\" \");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language'\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmp_dvxnu3f.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_dvxnu3f.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.split(\" \");\n    var arr2 = [];\n    for(var i = 0; i < arr1.length; i++){\n        if(arr1[i].length > n){\n            arr2.push(arr1[i]);\n        }\n    }\n    return arr2.join(\" \");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language'\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmp4gl6o_i2.js:17:10)\n    at Object.<anonymous> (/tmp/tmp4gl6o_i2.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(element) {\n        if (element.length > n) {\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = [];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i].length > n){\n            result.push(arr[i]);\n        }\n    }\n    return result.join(\" \");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language'\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmp_dvxnu3f.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_dvxnu3f.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr.forEach(function(entry) {\n        if(entry.length > n){\n            result.push(entry);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if (word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr.forEach(function(entry) {\n        if(entry.length > n){\n            result.push(entry);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = [];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i].length > n){\n            result.push(arr[i]);\n        }\n    }\n    return result.join(\" \");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language'\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmp_dvxnu3f.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_dvxnu3f.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n  var array1 = str.match(/\\w[a-z]{0,}/gi);\n  var result = [];\n\n  array1.forEach(function(word){\n    if(word.length > n){\n      result.push(word);\n    }\n  });\n  return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if (word.length > n) {\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(entry) {\n        if (entry.length > n) {\n            result.push(entry);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if (word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = [];\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result.push(arr[x]);\n        }\n    }\n    return result.join(\" \");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language'\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmprmn9_7zy.js:17:10)\n    at Object.<anonymous> (/tmp/tmprmn9_7zy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    arr1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.split(\" \");\n    var arr2 = [];\n    for(var i=0; i<arr1.length; i++){\n        if(arr1[i].length > n){\n            arr2.push(arr1[i]);\n        }\n    }\n    return arr2.join(\" \");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language'\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpquk39ree.js:17:10)\n    at Object.<anonymous> (/tmp/tmpquk39ree.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = [];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i].length > n){\n            result.push(arr[i]);\n        }\n    }\n    return result.join(\" \");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language'\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmp_dvxnu3f.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_dvxnu3f.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr.forEach(function(entry) {\n        if(entry.length > n){\n            result.push(entry);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i].length > n){\n            result += arr[i] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpr8mubt_c.js:17:10)\n    at Object.<anonymous> (/tmp/tmpr8mubt_c.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element) {\n        if (element.length > n) {\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    \n    array1.forEach(function(word){\n        if (word.length > n) {\n            result.push(word);\n        } \n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = array1.filter(function(str) {\n        return str.length > n;\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = array1.filter(function(word){\n        return word.length > n;\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if (word.length > n) {\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    arr1.forEach(function(arr1){\n        if(arr1.length > n){\n            result.push(arr1);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = [];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i].length > n){\n            result.push(arr[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr.forEach(function(entry) {\n        if(entry.length > n){\n            result.push(entry);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.filter(function(str) {\n        return str.length > n;\n    });\n    return arr1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "/tmp/tmp10d3c9h4.js:3\n    var arr1 = str.filter(function(str) {\n                   ^\n\nTypeError: str.filter is not a function\n    at long_words (/tmp/tmp10d3c9h4.js:3:20)\n    at test (/tmp/tmp10d3c9h4.js:13:20)\n    at Object.<anonymous> (/tmp/tmp10d3c9h4.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = [];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i].length > n){\n            result.push(arr[i]);\n        }\n    }\n    return result.join(\" \");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language'\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmp_dvxnu3f.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_dvxnu3f.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if (word.length > n) {\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = array1.filter(function(word){\n        return word.length > n;\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.filter(function(str) {\n        return str.length > n;\n    });\n    return arr1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "/tmp/tmp10d3c9h4.js:3\n    var arr1 = str.filter(function(str) {\n                   ^\n\nTypeError: str.filter is not a function\n    at long_words (/tmp/tmp10d3c9h4.js:3:20)\n    at test (/tmp/tmp10d3c9h4.js:13:20)\n    at Object.<anonymous> (/tmp/tmp10d3c9h4.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(element) {\n        if (element.length > n) {\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.filter(function(str) {\n        return str.length > n;\n    });\n    return arr1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "/tmp/tmp10d3c9h4.js:3\n    var arr1 = str.filter(function(str) {\n                   ^\n\nTypeError: str.filter is not a function\n    at long_words (/tmp/tmp10d3c9h4.js:3:20)\n    at test (/tmp/tmp10d3c9h4.js:13:20)\n    at Object.<anonymous> (/tmp/tmp10d3c9h4.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.filter(function(str) {\n        return str.length > n;\n    });\n    return arr1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1666124157,
      "stdout": "",
      "stderr": "/tmp/tmp10d3c9h4.js:3\n    var arr1 = str.filter(function(str) {\n                   ^\n\nTypeError: str.filter is not a function\n    at long_words (/tmp/tmp10d3c9h4.js:3:20)\n    at test (/tmp/tmp10d3c9h4.js:13:20)\n    at Object.<anonymous> (/tmp/tmp10d3c9h4.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    arr1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var arr = str.split(\" \");\n    var result = \"\";\n    for(var x = 0; x < arr.length; x++){\n        if(arr[x].length > n){\n            result += arr[x] + \" \";\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python programming language '\n\nshould loosely deep-equal\n\n[\n  'python',\n  'programming',\n  'language'\n]\n    at test (/tmp/tmpauqitmzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpauqitmzq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python programming language ',\n  expected: [ 'python', 'programming', 'language' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(word){\n        if(word.length > n){\n            result.push(word);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find words that are longer than n characters from a given list of words.\nfunction long_words(n, str){\n    var array1 = str.match(/\\w[a-z]{0,}/gi);\n    var result = [];\n\n    array1.forEach(function(element){\n        if(element.length > n){\n            result.push(element);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
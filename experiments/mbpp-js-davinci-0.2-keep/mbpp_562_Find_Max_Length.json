{
  "name": "mbpp_562_Find_Max_Length",
  "language": "js",
  "prompt": "//Write a python function to find the length of the longest sublists.\nfunction Find_Max_Length(lst){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_562_Find_Max_Length.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Find_Max_Length;\n  assert.deepEqual(candidate([[1], [1, 4], [5, 6, 7, 8]]),4);\n  assert.deepEqual(candidate([[0, 1], [2, 2], [3, 2, 1]]),3);\n  assert.deepEqual(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]),5);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var max_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i].length > max_length){\n            max_length = lst[i].length;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [[1,2,3,4], [1,2,3,4,5,6,7,8,9], [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]];",
    "    var max_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i].length > max_length){\n            max_length = lst[i].length;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [[1,2,3,4,5],[1,2,3,4],[1,2,3,4,5,6,7,8,9,10]];",
    "    var max_len = 0;\n    for(var i = 0; i < lst.length; i++){\n        var len = lst[i].length;\n        if(len > max_len){\n            max_len = len;\n        }\n    }\n    return max_len;\n}\nvar lst = [[1,2,3,4,5,6,7,8,9,10], [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]];\nvar max_len = Find_Max_Length(lst);",
    "    var max_len = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i].length > max_len){\n            max_len = lst[i].length;\n        }\n    }\n    return max_len;\n}\nvar lst = [[1,2,3,4,5],[6,7,8,9,10],[11,12,13,14,15]];\nvar max_len = Find_Max_Length(lst);",
    "    var max_length = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i].length > max_length){\n            max_length = lst[i].length;\n        }\n    }\n    return max_length;\n}\n",
    "    var max = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i].length > max){\n            max = lst[i].length;\n        }\n    }\n    return max;\n}\nvar lst = [[1,2,3,4,5,6],[1,2,3,4,5,6,7,8,9,10],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]];",
    "    var max_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i].length > max_length){\n            max_length = lst[i].length;\n        }\n    }\n    return max_length;\n}\nvar lst = [[1,2,3,4,5,6,7,8,9,10],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]];\nvar max_length = Find_Max_Length(lst);",
    "    var max_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i].length > max_length){\n            max_length = lst[i].length;\n        }\n    }\n    return max_length;\n}\nvar lst = [[1,2,3,4,5,6,7,8,9,10], [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]];",
    "    var max = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i].length > max){\n            max = lst[i].length;\n        }\n    }\n    return max;\n}\nvar lst = [[1,2,3,4,5,6,7,8,9,10],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]];",
    "    var max_length = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i].length > max_length){\n            max_length = lst[i].length;\n        }\n    }\n    return max_length;\n}\nvar lst = [[1,2,3],[4,5,6,7],[8,9,10,11,12]];\nvar max_length = Find_Max_Length(lst);",
    "    var max_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i].length > max_length){\n            max_length = lst[i].length;\n        }\n    }\n    return max_length;\n}\nvar lst = [[1,2,3,4,5],[1,2,3,4],[1,2,3,4,5,6,7,8,9,10]];",
    "    var max_len = 0;\n    for(var i = 0; i < lst.length; i++){\n        var len = lst[i].length;\n        if(len > max_len){\n            max_len = len;\n        }\n    }\n    return max_len;\n}\nvar lst = [[1,2,3,4,5,6,7,8], [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]];",
    "    var max_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i].length > max_length){\n            max_length = lst[i].length;\n        }\n    }\n    return max_length;\n}\nvar lst = [[1,2,3,4,5], [1,2,3,4], [1,2,3,4,5,6,7,8,9,10]];",
    "    var max_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i].length > max_length){\n            max_length = lst[i].length;\n        }\n    }\n    return max_length;\n}\n",
    "    var max_len = 0;\n    var len = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i] == ' ') {\n            len = 0;\n        }\n        else {\n            len++;\n            if (max_len < len) {\n                max_len = len;\n            }\n        }\n    }\n    return max_len;\n}",
    "    var max_len = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i].length > max_len){\n            max_len = lst[i].length;\n        }\n    }\n    return max_len;\n}\nvar lst = [[1,2,3,4,5],[6,7,8,9,10],[11,12,13,14,15],[16,17,18,19,20]];",
    "    var max_len = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max_len) {\n            max_len = lst[i].length;\n        }\n    }\n    return max_len;\n}",
    "    var max_len = 0;\n    var len = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] == ' '){\n            len = 0;\n        }\n        else{\n            len++;\n            if(len > max_len){\n                max_len = len;\n            }\n        }\n    }\n    return max_len;\n}\nvar lst = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];\nvar result = Find_Max_Length(lst);",
    "    var max_len = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i].length > max_len){\n            max_len = lst[i].length;\n        }\n    }\n    return max_len;\n}\nvar lst = [[1,2,3,4,5,6,7,8,9,10],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]];\nvar max_len = Find_Max_Length(lst);",
    "    var max = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i].length > max){\n            max = lst[i].length;\n        }\n    }\n    return max;\n}\n"
  ]
}
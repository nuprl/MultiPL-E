{
  "name": "mbpp_733_find_first_occurrence",
  "language": "js",
  "prompt": "//Write a function to find the index of the first occurrence of a given number in a sorted array.\nfunction find_first_occurrence(A, x){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_733_find_first_occurrence.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_first_occurrence;\n  assert.deepEqual(candidate([2, 5, 5, 5, 6, 6, 8, 9, 9, 9], 5),1);\n  assert.deepEqual(candidate([2, 3, 5, 5, 6, 6, 8, 9, 9, 9], 5),2);\n  assert.deepEqual(candidate([2, 4, 1, 5, 6, 6, 8, 9, 9, 9], 6),4);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var low = 0, high = A.length - 1;\n    var result = -1;\n    while(low <= high){\n        var mid = Math.floor((low + high)/2);\n        if(x == A[mid]){\n            result = mid;\n            high = mid - 1;\n        }\n        else if(x < A[mid]){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return result;\n}\n",
    "\tvar low = 0;\n\tvar high = A.length-1;\n\tvar result = -1;\n\twhile(low <= high){\n\t\tvar mid = Math.floor((low+high)/2);\n\t\tif(x == A[mid]){\n\t\t\tresult = mid;\n\t\t\thigh = mid-1;\n\t\t}else if(x < A[mid]){\n\t\t\thigh = mid-1;\n\t\t}else{\n\t\t\tlow = mid+1;\n\t\t}\n\t}\n\treturn result;\n}\n",
    "    var low = 0, high = A.length - 1;\n    var result = -1;\n    while(low <= high){\n        var mid = Math.floor((low + high)/2);\n        if(x == A[mid]){\n            result = mid;\n            high = mid - 1;\n        }else if(x < A[mid]){\n            high = mid - 1;\n        }else{\n            low = mid + 1;\n        }\n    }\n    return result;\n}\n",
    "    var low = 0, high = A.length - 1;\n    var result = -1;\n    while(low <= high){\n        var mid = Math.floor((low + high)/2);\n        if(x == A[mid]){\n            result = mid;\n            high = mid - 1;\n        }\n        else if(x < A[mid]){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return result;\n}\n",
    "    var low = 0, high = A.length - 1;\n    var result = -1;\n    while(low <= high){\n        var mid = Math.floor((low + high)/2);\n        if(x == A[mid]){\n            result = mid;\n            high = mid - 1;\n        }\n        else if(x < A[mid]){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return result;\n}\n",
    "    var low = 0, high = A.length - 1;\n    var result = -1;\n    while(low <= high){\n        var mid = Math.floor((low + high)/2);\n        if(x == A[mid]){\n            result = mid;\n            high = mid - 1;\n        }\n        else if(x < A[mid]){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return result;\n}\n",
    "  var low = 0, high = A.length - 1;\n  var result = -1;\n  while(low <= high){\n    var mid = Math.floor((low + high)/2);\n    if(x == A[mid]){\n      result = mid;\n      high = mid - 1;\n    }\n    else if(x < A[mid]){\n      high = mid - 1;\n    }\n    else{\n      low = mid + 1;\n    }\n  }\n  return result;\n}\n",
    "    var low = 0, high = A.length - 1;\n    var result = -1;\n    while(low <= high){\n        var mid = Math.floor((low + high) / 2);\n        if(x == A[mid]){\n            result = mid;\n            high = mid - 1;\n        }\n        else if(x < A[mid]){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return result;\n}\n",
    "    var low = 0, high = A.length - 1;\n    var result = -1;\n    while(low <= high){\n        var mid = Math.floor((low + high) / 2);\n        if(x == A[mid]){\n            result = mid;\n            high = mid - 1;\n        }else if(x < A[mid]){\n            high = mid - 1;\n        }else{\n            low = mid + 1;\n        }\n    }\n    return result;\n}\n",
    "  var low = 0, high = A.length - 1;\n  var result = -1;\n  while(low <= high){\n    var mid = Math.floor((low + high)/2);\n    if(x == A[mid]){\n      result = mid;\n      high = mid - 1;\n    }\n    else if(x < A[mid]){\n      high = mid - 1;\n    }\n    else{\n      low = mid + 1;\n    }\n  }\n  return result;\n}\n",
    "    var low = 0;\n    var high = A.length - 1;\n    var result = -1;\n    while(low <= high){\n        var mid = Math.floor((low + high)/2);\n        if(x == A[mid]){\n            result = mid;\n            high = mid - 1;\n        }\n        else if(x < A[mid]){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return result;\n}\n",
    "    var low = 0, high = A.length - 1;\n    var result = -1;\n    while(low <= high){\n        var mid = Math.floor((low + high)/2);\n        if(x == A[mid]){\n            result = mid;\n            high = mid - 1;\n        }\n        else if(x < A[mid]){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return result;\n}\n",
    "    var low = 0, high = A.length - 1;\n    var result = -1;\n    while(low <= high){\n        var mid = Math.floor((low + high) / 2);\n        if(x == A[mid]){\n            result = mid;\n            high = mid - 1;\n        }\n        else if(x < A[mid]){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return result;\n}\n",
    "\tvar low = 0;\n\tvar high = A.length - 1;\n\tvar result = -1;\n\twhile(low <= high){\n\t\tvar mid = Math.floor((low + high)/2);\n\t\tif(x == A[mid]){\n\t\t\tresult = mid;\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse if(x < A[mid]){\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn result;\n}\n",
    "  var low = 0, high = A.length - 1;\n  var result = -1;\n  while(low <= high){\n    var mid = Math.floor((low + high)/2);\n    if(x == A[mid]){\n      result = mid;\n      high = mid - 1;\n    }\n    else if(x < A[mid]){\n      high = mid - 1;\n    }\n    else{\n      low = mid + 1;\n    }\n  }\n  return result;\n}\n",
    "    var low = 0;\n    var high = A.length - 1;\n    var result = -1;\n    while(low <= high){\n        var mid = Math.floor((low + high) / 2);\n        if(x == A[mid]){\n            result = mid;\n            high = mid - 1;\n        }\n        else if(x < A[mid]){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return result;\n}\n",
    "  var low = 0, high = A.length - 1;\n  var result = -1;\n  while(low <= high){\n    var mid = Math.floor((low + high) / 2);\n    if(x == A[mid]){\n      result = mid;\n      high = mid - 1;\n    }\n    else if(x < A[mid]){\n      high = mid - 1;\n    }\n    else{\n      low = mid + 1;\n    }\n  }\n  return result;\n}\n",
    "  var low = 0, high = A.length - 1;\n  var result = -1;\n  while(low <= high){\n    var mid = Math.floor((low + high) / 2);\n    if(x == A[mid]){\n      result = mid;\n      high = mid - 1;\n    }\n    else if(x < A[mid]){\n      high = mid - 1;\n    }\n    else{\n      low = mid + 1;\n    }\n  }\n  return result;\n}\n",
    "    var low = 0, high = A.length - 1;\n    var result = -1;\n    while(low <= high){\n        var mid = Math.floor((low + high)/2);\n        if(x == A[mid]){\n            result = mid;\n            high = mid - 1;\n        }\n        else if(x < A[mid]){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return result;\n}\n",
    "    var low = 0, high = A.length - 1;\n    var result = -1;\n    while(low <= high){\n        var mid = Math.floor((low + high)/2);\n        if(x == A[mid]){\n            result = mid;\n            high = mid - 1;\n        }\n        else if(x < A[mid]){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return result;\n}\n"
  ]
}
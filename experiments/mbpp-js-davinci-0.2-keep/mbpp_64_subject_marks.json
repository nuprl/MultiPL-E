{
  "name": "mbpp_64_subject_marks",
  "language": "js",
  "prompt": "//Write a function to sort a list of tuples using the second value of each tuple.\nfunction subject_marks(subjectmarks){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_64_subject_marks.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    return subjectmarks[1];\n}\nvar subjectmarks = [['English', 80], ['Science', 90], ['Maths', 95]];\nsubjectmarks.sort(subject_marks);",
    "    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return sorted_marks;\n}",
    "    return subjectmarks[1];\n}\n",
    "    subjectmarks.sort(function(a,b){\n        return a[1]-b[1]\n    })\n    return subjectmarks\n}",
    "    return subjectmarks[1];\n}\n\nvar subjectmarks = [['English', 80], ['Maths', 90], ['Science', 70], ['Social', 85]];\nsubjectmarks.sort(subject_marks);",
    "    var marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return marks;\n}",
    "    return subjectmarks[1];\n}\n\nvar subjectmarks = [['English', 80], ['Maths', 90], ['Science', 95]];\nsubjectmarks.sort(subject_marks);",
    "    return subjectmarks[1];\n}\n",
    "    var subject_marks = subjectmarks.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}",
    "    return subjectmarks[1];\n}\n",
    "\treturn subjectmarks[1];\n}\n\nvar subjectmarks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 100], ['Science', 100]];\nsubjectmarks.sort(subject_marks);",
    "    return subjectmarks[1];\n}\n",
    "    subjectmarks.sort(function(a,b){\n        return a[1]-b[1]\n    })\n    return subjectmarks\n}",
    "    return subjectmarks[1];\n}\n",
    "    return subjectmarks[1];\n}\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 80], ['Social', 70]];\nsubjectmarks.sort(subject_marks);",
    "    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}",
    "    return subjectmarks[1];\n}\n\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 80]];\nsubjectmarks.sort(subject_marks);",
    "  var sorted_marks = subjectmarks.sort(function(a,b){\n    return a[1] - b[1];\n  });\n  return sorted_marks;\n}",
    "    return subjectmarks[1];\n}\n",
    "    return subjectmarks[1];\n}\n"
  ]
}
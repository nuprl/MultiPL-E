{
  "name": "mbpp_428_shell_sort",
  "language": "js",
  "prompt": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_428_shell_sort.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = 0; i<my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j = j-gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmp4bn32qy6.js:31:10)\n    at Object.<anonymous> (/tmp/tmp4bn32qy6.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            for(var j = i; j >= gap && my_list[j-gap] > temp; j -= gap){\n                my_list[j] = my_list[j-gap];\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n            my_list[j] = temp;\n        }\n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpiqest60_.js:28:10)\n    at Object.<anonymous> (/tmp/tmpiqest60_.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n  var increment = my_list.length / 2;\n  while (increment > 0) {\n    for (i = increment; i < my_list.length; i++) {\n      var j = i;\n      var temp = my_list[i];\n      while (j >= increment && my_list[j-increment] > temp) {\n        my_list[j] = my_list[j-increment];\n        j = j - increment;\n      }\n      my_list[j] = temp;\n    }\n    if (increment == 2) {\n      increment = 1;\n    } else {\n      increment = parseInt(increment*5 / 11);\n    }\n  }\n  return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmp1gfds87g.js:29:10)\n    at Object.<anonymous> (/tmp/tmp1gfds87g.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length / 2);\n    while (gap > 0) {\n        for (var i = 0; i < my_list.length; i++) {\n            var temp = my_list[i];\n            var j = i;\n            while (j >= gap && my_list[j - gap] > temp) {\n                my_list[j] = my_list[j - gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap / 2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            for(var j = i; j >= gap && my_list[j - gap] > temp; j -= gap){\n                my_list[j] = my_list[j - gap];\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length / 2);\n    while (gap > 0) {\n        for (var i = 0; i < my_list.length; i++) {\n            var temp = my_list[i];\n            var j = i;\n            while (j >= gap && my_list[j - gap] > temp) {\n                my_list[j] = my_list[j - gap];\n                j = j - gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap / 2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j = j-gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmp4bn32qy6.js:31:10)\n    at Object.<anonymous> (/tmp/tmp4bn32qy6.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            for(var j = i; j >= gap && my_list[j-gap] > temp; j -= gap){\n                my_list[j] = my_list[j-gap];\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            for(var j = i; j >= gap && my_list[j-gap] > temp; j -= gap){\n                my_list[j] = my_list[j-gap];\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var n = my_list.length;\n    var gap = Math.floor(n/2);\n    while(gap > 0){\n        for(var i = gap; i < n; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var len = my_list.length;\n    var gap = Math.floor(len/2);\n    while(gap > 0){\n        for(var i = gap; i < len; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            for(var j = i; j >= gap && my_list[j-gap] > temp; j -= gap){\n                my_list[j] = my_list[j-gap];\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length / 2);\n    while (gap > 0) {\n        for (var i = 0; i < my_list.length; i++) {\n            var temp = my_list[i];\n            var j = i;\n            while (j >= gap && my_list[j - gap] > temp) {\n                my_list[j] = my_list[j - gap];\n                j = j - gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap / 2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = 0; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j = j - gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            for(var j = i; j >= gap && my_list[j-gap] > temp; j -= gap){\n                my_list[j] = my_list[j-gap];\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j - gap] > temp){\n                my_list[j] = my_list[j - gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var n = my_list.length;\n    for (var gap = Math.floor(n/2); gap > 0; gap = Math.floor(gap/2)){\n        for (var i = gap; i < n; i++){\n            var temp = my_list[i];\n            for (var j = i; j >= gap && my_list[j - gap] > temp; j -= gap){\n                my_list[j] = my_list[j - gap];\n            }\n            my_list[j] = temp;\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmp4bn32qy6.js:31:10)\n    at Object.<anonymous> (/tmp/tmp4bn32qy6.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            for(var j = i; j >= gap && my_list[j-gap] > temp; j -= gap){\n                my_list[j] = my_list[j-gap];\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = 0; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n  var increment = my_list.length / 2;\n  while (increment > 0) {\n    for (i = increment; i < my_list.length; i++) {\n      var j = i;\n      var temp = my_list[i];\n      while (j >= increment && my_list[j-increment] > temp) {\n        my_list[j] = my_list[j-increment];\n        j = j - increment;\n      }\n      my_list[j] = temp;\n    }\n    if (increment == 2) {\n      increment = 1;\n    } else {\n      increment = parseInt(increment*5 / 11);\n    }\n  }\n  return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmp1gfds87g.js:29:10)\n    at Object.<anonymous> (/tmp/tmp1gfds87g.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n            my_list[j] = temp;\n        }\n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmp11mf30jt.js:29:10)\n    at Object.<anonymous> (/tmp/tmp11mf30jt.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n            my_list[j] = temp;\n        }\n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmp11mf30jt.js:29:10)\n    at Object.<anonymous> (/tmp/tmp11mf30jt.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length / 2);\n    while (gap > 0) {\n        for (var i = 0; i < my_list.length; i++) {\n            var temp = my_list[i];\n            var j = i;\n            while (j >= gap && my_list[j - gap] > temp) {\n                my_list[j] = my_list[j - gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap / 2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var len = my_list.length;\n    var gap = Math.floor(len/2);\n    while(gap > 0){\n        for(var i = gap; i < len; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmp4bn32qy6.js:31:10)\n    at Object.<anonymous> (/tmp/tmp4bn32qy6.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = 0; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = 0; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = 0; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j = j - gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j - gap] > temp){\n                my_list[j] = my_list[j - gap];\n                j = j - gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length / 2);\n    while (gap > 0) {\n        for (var i = 0; i < my_list.length; i++) {\n            var temp = my_list[i];\n            var j = i;\n            while (j >= gap && my_list[j - gap] > temp) {\n                my_list[j] = my_list[j - gap];\n                j = j - gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap / 2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i=gap; i<my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j = j-gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = 0; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j = j-gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var len = my_list.length;\n    var gap = Math.floor(len/2);\n    while(gap > 0){\n        for(var i = gap; i < len; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = 0; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j = j-gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmp4bn32qy6.js:31:10)\n    at Object.<anonymous> (/tmp/tmp4bn32qy6.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j = j-gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j = j - gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length / 2);\n    while (gap > 0) {\n        for (var i = gap; i < my_list.length; i++) {\n            var temp = my_list[i];\n            for (var j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                my_list[j] = my_list[j - gap];\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap / 2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n\tvar increment = my_list.length / 2;\n\twhile (increment > 0) {\n\t\tfor (i = increment; i < my_list.length; i++) {\n\t\t\tvar j = i;\n\t\t\tvar temp = my_list[i];\n\t\t\twhile (j >= increment && my_list[j-increment] > temp) {\n\t\t\t\tmy_list[j] = my_list[j-increment];\n\t\t\t\tj = j - increment;\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t\tif (increment == 2) {\n\t\t\tincrement = 1;\n\t\t} else {\n\t\t\tincrement = parseInt(increment*5 / 11);\n\t\t}\n\t}\n\treturn my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmp0s9vwmzc.js:29:10)\n    at Object.<anonymous> (/tmp/tmp0s9vwmzc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            for(var j = i; j >= gap && my_list[j-gap] > temp; j -= gap){\n                my_list[j] = my_list[j-gap];\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmp4bn32qy6.js:31:10)\n    at Object.<anonymous> (/tmp/tmp4bn32qy6.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = 0; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j = j-gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length / 2);\n    while (gap > 0) {\n        for (var i = 0; i < my_list.length; i++) {\n            var temp = my_list[i];\n            var j = i;\n            while (j >= gap && my_list[j - gap] > temp) {\n                my_list[j] = my_list[j - gap];\n                j = j - gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap / 2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length / 2);\n    while (gap > 0) {\n        for (var i = 0; i < my_list.length; i++) {\n            var temp = my_list[i];\n            var j = i;\n            while (j >= gap && my_list[j - gap] > temp) {\n                my_list[j] = my_list[j - gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap / 2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length / 2);\n    while (gap > 0) {\n        for (var i = gap; i < my_list.length; i++) {\n            var temp = my_list[i];\n            for (var j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                my_list[j] = my_list[j - gap];\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap / 2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmp4bn32qy6.js:31:10)\n    at Object.<anonymous> (/tmp/tmp4bn32qy6.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n            my_list[j] = temp;\n        }\n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmp11mf30jt.js:29:10)\n    at Object.<anonymous> (/tmp/tmp11mf30jt.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            for(var j = i; j >= gap && my_list[j-gap] > temp; j -= gap){\n                my_list[j] = my_list[j-gap];\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = 0; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j = j-gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j = j - gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length / 2);\n    while (gap > 0) {\n        for (var i = 0; i < my_list.length; i++) {\n            var temp = my_list[i];\n            var j = i;\n            while (j >= gap && my_list[j - gap] > temp) {\n                my_list[j] = my_list[j - gap];\n                j = j - gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap / 2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length / 2);\n    while (gap > 0) {\n        for (var i = 0; i < my_list.length; i++) {\n            var temp = my_list[i];\n            var j = i;\n            while (j >= gap && my_list[j - gap] > temp) {\n                my_list[j] = my_list[j - gap];\n                j = j - gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap / 2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length / 2);\n    while (gap > 0) {\n        for (var i = 0; i < my_list.length; i++) {\n            var temp = my_list[i];\n            var j = i;\n            while (j >= gap && my_list[j - gap] > temp) {\n                my_list[j] = my_list[j - gap];\n                j = j - gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap / 2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = my_list.length / 2;\n    while (gap > 0) {\n        for (var i = gap; i < my_list.length; i++) {\n            var temp = my_list[i];\n            var j = i;\n            while (j >= gap && my_list[j - gap] > temp) {\n                my_list[j] = my_list[j - gap];\n                j = j - gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = gap / 2;\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  12,\n  4,\n  5,\n  3,\n  12,\n  23,\n  81,\n  56,\n  95,\n  '0.0000011920928955078125': undefined,\n  '0.000002384185791015625': undefined,\n  '0.00000476837158203125': undefined,\n  '0.0000095367431640625': undefined,\n  '0.000019073486328125': undefined,\n  '0.00003814697265625': undefined,\n  '0.0000762939453125': undefined,\n  '0.000152587890625': undefined,\n  '0.00030517578125': undefined,\n  '0.0006103515625': undefined,\n  '0.001220703125': undefined,\n  '0.00244140625': undefined,\n  '0.0048828125': undefin...\n\nshould loosely deep-equal\n\n[\n  2,\n  3,\n  4,\n  5,\n  12,\n  12,\n  23,\n  56,\n  81,\n  95\n]\n    at test (/tmp/tmpfwsra0i1.js:23:10)\n    at Object.<anonymous> (/tmp/tmpfwsra0i1.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    2,\n    12,\n    4,\n    5,\n    3,\n    12,\n    23,\n    81,\n    56,\n    95,\n    '2.5': undefined,\n    '3.5': undefined,\n    '4.5': undefined,\n    '5.5': undefined,\n    '6.5': undefined,\n    '7.5': undefined,\n    '8.5': undefined,\n    '9.5': undefined,\n    '1.25': undefined,\n    '2.25': undefined,\n    '3.25': undefined,\n    '4.25': undefined,\n    '5.25': undefined,\n    '6.25': undefined,\n    '7.25': undefined,\n    '8.25': undefined,\n    '9.25': undefined,\n    '0.625': undefined,\n    '1.625': undefined,\n    '2.625': undefined,\n    '3.625': undefined,\n    '4.625': undefined,\n    '5.625': undefined,\n    '6.625': undefined,\n    '7.625': undefined,\n    '8.625': undefined,\n    '9.625': undefined,\n    '0.3125': undefined,\n    '1.3125': undefined,\n    '2.3125'",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = 0; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j = j - gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j = j - gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            for(var j = i; j >= gap && my_list[j - gap] > temp; j -= gap){\n                my_list[j] = my_list[j - gap];\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var len = my_list.length;\n    var gap = Math.floor(len/2);\n    while(gap > 0){\n        for(var i = gap; i < len; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j - gap] > temp){\n                my_list[j] = my_list[j - gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            for(var j = i; j >= gap && my_list[j - gap] > temp; j -= gap){\n                my_list[j] = my_list[j - gap];\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            for(var j = i; j >= gap && my_list[j-gap] > temp; j -= gap){\n                my_list[j] = my_list[j-gap];\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length / 2);\n    while (gap > 0) {\n        for (var i = gap; i < my_list.length; i++) {\n            var temp = my_list[i];\n            for (var j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                my_list[j] = my_list[j - gap];\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap / 2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n            my_list[j] = temp;\n        }\n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmp11mf30jt.js:29:10)\n    at Object.<anonymous> (/tmp/tmp11mf30jt.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var n = my_list.length;\n    for(var gap = Math.floor(n/2); gap > 0; gap = Math.floor(gap/2)){\n        for(var i = gap; i < n; i++){\n            var temp = my_list[i];\n            for(var j = i; j >= gap && my_list[j - gap] > temp; j -= gap){\n                my_list[j] = my_list[j - gap];\n            }\n            my_list[j] = temp;\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var gap = Math.floor(my_list.length/2);\n    while(gap > 0){\n        for(var i = gap; i < my_list.length; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var len = my_list.length;\n    var gap = Math.floor(len/2);\n    while(gap > 0){\n        for(var i = gap; i < len; i++){\n            var temp = my_list[i];\n            var j = i;\n            while(j >= gap && my_list[j-gap] > temp){\n                my_list[j] = my_list[j-gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n        gap = Math.floor(gap/2);\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort the given array by using shell sort.\nfunction shell_sort(my_list){\n    var increment = my_list.length / 2;\n    while (increment > 0) {\n        for (i = increment; i < my_list.length; i++) {\n            var j = i;\n            var temp = my_list[i];\n    \n            while (j >= increment && my_list[j-increment] > temp) {\n                my_list[j] = my_list[j-increment];\n                j = j - increment;\n            }\n    \n            my_list[j] = temp;\n        }\n    \n        if (increment == 2) {\n            increment = 1;\n        } else {\n            increment = parseInt(increment*5 / 11);\n        }\n    }\n    return my_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = shell_sort;\n  assert.deepEqual(candidate([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]),[2, 3, 4, 5, 12, 12, 23, 56, 81, 95]);\n  assert.deepEqual(candidate([24, 22, 39, 34, 87, 73, 68]),[22, 24, 34, 39, 68, 73, 87]);\n  assert.deepEqual(candidate([32, 30, 16, 96, 82, 83, 74]),[16, 30, 32, 74, 82, 83, 96]);\n}\n\ntest();",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87,\n  '3.5': undefined,\n  '4.5': undefined,\n  '5.5': undefined,\n  '6.5': undefined\n]\n\nshould loosely deep-equal\n\n[\n  22,\n  24,\n  34,\n  39,\n  68,\n  73,\n  87\n]\n    at test (/tmp/tmpawxstdp5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpawxstdp5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    22,               24,\n    34,               39,\n    68,               73,\n    87,               '3.5': undefined,\n    '4.5': undefined, '5.5': undefined,\n    '6.5': undefined\n  ],\n  expected: [\n    22, 24, 34, 39,\n    68, 73, 87\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
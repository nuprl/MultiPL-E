{
  "name": "mbpp_587_list_tuple",
  "language": "js",
  "prompt": "//Write a function to convert a list to a tuple.\nfunction list_tuple(listx){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_587_list_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = list_tuple;\n  assert.deepEqual(candidate([5, 10, 7, 4, 15, 3]),[5, 10, 7, 4, 15, 3]);\n  assert.deepEqual(candidate([2, 4, 5, 6, 2, 3, 4, 4, 7]),[2, 4, 5, 6, 2, 3, 4, 4, 7]);\n  assert.deepEqual(candidate([58, 44, 56]),[58, 44, 56]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    return tuple(listx);\n}\n",
    "    return tuple(listx);\n}\n",
    "    return tuple(listx)\n}\n",
    "    return tuple(listx);\n}\n",
    "    return tuple(listx);\n}\n",
    "    return tuple(listx);\n}\n",
    "    return tuple(listx);\n}\n",
    "    return tuple(listx);\n}\n",
    "    return tuple(listx);\n}\n",
    "    return tuple(listx);\n}\n",
    "    return tuple(listx);\n}\n",
    "    return tuple(listx);\n}\n",
    "    return tuple(listx);\n}\n",
    "    return tuple(listx);\n}\nlist_tuple([1,2,3,4,5]);\n",
    "    return tuple(listx);\n}\n",
    "    return tuple(listx);\n}\n",
    "    return tuple(listx);\n}\n",
    "    return tuple(listx);\n}\n",
    "    return tuple(listx);\n}\n",
    "    return tuple(listx);\n}\n"
  ]
}
{
  "name": "mbpp_286_max_sub_array_sum_repeated",
  "language": "js",
  "prompt": "//Write a function to find the largest sum of a contiguous array in the modified array which is formed by repeating the given array k times.\nfunction max_sub_array_sum_repeated(a, n, k){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_286_max_sub_array_sum_repeated.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sub_array_sum_repeated;\n  assert.deepEqual(candidate([10, 20, -30, -1], 4, 3),30);\n  assert.deepEqual(candidate([-1, 10, 20], 3, 2),59);\n  assert.deepEqual(candidate([-1, -2, -3], 3, 3),-1);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    var i, j;\n    for(i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    var max_sum_so_far = max_sum;\n    for(i=1; i<k; i++){\n        for(j=0; j<n; j++){\n            max_ending_here = max_ending_here + a[j];\n            if(max_ending_here < 0){\n                max_ending_here = 0;\n            }\n            if(max_sum < max_ending_here){\n                max_sum = max_ending_here;\n            }\n        }\n        max_sum_so_far = max_sum_so_far + max_sum;\n    }\n    return max_sum_so_far;\n}\n",
    "    let max_sum = 0,\n        window_sum;\n    for (let i = 0; i < n; i++) {\n        let current_sum = 0;\n        for (let j = i; j < n; j++) {\n            current_sum += a[j];\n            if (current_sum > max_sum)\n                max_sum = current_sum;\n        }\n    }\n    window_sum = max_sum;\n    for (let i = 0; i < n; i++) {\n        window_sum += (a[i] * (k - 2));\n        if (window_sum > max_sum)\n            max_sum = window_sum;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0, max_ending_here = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    let max_wrap_sum = 0;\n    for(let i = 0; i < n; i++){\n        max_wrap_sum += a[i];\n        a[i] = -a[i];\n    }\n    max_wrap_sum = max_wrap_sum + max_sub_array_sum(a, n);\n    if(max_wrap_sum > max_sum){\n        max_sum = max_wrap_sum;\n    }\n    max_sum = max_sum * k;\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_element = a[0];\n    let sum_of_all_elements = 0;\n    for(let i = 0; i < n; i++){\n        max_element = Math.max(max_element, a[i]);\n        max_sum_so_far = Math.max(a[i], max_sum_so_far + a[i]);\n        max_sum = Math.max(max_sum, max_sum_so_far);\n        sum_of_all_elements += a[i];\n    }\n    if(max_sum < 0){\n        return max_sum;\n    }\n    if(k == 2){\n        return max_sum + sum_of_all_elements;\n    }\n    return max_sum + (sum_of_all_elements * (k - 2));\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n*k; i++){\n        max_ending_here = max_ending_here + a[i%n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i+1;\n        }\n    }\n    console.log(max_so_far);\n    console.log(start, end);\n}",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    for(var i = 0; i < n; i++){\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for(var i = n; i < n * k; i++){\n        curr_sum += a[i % n] - a[(i - n) % n];\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    var max_so_far = 0;\n    var start = 0;\n    var end = 0;\n    var s = 0;\n    for (var i = 0; i < n * k; i++) {\n        max_ending_here += a[i % n];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    return max_so_far;\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    for(var i = 0; i < n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    var max_wrap = 0;\n    for(var i = 0; i < n; i++){\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    curr_sum = 0;\n    for(var i = 0; i < n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_wrap = Math.max(max_wrap, curr_sum);\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(k == 1){\n        return max_sum;\n    }\n    return Math.max(max_sum, max_wrap);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    let max_wrap = 0;\n    for(let i = 0; i < n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    let max_ending_here_wrap = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here_wrap = max_ending_here_wrap + a[i];\n        if(max_ending_here_wrap < 0){\n            max_ending_here_wrap = 0;\n        }\n        if(max_wrap < max_ending_here_wrap){\n            max_wrap = max_ending_here_wrap;\n        }\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(k == 1){\n        return max_sum;\n    }\n    return Math.max(max_sum, max_wrap);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let max_index = 0;\n    let min_index = 0;\n    let max_array = [];\n    let min_array = [];\n    let max_array_sum = 0;\n    let min_array_sum = 0;\n    let max_array_sum_index = 0;\n    let min_array_sum_index = 0;\n    let max_array_sum_ending_here = 0;\n    let min_array_sum_ending_here = 0;\n    let max_array_sum_so_far = 0;\n    let min_array_sum_so_far = 0;\n    let max_array_sum_repeated = 0;\n    let min_array_sum_repeated = 0;\n    let max_array_sum_repeated_index = 0;\n    let min_array_sum_repeated_index = 0;\n    let max_array_sum_repeated_ending_here = 0;\n    let min_array_sum_repeated_ending_here = 0;\n    let max_array_sum_repeated_so_far = 0;\n    let min_array_sum_repeated_so_far = 0;\n    let max_array_sum_repeated_array = [];\n    let min_array_sum_repeated_array = [];\n    for(i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            j = i + 1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            max_index = i;\n        }\n    }\n    for(i = max_index; i >= j; i--){\n        max_array.push(a[i]);\n    }\n    for(i = 0; i < max_array.length; i++){\n       ",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i=0; i<n*k; i++){\n        max_ending_here = max_ending_here + a[i%n];\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    return max_so_far;\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    for(var i=0; i<n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    var max_wrap = 0;\n    for(var i=0; i<n; i++){\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    curr_sum = 0;\n    for(var i=0; i<n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_wrap = Math.max(max_wrap, curr_sum);\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(k == 1){\n        return max_sum;\n    }\n    return Math.max(max_wrap, max_sum);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n*k; i++){\n        max_ending_here += a[i%n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i+1;\n        }\n    }\n    return [max_so_far, start, end];\n}\n",
    "    let max_sum = 0,\n        window_sum = 0,\n        window_start = 0;\n    for(let window_end = 0; window_end < n; window_end++){\n        window_sum += a[window_end];\n        if(window_end >= k - 1){\n            max_sum = Math.max(max_sum, window_sum);\n            window_sum -= a[window_start];\n            window_start += 1;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    for (let i = start; i <= end; i++) {\n        max_sum = max_sum + a[i % n];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0,\n        window_sum = 0,\n        window_start = 0;\n    for (let window_end = 0; window_end < n; window_end++) {\n        window_sum += a[window_end];\n        if (window_end >= k - 1) {\n            max_sum = Math.max(max_sum, window_sum);\n            window_sum -= a[window_start];\n            window_start += 1;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    for(let i = 0; i < n; i++){\n        curr_sum += a[i];\n        if(curr_sum > max_sum){\n            max_sum = curr_sum;\n        }\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n    }\n    let max_wrap = 0;\n    for(let i = 0; i < n; i++){\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    curr_sum = 0;\n    for(let i = 0; i < n; i++){\n        curr_sum += a[i];\n        if(curr_sum > max_sum){\n            max_sum = curr_sum;\n        }\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n    }\n    max_wrap = max_wrap + max_sum;\n    if(k == 1){\n        return max_sum;\n    }\n    return Math.max(max_wrap, max_sum);\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    for(var i = 0; i < n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    var max_wrap = 0;\n    for(var i = 0; i < n; i++){\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    curr_sum = 0;\n    for(var i = 0; i < n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_wrap = Math.max(max_wrap, curr_sum);\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(k == 1){\n        return max_sum;\n    }\n    return Math.max(max_sum, max_wrap);\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_sum_so_far = 0;\n    for(let i = 0; i < n * k; i++){\n        curr_sum += a[i % n];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_sum_so_far = Math.max(max_sum_so_far, curr_sum);\n    }\n    return max_sum_so_far;\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n    }\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    max_wrap = max_wrap + max_sub_array_sum(a, n);\n    if (max_wrap > max_so_far)\n        return max_wrap * k;\n    return max_so_far * k;\n}\n",
    "    var max_sum = 0;\n    var max_sum_so_far = 0;\n    for(var i = 0; i < n; i++){\n        max_sum_so_far = max_sum_so_far + a[i];\n        if(max_sum_so_far < 0){\n            max_sum_so_far = 0;\n        }\n        if(max_sum < max_sum_so_far){\n            max_sum = max_sum_so_far;\n        }\n    }\n    var max_wrap_sum = 0;\n    for(var i = 0; i < n; i++){\n        max_wrap_sum = max_wrap_sum + a[i];\n        a[i] = -a[i];\n    }\n    var max_sum_so_far = 0;\n    for(var i = 0; i < n; i++){\n        max_sum_so_far = max_sum_so_far + a[i];\n        if(max_sum_so_far < 0){\n            max_sum_so_far = 0;\n        }\n        if(max_wrap_sum < max_sum_so_far){\n            max_wrap_sum = max_sum_so_far;\n        }\n    }\n    max_wrap_sum = max_wrap_sum + max_wrap_sum;\n    if(max_wrap_sum > max_sum){\n        max_sum = max_wrap_sum;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let max_sum_ending_here_temp = 0;\n    let max_sum_ending_here_temp_index = 0;\n    let max_sum_ending_here_index = 0;\n    let max_sum_ending_here_index_temp = 0;\n    let max_sum_ending_here_index_temp_index = 0;\n    let max_sum_ending_here_index_temp_index_index = 0;\n    let max_sum_ending_here_index_temp_index_index_index = 0;\n    let max_sum_ending_here_index_temp_index_index_index_index = 0;\n    let max_sum_ending_here_index_temp_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_temp_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_temp_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_temp_index_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_temp_index_index_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_temp_index_index_index_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_temp_index_index_index_index_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_temp_index_index_index_index_index_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_temp_index_index_index_index_index_index_index_index_index_index_index_index_index = 0;",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i=0; i<n*k; i++){\n        max_ending_here += a[i%n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i+1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    for(let i=start; i<=end; i++){\n        max_sum += a[i%n];\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var sum = 0;\n    var max_sum_so_far = 0;\n    var i = 0;\n    var j = 0;\n    var max_sum_ending_here = 0;\n    for(i = 0; i < n; i++){\n        max_sum_ending_here += a[i];\n        if(max_sum_ending_here < 0){\n            max_sum_ending_here = 0;\n        }\n        if(max_sum_so_far < max_sum_ending_here){\n            max_sum_so_far = max_sum_ending_here;\n        }\n    }\n    max_sum = max_sum_so_far;\n    for(i = 0; i < n; i++){\n        sum += a[i];\n    }\n    if(sum > 0){\n        max_sum_so_far = 0;\n        for(i = 0; i < n; i++){\n            max_sum_ending_here += a[i];\n            if(max_sum_ending_here < 0){\n                max_sum_ending_here = 0;\n            }\n            if(max_sum_so_far < max_sum_ending_here){\n                max_sum_so_far = max_sum_ending_here;\n            }\n        }\n        max_sum += max_sum_so_far * (k - 2);\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    for(var i = 0; i < n; i++){\n        curr_sum = curr_sum + a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    var max_wrap = 0;\n    for(var i = 0; i < n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    curr_sum = 0;\n    for(var i = 0; i < n; i++){\n        curr_sum = curr_sum + a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_wrap = Math.max(max_wrap, curr_sum);\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(k == 1){\n        return max_sum;\n    }\n    return Math.max(max_sum, max_wrap);\n}\n",
    "    let max_so_far = -Infinity;\n    let max_ending_here = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n*k; i++){\n        max_ending_here += a[i % n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    console.log(start, end);\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let max_sum_ending_here_prev = 0;\n    let max_sum_ending_here_prev_prev = 0;\n    let i = 0;\n    let j = 0;\n    let max_sum_ending_here_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n*k; i++){\n        max_ending_here += a[i%n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i+1;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i%n];\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_sum_so_far = 0;\n    var max_sum_ending_here = 0;\n    var i = 0;\n    var j = 0;\n    var l = 0;\n    var m = 0;\n    var max_sum_ending_here_array = [];\n    var max_sum_so_far_array = [];\n    var max_sum_array = [];\n    for(i = 0; i < k; i++){\n        for(j = 0; j < n; j++){\n            max_sum_ending_here = max_sum_ending_here + a[j];\n            if(max_sum_ending_here < 0){\n                max_sum_ending_here = 0;\n            }\n            if(max_sum_so_far < max_sum_ending_here){\n                max_sum_so_far = max_sum_ending_here;\n            }\n            max_sum_ending_here_array[j] = max_sum_ending_here;\n            max_sum_so_far_array[j] = max_sum_so_far;\n        }\n        max_sum_ending_here = 0;\n        max_sum_so_far = 0;\n        for(l = 0; l < n; l++){\n            max_sum_ending_here = max_sum_ending_here + a[l];\n            if(max_sum_ending_here < 0){\n                max_sum_ending_here = 0;\n            }\n            if(max_sum_so_far < max_sum_ending_here){\n                max_sum_so_far = max_sum_ending_here;\n            }\n            max_sum_ending_here_array[l] = max_sum_ending_here;\n            max_sum_so_far_array[l] = max_sum_so_far;\n        }\n        for(m = 0; m < n; m++){\n            max_sum_array[m] = max_sum_so_far_array[m] + max_sum_ending_here_array[m];\n        }\n        max_sum =",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i=0; i<n*k; i++){\n        max_ending_here = max_ending_here + a[i%n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i+1;\n        }\n    }\n    console.log(start, end);\n    return max_so_far;\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    var max_sum_so_far = 0;\n    var i = 0;\n    var j = 0;\n    var l = 0;\n    var r = 0;\n    var max_sum_start = 0;\n    var max_sum_end = 0;\n    for(i = 0; i < n; i++){\n        max_sum_so_far += a[i];\n    }\n    max_sum = max_sum_so_far;\n    for(i = 1; i < k; i++){\n        curr_sum = 0;\n        for(j = 0; j < n; j++){\n            curr_sum += a[j];\n            if(curr_sum > max_sum){\n                max_sum = curr_sum;\n                max_sum_start = l;\n                max_sum_end = r;\n            }\n            if(curr_sum < 0){\n                curr_sum = 0;\n                l = j + 1;\n            }\n            r++;\n        }\n    }\n    console.log(\"max_sum_start: \" + max_sum_start);\n    console.log(\"max_sum_end: \" + max_sum_end);\n    return max_sum;\n}\n",
    "    var max_sum = 0, max_ending_here = 0;\n    for(var i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    var max_wrap_sum = 0;\n    for(var i = 0; i < n; i++){\n        max_wrap_sum = max_wrap_sum + a[i];\n        a[i] = -a[i];\n    }\n    max_wrap_sum = max_wrap_sum + max_sub_array_sum(a, n);\n    return Math.max(max_wrap_sum, max_sum * k);\n}\n",
    "    var max_sum = 0;\n    var max_sum_so_far = 0;\n    for(var i=0; i<n; i++){\n        max_sum_so_far = max_sum_so_far + a[i];\n        if(max_sum_so_far < 0){\n            max_sum_so_far = 0;\n        }\n        if(max_sum < max_sum_so_far){\n            max_sum = max_sum_so_far;\n        }\n    }\n    var max_wrap_sum = 0;\n    for(var i=0; i<n; i++){\n        max_wrap_sum = max_wrap_sum + a[i];\n        a[i] = -a[i];\n    }\n    var max_wrap_sum_so_far = 0;\n    for(var i=0; i<n; i++){\n        max_wrap_sum_so_far = max_wrap_sum_so_far + a[i];\n        if(max_wrap_sum_so_far < 0){\n            max_wrap_sum_so_far = 0;\n        }\n        if(max_wrap_sum < max_wrap_sum_so_far){\n            max_wrap_sum = max_wrap_sum_so_far;\n        }\n    }\n    max_wrap_sum = max_wrap_sum + max_wrap_sum;\n    if(k == 1){\n        return max_sum;\n    }\n    return Math.max(max_sum, max_wrap_sum);\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    return max_so_far;\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    for(var i=0; i<n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    var max_wrap = 0;\n    for(var i=0; i<n; i++){\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    curr_sum = 0;\n    for(var i=0; i<n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_wrap = Math.max(max_wrap, curr_sum);\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(k == 1){\n        return max_sum;\n    }\n    return Math.max(max_sum, max_wrap);\n}\n",
    "    if(k == 1){\n        return max_sub_array_sum(a, n);\n    }\n    var max_ending_here = 0;\n    var max_so_far = 0;\n    var max_element = -Infinity;\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        max_element = Math.max(max_element, a[i]);\n        sum += a[i];\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    if(sum < 0){\n        return max_so_far;\n    }\n    var max_sum = max_so_far;\n    var max_wrap = 0;\n    for(var i = 0; i < n; i++){\n        max_wrap += a[i];\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    max_wrap = max_wrap * (k - 2);\n    return Math.max(max_so_far, max_wrap + max_sum);\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    var max_sum_so_far = 0;\n    var curr_sum_so_far = 0;\n    for(var i=0; i<n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        if(curr_sum > max_sum){\n            max_sum = curr_sum;\n        }\n    }\n    for(var i=0; i<n; i++){\n        curr_sum_so_far += a[i];\n        if(curr_sum_so_far < 0){\n            curr_sum_so_far = 0;\n        }\n        if(curr_sum_so_far > max_sum_so_far){\n            max_sum_so_far = curr_sum_so_far;\n        }\n    }\n    if(max_sum_so_far == 0){\n        return max_sum;\n    }\n    return Math.max(max_sum_so_far, (max_sum_so_far*(k-2) + max_sum));\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    for(var i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    var max_wrap = 0;\n    for(var i=0; i<n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    var max_ending_here = 0;\n    for(var i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_wrap < max_ending_here){\n            max_wrap = max_ending_here;\n        }\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(max_wrap > max_sum){\n        return max_wrap;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    for(let i = 0; i < n; i++){\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for(let i = 0; i < n; i++){\n        curr_sum += (k - 1) * a[i];\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0,\n        window_sum = 0,\n        window_start = 0;\n    for (let window_end = 0; window_end < n; window_end++) {\n        window_sum += a[window_end];\n        if (window_end >= k - 1) {\n            max_sum = Math.max(max_sum, window_sum);\n            window_sum -= a[window_start];\n            window_start += 1;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    for (let i = start; i <= end; i++)\n        max_sum = max_sum + a[i % n];\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    for(let i = 0; i < k; i++){\n        for(let j = 0; j < n; j++){\n            max_ending_here = max_ending_here + a[j];\n            if(max_ending_here < 0){\n                max_ending_here = 0;\n            }\n            if(max_so_far < max_ending_here){\n                max_so_far = max_ending_here;\n            }\n        }\n        max_sum = max_sum + max_so_far;\n        max_so_far = 0;\n        max_ending_here = 0;\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    for(var i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    var max_wrap = 0;\n    for(var i=0; i<n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    var max_ending_here = 0;\n    for(var i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_wrap < max_ending_here){\n            max_wrap = max_ending_here;\n        }\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(k == 1){\n        return max_sum;\n    }\n    return Math.max(max_wrap, max_sum);\n}\n",
    "    var max_sum = 0,\n        max_ending_here = 0,\n        i,\n        j;\n    for(i=0; i<k; i++){\n        max_ending_here = 0;\n        for(j=0; j<n; j++){\n            max_ending_here += a[j];\n            if(max_ending_here < 0){\n                max_ending_here = 0;\n            }\n            if(max_sum < max_ending_here){\n                max_sum = max_ending_here;\n            }\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n    }\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    max_wrap = max_wrap + max_sub_array_sum(a, n);\n    if (max_wrap > max_so_far)\n        return max_wrap;\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n\n    for(let i = 0; i < n * k; i++){\n        max_ending_here += a[i % n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    for(var i = 0; i < n; i++){\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for(var i = 0; i < n; i++){\n        curr_sum += (k - 1) * a[i];\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n*k; i++) {\n        max_ending_here = max_ending_here + a[i%n];\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_sum_so_far = 0;\n    let curr_sum_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let max_sum_index = 0;\n    let max_sum_index_so_far = 0;\n    let max_sum_index_end = 0;\n    let max_sum_index_so_far_end = 0;\n    let max_sum_index_start = 0;\n    let max_sum_index_so_far_start = 0;\n    let max_sum_index_start_temp = 0;\n    let max_sum_index_so_far_start_temp = 0;\n    let max_sum_index_end_temp = 0;\n    let max_sum_index_so_far_end_temp = 0;\n    let max_sum_index_temp = 0;\n    let max_sum_index_so_far_temp = 0;\n    let max_sum_index_start_temp_temp = 0;\n    let max_sum_index_so_far_start_temp_temp = 0;\n    let max_sum_index_end_temp_temp = 0;\n    let max_sum_index_so_far_end_temp_temp = 0;\n    let max_sum_index_temp_temp = 0;\n    let max_sum_index_so_far_temp_temp = 0;\n    let max_sum_index_start_temp_temp_temp = 0;\n    let max_sum_index_so_far_start_temp_temp_temp = 0;\n    let max_sum_index_end_temp_temp_temp = 0;\n    let max_sum_index_so_far_end_temp_temp_temp = 0;\n    let max_sum_index_temp_temp_temp = 0;\n    let max_sum_index_so_far_temp_temp_temp = 0;\n    let max_sum_index_start_temp_temp_temp_temp = 0;\n    let max_sum_index_so_far_start_",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    for(var i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    var max_wrap = 0;\n    for(var i=0; i<n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    var max_ending_here = 0;\n    for(var i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_wrap < max_ending_here){\n            max_wrap = max_ending_here;\n        }\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(max_wrap > max_sum){\n        return max_wrap;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    for (let i = start; i <= end; i++)\n        max_sum = max_sum + a[i % n];\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    for(var i = 0; i < n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    var max_wrap = 0;\n    for(var i = 0; i < n; i++){\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    curr_sum = 0;\n    for(var i = 0; i < n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_wrap = Math.max(max_wrap, curr_sum);\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(k == 1){\n        return max_sum;\n    }\n    return Math.max(max_sum, max_wrap);\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n    }\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    max_wrap = max_wrap + max_sub_array_sum(a, n);\n    return Math.max(max_wrap, max_so_far) * k;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n*k; i++){\n        curr_sum += a[i%n];\n        if(curr_sum > max_sum){\n            max_sum = curr_sum;\n            start = s;\n            end = i;\n        }\n        if(curr_sum < 0){\n            curr_sum = 0;\n            s = i+1;\n        }\n    }\n    for(let i = 0; i < n; i++){\n        max_sum_ending_here += a[i];\n        if(max_sum_ending_here < 0){\n            max_sum_ending_here = 0;\n        }\n        if(max_sum_so_far < max_sum_ending_here){\n            max_sum_so_far = max_sum_ending_here;\n        }\n    }\n    return Math.max(max_sum, max_sum_so_far);\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    var max_so_far = 0;\n    var i;\n    for(i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    var max_wrap = 0;\n    for(i=0; i<n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    max_wrap = max_wrap + max_sub_array_sum(a, n);\n    if(max_wrap > max_so_far){\n        return max_wrap;\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    for(let i = 0; i < n; i++){\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for(let i = 0; i < n; i++){\n        curr_sum += (k - 1) * a[i];\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_sum_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i=0; i<n*k; i++){\n        curr_sum += a[i%n];\n        if(curr_sum > max_sum){\n            max_sum = curr_sum;\n            start = s;\n            end = i;\n        }\n        if(curr_sum < 0){\n            curr_sum = 0;\n            s = i+1;\n        }\n    }\n    for(let i=start; i<=end; i++){\n        max_sum_so_far += a[i%n];\n    }\n    return max_sum_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i=0; i<n*k; i++){\n        max_ending_here = max_ending_here + a[i%n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i+1;\n        }\n    }\n    for(let i=start; i<=end; i++){\n        max_sum = max_sum + a[i%n];\n    }\n    return max_sum;\n}\n\nlet a = [1, 2, 3, 14, 5];\nlet k = 2;",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n * k; i++){\n        max_ending_here += a[i % n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    console.log(start, end);\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_element = a[0];\n    for(let i=0; i<n; i++){\n        max_element = Math.max(max_element, a[i]);\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    if(max_element < 0){\n        return max_element;\n    }\n    let max_sum_repeated = max_sum * k;\n    let prefix_sum = 0;\n    let suffix_sum = 0;\n    for(let i=0; i<n; i++){\n        prefix_sum += a[i];\n        max_sum = Math.max(max_sum, prefix_sum);\n    }\n    for(let i=n-1; i>=0; i--){\n        suffix_sum += a[i];\n        max_sum = Math.max(max_sum, suffix_sum);\n    }\n    return Math.max(max_sum, max_sum_repeated);\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i=0; i<n*k; i++){\n        max_ending_here = max_ending_here + a[i%n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i+1;\n        }\n    }\n    console.log(start, end);\n    return max_so_far;\n}\n\nlet a = [1, 2, 3, -2, 5];\nlet n = a.length;\nlet k = 2;",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = -Infinity;\n    let sum = 0;\n    for(let i=0; i<n; i++){\n        max_element = Math.max(max_element, a[i]);\n        sum += a[i];\n        max_ending_here += a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    if(max_element < 0){\n        return max_element;\n    }\n    let max_sum = max_so_far;\n    let max_prefix_sum = 0;\n    let max_suffix_sum = 0;\n    for(let i=0; i<n; i++){\n        max_prefix_sum += a[i];\n        max_suffix_sum += a[n-i-1];\n        max_so_far = Math.max(max_so_far, max_prefix_sum);\n        max_so_far = Math.max(max_so_far, max_suffix_sum);\n    }\n    max_sum = Math.max(max_sum, (max_so_far + (k-2)*sum));\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    var max_so_far = 0;\n    var start = 0;\n    var end = 0;\n    var s = 0;\n    for (var i = 0; i < n * k; i++){\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_sum < max_ending_here){\n            max_sum = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if (max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    console.log(start, end);\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    for(let i = 0; i < n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    let max_wrap = 0;\n    for(let i = 0; i < n; i++){\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    curr_sum = 0;\n    for(let i = 0; i < n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_wrap = Math.max(max_wrap, curr_sum);\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(k == 1){\n        return max_sum;\n    }\n    return Math.max(max_sum, max_wrap);\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n    }\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    max_wrap = max_wrap + max_sub_array_sum(a, n);\n    return Math.max(max_wrap, max_so_far) * k;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    for(let i=0; i<n; i++){\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for(let i=0; i<n; i++){\n        curr_sum += (k-1)*a[i];\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n * k; i++){\n        max_ending_here = max_ending_here + a[i % n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    var max_so_far = 0;\n    var max_ending_here = 0;\n    var max_element = -Infinity;\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        max_element = Math.max(max_element, a[i]);\n        sum += a[i];\n        max_ending_here = Math.max(max_ending_here + a[i], 0);\n        max_so_far = Math.max(max_so_far, max_ending_here);\n    }\n    if(max_so_far === 0){\n        return max_element;\n    }\n    var max_sum = max_so_far;\n    var max_prefix_sum = 0;\n    var max_suffix_sum = 0;\n    for(var i = 0; i < n; i++){\n        max_prefix_sum += a[i];\n        max_prefix_sum = Math.max(max_prefix_sum, 0);\n    }\n    for(var i = n - 1; i >= 0; i--){\n        max_suffix_sum += a[i];\n        max_suffix_sum = Math.max(max_suffix_sum, 0);\n    }\n    max_sum = Math.max(max_sum, max_prefix_sum + max_suffix_sum);\n    max_sum = Math.max(max_sum, max_prefix_sum + max_suffix_sum + (k - 2) * sum);\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n*k; i++){\n        max_ending_here += a[i%n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i%n];\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    var max_so_far = 0;\n    var start = 0;\n    var end = 0;\n    var s = 0;\n    for(var i=0; i<n*k; i++){\n        max_ending_here = max_ending_here + a[i%n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i+1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    console.log(start, end);\n    return max_so_far;\n}\n\nvar a = [1, 2, 3];\nvar k = 2;\nvar n = a.length;",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_so_far * k;\n    let max_wrap = 0;\n    for(let i = 0; i < n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    max_ending_here = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    max_wrap = max_wrap + max_so_far;\n    return Math.max(max_sum, max_wrap);\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    return max_so_far;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    for(var i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    var max_wrap = 0;\n    for(var i=0; i<n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    var max_ending_here = 0;\n    for(var i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_wrap < max_ending_here){\n            max_wrap = max_ending_here;\n        }\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(max_wrap > max_sum){\n        return max_wrap;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    for(let i=0; i<n; i++){\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for(let i=0; i<n; i++){\n        curr_sum += (k-1)*a[i];\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    for(var i=0; i<n*k; i++){\n        max_ending_here = max_ending_here + a[i%n];\n        if(max_ending_here < 0)\n            max_ending_here = 0;\n        if(max_sum < max_ending_here)\n            max_sum = max_ending_here;\n    }\n    return max_sum;\n}\n",
    "    let max_so_far = -Infinity;\n    let max_ending_here = 0;\n    let start = 0, end = 0, s = 0;\n    for(let i = 0; i < n * k; i++){\n        max_ending_here += a[i % n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    console.log(start, end);\n    return max_so_far;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    var max_so_far = 0;\n    var i;\n    for(i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_so_far * k;\n    var max_wrap = 0;\n    var min_wrap = 0;\n    for(i=0; i<n; i++){\n        max_wrap += a[i];\n        min_wrap += a[i];\n        if(max_wrap < 0){\n            max_wrap = 0;\n        }\n        if(min_wrap > 0){\n            min_wrap = 0;\n        }\n    }\n    max_sum = Math.max(max_sum, max_wrap + min_wrap * (k-2));\n    return max_sum;\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    return max_so_far;\n}\n",
    "\tvar max_sum = 0;\n\tvar max_ending_here = 0;\n\tvar max_so_far = 0;\n\tvar start = 0;\n\tvar end = 0;\n\tvar s = 0;\n\tfor(var i = 0; i < n*k; i++){\n\t\tmax_ending_here = max_ending_here + a[i%n];\n\t\tif(max_ending_here < 0){\n\t\t\tmax_ending_here = 0;\n\t\t\ts = i + 1;\n\t\t}\n\t\tif(max_so_far < max_ending_here){\n\t\t\tmax_so_far = max_ending_here;\n\t\t\tstart = s;\n\t\t\tend = i;\n\t\t}\n\t}\n\tconsole.log(start, end);\n\treturn max_so_far;\n}\n",
    "    var max_sum = 0;\n    var max_sum_so_far = 0;\n    for(var i = 0; i < n; i++){\n        max_sum_so_far += a[i];\n        if(max_sum_so_far < 0){\n            max_sum_so_far = 0;\n        }\n        if(max_sum < max_sum_so_far){\n            max_sum = max_sum_so_far;\n        }\n    }\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        sum += a[i];\n    }\n    if(sum > 0){\n        max_sum_so_far = max_sum_so_far * k;\n        max_sum_so_far = max_sum_so_far + sum * (k - 2);\n        if(max_sum < max_sum_so_far){\n            max_sum = max_sum_so_far;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = -Infinity;\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        sum += a[i];\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = Math.max(max_ending_here + a[i], 0);\n        max_so_far = Math.max(max_so_far, max_ending_here);\n    }\n    if(max_so_far === 0){\n        return max_element * k;\n    }\n    let max_wrap = sum * k - max_so_far;\n    return Math.max(max_so_far, max_wrap);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n * k; i++){\n        max_ending_here += a[i % n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    for(let i = 0; i < n; i++){\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    if(max_element < 0){\n        return max_element;\n    }\n    return Math.max(max_so_far, max_so_far * k);\n}\n",
    "    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = a[0];\n    for(let i=0; i<n; i++){\n        max_ending_here += a[i];\n        if(max_element < a[i]){\n            max_element = a[i];\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    if(max_so_far === 0){\n        return max_element;\n    }\n    let max_wrap = 0;\n    for(let i=0; i<n; i++){\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    let max_wrap_ending_here = 0;\n    for(let i=0; i<n; i++){\n        max_wrap_ending_here += a[i];\n        if(max_wrap_ending_here < 0){\n            max_wrap_ending_here = 0;\n        }\n        if(max_wrap < max_wrap_ending_here){\n            max_wrap = max_wrap_ending_here;\n        }\n    }\n    let max_sum = max_so_far + (k-2)*max_wrap;\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_sum_so_far = 0;\n    var max_sum_ending_here = 0;\n    var max_sum_ending_here_prev = 0;\n    var max_sum_ending_here_prev_prev = 0;\n    var max_sum_ending_here_prev_prev_prev = 0;\n    var max_sum_ending_here_prev_prev_prev_prev = 0;\n    var max_sum_ending_here_prev_prev_prev_prev_prev = 0;\n    var max_sum_ending_here_prev_prev_prev_prev_prev_prev = 0;\n    var max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev = 0;\n    var max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    var max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    var max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    var max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    var max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    var max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    var max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    var max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    var max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    let max_wrap = 0;\n    for(let i = 0; i < n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    let max_ending_here_wrap = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here_wrap = max_ending_here_wrap + a[i];\n        if(max_ending_here_wrap < 0){\n            max_ending_here_wrap = 0;\n        }\n        if(max_wrap < max_ending_here_wrap){\n            max_wrap = max_ending_here_wrap;\n        }\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(k == 1){\n        return max_sum;\n    }\n    return Math.max(max_sum, max_wrap);\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_ending_here = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n*k; i++){\n        max_ending_here += a[i%n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i%n];\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    var i = 0;\n    var j = 0;\n    while(j < k){\n        curr_sum = 0;\n        i = 0;\n        while(i < n){\n            curr_sum = curr_sum + a[i];\n            if(curr_sum < 0){\n                curr_sum = 0;\n            }\n            max_sum = Math.max(max_sum, curr_sum);\n            i++;\n        }\n        j++;\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    var i;\n    for(i=0; i<n; i++){\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for(i=0; i<n; i++){\n        curr_sum += (k-1)*a[i];\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = -Infinity;\n    for(let i=0; i<n; i++){\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    if(max_so_far === 0){\n        max_sum = max_element;\n    }else{\n        max_sum = max_so_far * k;\n    }\n    return max_sum;\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_so_far = -Infinity;\n    let max_ending_here = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n * k; i++){\n        max_ending_here += a[i % n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    console.log(start, end);\n    return max_so_far;\n}\n",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = -Infinity;\n    for(let i=0; i<n; i++){\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    if(max_element < 0){\n        return max_element;\n    }\n    let max_sum = max_so_far;\n    let sum = 0;\n    for(let i=0; i<n; i++){\n        sum += a[i];\n        a[i] = -a[i];\n    }\n    max_so_far = 0;\n    max_ending_here = 0;\n    for(let i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_sum + sum + max_so_far;\n    return max_sum * k;\n}\n",
    "    var max_so_far = 0;\n    var max_ending_here = 0;\n    var max_element = Number.MIN_SAFE_INTEGER;\n    var i;\n    var j;\n    for(i=0; i<n; i++){\n        max_element = Math.max(max_element, a[i]);\n    }\n    if(max_element < 0){\n        return max_element;\n    }\n    for(i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    var max_sum = max_so_far;\n    for(i=1; i<k; i++){\n        for(j=0; j<n; j++){\n            max_ending_here = max_ending_here + a[j];\n            if(max_ending_here < 0){\n                max_ending_here = 0;\n            }\n            if(max_so_far < max_ending_here){\n                max_so_far = max_ending_here;\n            }\n        }\n        max_sum = max_sum + max_so_far;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0, max_ending_here = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0)\n            max_ending_here = 0;\n        if(max_sum < max_ending_here)\n            max_sum = max_ending_here;\n    }\n    let max_wrap_sum = 0;\n    for(let i = 0; i < n; i++){\n        max_wrap_sum += a[i];\n        a[i] = -a[i];\n    }\n    max_wrap_sum = max_wrap_sum + max_sub_array_sum(a, n);\n    return Math.max(max_sum, max_wrap_sum * k);\n}\n",
    "    var max_so_far = 0;\n    var max_ending_here = 0;\n    var i, j;\n    for (i = 0; i < k; i++) {\n        for (j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n*k; i++){\n        max_ending_here += a[i%n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i+1;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i%n];\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    var max_so_far = 0;\n    var max_element = 0;\n    var i = 0;\n    var j = 0;\n    for(i = 0; i < n; i++){\n        if(a[i] > max_element){\n            max_element = a[i];\n        }\n    }\n    if(max_element < 0){\n        return max_element * k;\n    }\n    for(i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_so_far;\n    for(i = 1; i < k; i++){\n        for(j = 0; j < n; j++){\n            max_ending_here = max_ending_here + a[j];\n            if(max_ending_here < 0){\n                max_ending_here = 0;\n            }\n            if(max_so_far < max_ending_here){\n                max_so_far = max_ending_here;\n            }\n        }\n        max_sum = max_sum + max_so_far;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for(let i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    let max_wrap = 0;\n    for(let i=0; i<n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    max_wrap = max_wrap + max_sub_array_sum_repeated(a, n, 1);\n    if(max_wrap > max_sum){\n        max_sum = max_wrap;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n * k; i++){\n        max_ending_here = max_ending_here + a[i % n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    for(let i=0; i<n; i++){\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for(let i=0; i<n; i++){\n        curr_sum += (k-1)*a[i];\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    for(var i = 0; i < n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    var max_wrap = 0;\n    for(var i = 0; i < n; i++){\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    curr_sum = 0;\n    for(var i = 0; i < n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_wrap = Math.max(max_wrap, curr_sum);\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(k == 1){\n        return max_sum;\n    }\n    return Math.max(max_sum, max_wrap);\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    var max_so_far = 0;\n    var start = 0;\n    var end = 0;\n    var s = 0;\n    var i = 0;\n    var max_sum_kadane = 0;\n    var max_sum_kadane_index = 0;\n    for (i = 0; i < n; i++) {\n        max_sum_kadane += a[i];\n    }\n    for (i = 0; i < n; i++) {\n        max_ending_here += a[i];\n        if (max_ending_here > max_so_far) {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    max_sum = max_so_far;\n    if (max_sum_kadane * k == max_sum) {\n        return max_sum;\n    }\n    var max_sum_wrap = 0;\n    for (i = 0; i < n; i++) {\n        max_sum_wrap += a[i];\n        a[i] = -a[i];\n    }\n    max_ending_here = 0;\n    s = 0;\n    for (i = 0; i < n; i++) {\n        max_ending_here += a[i];\n        if (max_ending_here > max_so_far) {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    max_sum_wrap = max_sum_kadane + max_so_far;\n    if (max_sum > max_sum_wrap) {\n        return max_sum;\n    } else {\n        return max_sum_wrap;\n    }\n}",
    "    var max_sum = 0, max_ending_here = 0;\n    for(var i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    var max_wrap = 0;\n    for(var i=0; i<n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    max_wrap = max_wrap + max_sub_array_sum(a, n);\n    if(max_wrap > max_sum){\n        max_sum = max_wrap;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for(let i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    let max_wrap_sum = 0;\n    for(let i=0; i<n; i++){\n        max_wrap_sum = max_wrap_sum + a[i];\n        a[i] = -a[i];\n    }\n    let max_wrap_ending_here = 0;\n    for(let i=0; i<n; i++){\n        max_wrap_ending_here = max_wrap_ending_here + a[i];\n        if(max_wrap_ending_here < 0){\n            max_wrap_ending_here = 0;\n        }\n        if(max_wrap_sum < max_wrap_ending_here){\n            max_wrap_sum = max_wrap_ending_here;\n        }\n    }\n    let max_sum_k = max_wrap_sum + (k-2)*max_wrap_sum;\n    return Math.max(max_sum, max_sum_k);\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    for(let i = 0; i < n; i++){\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for(let i = 0; i < n; i++){\n        curr_sum += (k - 1) * a[i];\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    for(let i = 0; i < n; i++){\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for(let i = 0; i < n; i++){\n        curr_sum += (a[i] * (k - 1));\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    for(var i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    var max_wrap = 0;\n    for(var i = 0; i < n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    var max_ending_here = 0;\n    for(var i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_wrap < max_ending_here){\n            max_wrap = max_ending_here;\n        }\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(k == 1){\n        return max_sum;\n    }\n    else if(k == 2){\n        return Math.max(max_sum, max_wrap);\n    }\n    else{\n        return Math.max(max_sum, max_wrap, max_sum + (k - 2) * max_wrap);\n    }\n}\n",
    "    let max_sum = 0, max_ending_here = 0;\n    for(let i=0; i<n; i++){\n        max_ending_here += a[i];\n        if(max_ending_here < 0)\n            max_ending_here = 0;\n        if(max_sum < max_ending_here)\n            max_sum = max_ending_here;\n    }\n    let max_wrap = 0;\n    for(let i=0; i<n; i++){\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    let max_ending_here_wrap = 0;\n    for(let i=0; i<n; i++){\n        max_ending_here_wrap += a[i];\n        if(max_ending_here_wrap < 0)\n            max_ending_here_wrap = 0;\n        if(max_wrap < max_ending_here_wrap)\n            max_wrap = max_ending_here_wrap;\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(k == 1)\n        return max_sum;\n    else if(k == 2)\n        return Math.max(max_sum, max_wrap);\n    else\n        return Math.max(max_sum, max_wrap + max_sum * (k - 2));\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let i = 0;\n    while(i < n){\n        max_ending_here += a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n        i++;\n    }\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        sum += a[i];\n    }\n    if(sum > 0){\n        max_sum = max_sum + (k - 2) * sum;\n    }\n    let max_wrap = 0;\n    let max_wrap_ending_here = 0;\n    for(let i = 0; i < n; i++){\n        max_wrap_ending_here += a[i];\n        if(max_wrap_ending_here < 0){\n            max_wrap_ending_here = 0;\n        }\n        if(max_wrap < max_wrap_ending_here){\n            max_wrap = max_wrap_ending_here;\n        }\n    }\n    max_wrap = max_wrap + sum * (k - 1);\n    return Math.max(max_sum, max_wrap);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n * k; i++){\n        max_ending_here += a[i % n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }else if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    for(var i = 0; i < n * k; i++){\n        max_ending_here = max_ending_here + a[i % n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    var max_so_far = 0;\n    var i;\n    for(i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_so_far * k;\n    var max_wrap = 0;\n    for(i=0; i<n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    max_ending_here = 0;\n    for(i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    max_wrap = max_wrap + max_so_far;\n    if(max_wrap > max_sum){\n        max_sum = max_wrap;\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    var i = 0;\n    var j = 0;\n    var max_sum_index = 0;\n    var max_sum_index_end = 0;\n    var max_sum_index_start = 0;\n    var max_sum_index_end_temp = 0;\n    var max_sum_index_start_temp = 0;\n    var max_sum_index_temp = 0;\n    var curr_sum_index = 0;\n    var curr_sum_index_start = 0;\n    var curr_sum_index_end = 0;\n    var curr_sum_index_start_temp = 0;\n    var curr_sum_index_end_temp = 0;\n    var curr_sum_index_temp = 0;\n    var max_sum_index_temp_start = 0;\n    var max_sum_index_temp_end = 0;\n    var max_sum_index_temp_start_temp = 0;\n    var max_sum_index_temp_end_temp = 0;\n    var max_sum_index_temp_temp = 0;\n    var max_sum_index_temp_start_temp_temp = 0;\n    var max_sum_index_temp_end_temp_temp = 0;\n    var max_sum_index_temp_temp_temp = 0;\n    var curr_sum_index_temp_start = 0;\n    var curr_sum_index_temp_end = 0;\n    var curr_sum_index_temp_start_temp = 0;\n    var curr_sum_index_temp_end_temp = 0;\n    var curr_sum_index_temp_temp = 0;\n    var curr_sum_index_temp_start_temp_temp = 0;\n    var curr_sum_index_temp_end_temp_temp = 0;\n    var curr_sum_index_temp_temp_temp = 0;\n    var max_sum_index_temp_start_temp_temp_temp = 0;\n    var max_sum_index_temp_end_temp_temp",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let max_sum_ending_here_prev = 0;\n    let max_sum_ending_here_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    let max_wrap = 0;\n    for(let i = 0; i < n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    max_wrap = max_wrap + max_sub_array_sum_repeated(a, n, 1);\n    if(max_wrap > max_sum){\n        return max_wrap;\n    }\n    return max_sum;\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    for(let i = 0; i < n*k; i++){\n        max_ending_here = max_ending_here + a[i%n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0, max_ending_here = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    let max_wrap = 0;\n    for(let i = 0; i < n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    max_wrap = max_wrap + max_sub_array_sum(a, n);\n    if(max_wrap > max_sum){\n        max_sum = max_wrap;\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        sum += a[i];\n    }\n    max_sum = sum;\n    for(var i = 0; i < n; i++){\n        sum = sum - a[n - i - 1] + a[i];\n        max_sum = Math.max(max_sum, sum);\n    }\n    return max_sum * k;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let i = 0;\n    while(i < k){\n        curr_sum = 0;\n        for(let j = 0; j < n; j++){\n            curr_sum += a[j];\n            max_sum = Math.max(max_sum, curr_sum);\n            if(curr_sum < 0){\n                curr_sum = 0;\n            }\n        }\n        i++;\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    for(var i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    var max_wrap = 0;\n    for(var i=0; i<n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    max_wrap = max_wrap + max_sub_array_sum_repeated(a, n, 1);\n    if(max_wrap > max_sum){\n        return max_wrap;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_element = -Infinity;\n    let sum_of_all_elements = 0;\n    for(let i = 0; i < n; i++){\n        max_element = Math.max(max_element, a[i]);\n        sum_of_all_elements += a[i];\n        curr_sum += a[i];\n        if(i % n == n - 1){\n            curr_sum = Math.max(curr_sum, 0);\n        }\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    if(max_element < 0){\n        return max_element;\n    }\n    return Math.max(max_sum, sum_of_all_elements * k);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i=0; i<n*k; i++){\n        max_ending_here += a[i%n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i+1;\n        }\n    }\n    for(let i=start; i<=end; i++){\n        max_sum += a[i%n];\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        sum += a[i];\n    }\n    max_sum = sum;\n    for(var i = 0; i < n; i++){\n        sum = sum + (k - 1) * a[i];\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n",
    "    // k times sum of all elements\n    var sum = 0;\n    for (var i = 0; i < n; i++)\n        sum += a[i];\n    sum = sum * k;\n\n    // Compute sum of i*arr[i] for\n    // initial configuration.\n    var curr_val = 0;\n    for (var i = 0; i < n; i++)\n        curr_val += i * a[i];\n\n    // Initialize result\n    var res = curr_val;\n\n    // Compute values for other iterations\n    for (var i = 1; i < k; i++) {\n        // Compute next value using previous\n        // value in O(1) time\n        var next_val = curr_val - (sum - n * a[n - 1]);\n\n        // Update current value\n        curr_val = next_val;\n\n        // Update result if required\n        res = Math.max(res, next_val);\n    }\n\n    return res;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    var max_so_far = 0;\n    var i;\n    for(i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_so_far * k;\n    max_so_far = 0;\n    for(i=0; i<n; i++){\n        max_so_far = max_so_far + a[i];\n    }\n    var min_sum = max_so_far * k;\n    max_so_far = 0;\n    var min_ending_here = 0;\n    for(i=0; i<n; i++){\n        min_ending_here = min_ending_here + a[i];\n        if(min_ending_here > 0){\n            min_ending_here = 0;\n        }\n        if(min_ending_here < max_so_far){\n            max_so_far = min_ending_here;\n        }\n    }\n    min_sum = min_sum + max_so_far;\n    return Math.max(max_sum, min_sum);\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_sum_so_far = 0;\n    for(let i = 0; i < n; i++){\n        max_sum_so_far += a[i];\n    }\n    max_sum = max_sum_so_far;\n    for(let i = 0; i < n; i++){\n        curr_sum += a[i];\n        if(i < n - 1){\n            max_sum_so_far += a[i];\n        }\n        max_sum = Math.max(max_sum, curr_sum + (k - 2) * max_sum_so_far);\n        curr_sum = Math.max(curr_sum, 0);\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_sum_so_far = 0;\n    var max_element = -Infinity;\n    var sum_of_all_elements = 0;\n    for(var i=0; i<n; i++){\n        max_element = Math.max(max_element, a[i]);\n        max_sum_so_far = Math.max(a[i], max_sum_so_far + a[i]);\n        max_sum = Math.max(max_sum, max_sum_so_far);\n        sum_of_all_elements += a[i];\n    }\n    if(max_sum < 0){\n        return max_sum;\n    }\n    if(k == 2){\n        return max_sum + sum_of_all_elements;\n    }\n    return max_sum + (k-2)*sum_of_all_elements + max_element;\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n*k; i++) {\n        max_ending_here = max_ending_here + a[i%n];\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i, j;\n    for (i = 0; i < k; i++){\n        max_ending_here = 0;\n        for (j = 0; j < n; j++){\n            max_ending_here = max_ending_here + a[j];\n            if (max_ending_here < 0){\n                max_ending_here = 0;\n            }\n            if (max_so_far < max_ending_here){\n                max_so_far = max_ending_here;\n            }\n        }\n    }\n    return max_so_far;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    var max_so_far = 0;\n    var start = 0;\n    var end = 0;\n    var s = 0;\n    for(var i = 0; i < n*k; i++){\n        max_ending_here = max_ending_here + a[i%n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i+1;\n        }\n    }\n    console.log(start, end);\n    return max_so_far;\n}\n",
    "    var max_sum = 0,\n        max_ending_here = 0;\n    for(var i = 0; i < n * k; i++){\n        max_ending_here = max_ending_here + a[i % n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    var i;\n    for(i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    var max_wrap = 0;\n    for(i=0; i<n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    var max_ending_here = 0;\n    for(i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_wrap < max_ending_here){\n            max_wrap = max_ending_here;\n        }\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(k == 1){\n        return max_sum;\n    }\n    if(max_wrap > max_sum){\n        return max_wrap;\n    }\n    else{\n        return max_sum;\n    }\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n*k; i++){\n        max_ending_here += a[i%n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i%n];\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    for(var i=0; i<n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    var max_wrap_sum = 0;\n    for(var i=0; i<n; i++){\n        max_wrap_sum += a[i];\n        a[i] = -a[i];\n    }\n    curr_sum = 0;\n    for(var i=0; i<n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_wrap_sum = Math.max(max_wrap_sum, curr_sum);\n    }\n    max_wrap_sum = Math.max(max_wrap_sum, 0);\n    if(k == 1){\n        return max_sum;\n    }\n    return Math.max(max_sum, max_wrap_sum + (k-2)*max_wrap_sum);\n}\n",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = -Infinity;\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        max_element = Math.max(max_element, a[i]);\n        sum += a[i];\n        max_ending_here = Math.max(max_ending_here + a[i], a[i]);\n        max_so_far = Math.max(max_so_far, max_ending_here);\n    }\n    if(max_element < 0){\n        return max_element;\n    }\n    let max_sum = max_so_far;\n    for(let i = 1; i < k; i++){\n        max_so_far = Math.max(max_so_far, sum + max_so_far);\n        sum += sum;\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n * k; i++){\n        max_ending_here += a[i % n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n*k; i++){\n        max_ending_here += a[i%n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i+1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i%n];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n\n    for(let i = 0; i < n * k; i++){\n        max_ending_here += a[i % n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    var max_sum_so_far = 0;\n    var i = 0;\n    var j = 0;\n    for(i = 0; i < n; i++){\n        max_sum_so_far += a[i];\n    }\n    max_sum = max_sum_so_far;\n    for(i = 0; i < n; i++){\n        curr_sum += a[i];\n        if(curr_sum < 0){\n            curr_sum = 0;\n        }\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    max_sum = Math.max(max_sum, (max_sum_so_far * (k - 2)) + curr_sum);\n    return max_sum;\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n    }\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    max_wrap = max_wrap + max_sub_array_sum(a, n);\n    return Math.max(max_so_far, max_wrap * k);\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    for(let i=0; i<n; i++){\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for(let i=0; i<n; i++){\n        curr_sum += (a[i]*(k-1));\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0,\n        max_ending_here = 0,\n        i,\n        j;\n    for (i = 0; i < k; i++) {\n        max_ending_here = 0;\n        for (j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_sum < max_ending_here)\n                max_sum = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n * k; i++){\n        max_ending_here += a[i % n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }else if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    return max_so_far;\n}\n",
    "    var max_sum = 0;\n    var sum = 0;\n    var i;\n    for (i = 0; i < n; i++){\n        sum += a[i];\n    }\n    max_sum = sum;\n    for (i = n; i < n * k; i++){\n        sum += a[i % n] - a[(i - n) % n];\n        max_sum = Math.max(max_sum, sum);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n*k; i++){\n        max_ending_here += a[i%n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i%n];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0,\n        window_sum = 0,\n        window_start = 0;\n    for (let window_end = 0; window_end < n; window_end++) {\n        window_sum += a[window_end];\n        if (window_end >= k - 1) {\n            max_sum = Math.max(max_sum, window_sum);\n            window_sum -= a[window_start];\n            window_start += 1;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n * k; i++){\n        max_ending_here += a[i % n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n*k; i++){\n        max_ending_here += a[i%n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i+1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i%n];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    let max_wrap = 0;\n    for(let i = 0; i < n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    max_wrap = max_wrap + max_sub_array_sum(a, n);\n    if(max_wrap > max_sum){\n        max_sum = max_wrap;\n    }\n    max_sum = max_sum * k;\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_sum_so_far = 0;\n    let i = 0;\n    while(i < k){\n        max_sum_so_far = 0;\n        for(let j = 0; j < n; j++){\n            curr_sum += a[j];\n            if(curr_sum < 0){\n                curr_sum = 0;\n            }\n            if(max_sum_so_far < curr_sum){\n                max_sum_so_far = curr_sum;\n            }\n        }\n        max_sum += max_sum_so_far;\n        i++;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n * k; i++){\n        max_ending_here += a[i % n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = -Infinity;\n    let i;\n    for(i=0; i<n; i++){\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    if(max_so_far === 0){\n        max_so_far = max_element;\n    }\n    max_sum = max_so_far * k;\n    let sum = 0;\n    for(i=0; i<n; i++){\n        sum += a[i];\n    }\n    max_sum = Math.max(max_sum, sum);\n    return max_sum;\n}\n",
    "    let max_sum = 0,\n        window_sum = 0,\n        window_start = 0;\n    for (let window_end = 0; window_end < n; window_end++) {\n        window_sum += a[window_end];\n        if (window_end >= k - 1) {\n            max_sum = Math.max(max_sum, window_sum);\n            window_sum -= a[window_start];\n            window_start += 1;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here += a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    let max_wrap = 0;\n    for(let i = 0; i < n; i++){\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    let max_ending_here_wrap = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here_wrap += a[i];\n        if(max_ending_here_wrap < 0){\n            max_ending_here_wrap = 0;\n        }\n        if(max_wrap < max_ending_here_wrap){\n            max_wrap = max_ending_here_wrap;\n        }\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(k == 1){\n        return max_sum;\n    }\n    return Math.max(max_sum, max_wrap);\n}",
    "    let max_sum = 0, max_ending_here = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here += a[i];\n        if(max_ending_here < 0)\n            max_ending_here = 0;\n        if(max_sum < max_ending_here)\n            max_sum = max_ending_here;\n    }\n    let max_wrap = 0;\n    for(let i = 0; i < n; i++){\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    let max_ending_here_wrap = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here_wrap += a[i];\n        if(max_ending_here_wrap < 0)\n            max_ending_here_wrap = 0;\n        if(max_wrap < max_ending_here_wrap)\n            max_wrap = max_ending_here_wrap;\n    }\n    max_wrap = max_wrap + max_wrap;\n    if(k == 1)\n        return max_sum;\n    else if(k == 2)\n        return Math.max(max_sum, max_wrap);\n    else\n        return Math.max(max_sum, max_wrap, max_sum + (k - 2) * max_wrap);\n}\n",
    "    var max_so_far = 0;\n    var max_ending_here = 0;\n    var max_element = -Infinity;\n    var i;\n    for(i=0; i<n; i++){\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    if(max_element < 0){\n        return max_element;\n    }\n    var max_sum = max_so_far;\n    var curr_max = max_so_far;\n    for(i=1; i<k; i++){\n        curr_max = curr_max + max_so_far;\n        max_sum = Math.max(max_sum, curr_max);\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    for(var i=0; i<n*k; i++){\n        max_ending_here = max_ending_here + a[i%n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    for(let i = 0; i < n; i++){\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for(let i = 0; i < n; i++){\n        curr_sum += (a[i] * (k - 1));\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n\nlet a = [1, 2, 3];\nlet n = a.length;\nlet k = 2;",
    "    let max_sum = 0,\n        window_sum = 0,\n        window_start = 0;\n    for (let window_end = 0; window_end < n; window_end++) {\n        window_sum += a[window_end];\n        if (window_end >= k - 1) {\n            max_sum = Math.max(max_sum, window_sum);\n            window_sum -= a[window_start];\n            window_start += 1;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = -Infinity;\n    for(let i = 0; i < n; i++){\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    if(max_so_far === 0){\n        return max_element;\n    }\n    let max_wrap = 0;\n    for(let i = 0; i < n; i++){\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    let max_ending_here = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    max_wrap = max_wrap + max_so_far;\n    return Math.max(max_wrap, max_so_far) / (k - 2);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = a[0];\n    for(let i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n        if(max_element < a[i]){\n            max_element = a[i];\n        }\n    }\n    if(max_so_far == 0){\n        max_sum = max_element;\n    }else{\n        max_sum = max_so_far * k;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n*k; i++){\n        max_ending_here += a[i%n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i%n];\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    var max_so_far = 0;\n    var max_element = 0;\n    var i = 0;\n    var j = 0;\n    var sum = 0;\n    var start = 0;\n    var end = 0;\n    var s = 0;\n\n    for(i = 0; i < n; i++){\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n\n    if(max_so_far == 0){\n        max_so_far = max_element;\n    }\n\n    for(i = 0; i < n; i++){\n        sum = sum + a[i];\n    }\n\n    max_sum = max_so_far * k;\n\n    if(sum > 0){\n        max_sum = max_sum + (k - 2) * sum;\n    }\n\n    for(i = 0; i < start; i++){\n        max_sum = max_sum + a[i];\n    }\n\n    for(i = end + 1; i < n; i++){\n        max_sum = max_sum + a[i];\n    }\n\n    return max_sum;\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n*k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    return max_so_far;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    var max_so_far = 0;\n    var start = 0;\n    var end = 0;\n    var s = 0;\n    for(var i = 0; i < n * k; i++){\n        max_ending_here = max_ending_here + a[i % n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    return max_so_far;\n}\n",
    "    var max_sum = 0;\n    var max_sum_so_far = 0;\n    var max_sum_ending_here = 0;\n    var i, j;\n    for (i = 0; i < k; i++) {\n        max_sum_ending_here = 0;\n        for (j = 0; j < n; j++) {\n            max_sum_ending_here = max_sum_ending_here + a[j];\n            if (max_sum_ending_here < 0)\n                max_sum_ending_here = 0;\n            if (max_sum < max_sum_ending_here)\n                max_sum = max_sum_ending_here;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n * k; i++){\n        max_ending_here += a[i % n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    for(let i=0; i<n; i++){\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for(let i=0; i<n; i++){\n        curr_sum += (a[i] * (k-1));\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let max_sum_ending_here_prev = 0;\n    let max_sum_ending_here_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev",
    "    var max_sum = 0;\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        sum += a[i];\n    }\n    max_sum = sum;\n    for(var i = 0; i < n; i++){\n        sum += a[i] * (k - 1);\n        max_sum = Math.max(max_sum, sum);\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    for(var i=0; i<n; i++){\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for(var i=0; i<n; i++){\n        curr_sum += (k-1)*a[i];\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let max_i = 0;\n    let max_j = 0;\n    let max_ending_here_i = 0;\n    let max_ending_here_j = 0;\n    let max_so_far_i = 0;\n    let max_so_far_j = 0;\n    let max_sum_i = 0;\n    let max_sum_j = 0;\n    for(let k = 0; k < n; k++){\n        max_ending_here += a[k];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            i = k + 1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            max_i = i;\n            max_j = k;\n        }\n    }\n    max_sum = max_so_far;\n    max_ending_here = 0;\n    max_so_far = 0;\n    i = 0;\n    j = 0;\n    for(let k = 0; k < n; k++){\n        max_ending_here += a[k];\n        if(max_ending_here > 0){\n            max_ending_here = 0;\n            i = k + 1;\n        }\n        if(max_so_far > max_ending_here){\n            max_so_far = max_ending_here;\n            max_ending_here_i = i;\n            max_ending_here_j = k;\n        }\n    }\n    max_sum += max_so_far;\n    max_so_far = 0;\n    i = 0;\n    j = 0;\n    for(let k = 0; k < n; k++){\n        max_so_far += a[k];\n        if(max_so_far < 0){\n            max_so_far = 0;\n            i = k + 1;\n        }\n       ",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n * k; i++){\n        max_ending_here = max_ending_here + a[i % n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    console.log(max_so_far);\n    return [start, end];\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    for(i = 0; i < n; i++){\n        sum += a[i];\n    }\n    max_so_far = sum;\n    for(i = 1; i < k; i++){\n        for(j = 0; j < n; j++){\n            max_ending_here = Math.max(a[j], max_ending_here + a[j]);\n            max_so_far = Math.max(max_so_far, max_ending_here);\n        }\n        max_sum += max_so_far;\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0, max_ending_here = 0;\n    for (var i = 0; i < n; i++)\n    {\n        max_ending_here = max_ending_here + a[i];\n        if (max_sum < max_ending_here)\n            max_sum = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    var max_sum_so_far = max_sum;\n    for (var i = 0; i < n; i++)\n    {\n        max_sum = max_sum + a[i];\n        if (max_sum_so_far < max_sum)\n            max_sum_so_far = max_sum;\n    }\n    return max_sum_so_far * k;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_sum_so_far = 0;\n    for(let i = 0; i < n; i++){\n        max_sum_so_far += a[i];\n    }\n    max_sum = max_sum_so_far;\n    for(let i = 0; i < n; i++){\n        curr_sum += a[i];\n        if(i < n-1){\n            max_sum_so_far += a[i];\n        }\n        max_sum = Math.max(max_sum, curr_sum + (k-2)*max_sum_so_far);\n        curr_sum = Math.max(curr_sum, 0);\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    var max_so_far = 0;\n    var start = 0;\n    var end = 0;\n    var s = 0;\n    for(var i=0; i<n*k; i++){\n        max_ending_here = max_ending_here + a[i%n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i+1;\n        }\n    }\n    console.log(max_so_far);\n    return max_so_far;\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    for(var i=0; i<n; i++){\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for(var i=0; i<n; i++){\n        curr_sum += (k-1)*a[i];\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n",
    "    var max_so_far = 0;\n    var max_ending_here = 0;\n    for(var i=0; i<n*k; i++){\n        max_ending_here = max_ending_here + a[i%n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n    }\n    let max_wrap = 0;\n    for(let i = 0; i < n; i++){\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    max_wrap = max_wrap + max_sub_array_sum(a, n);\n    if(max_wrap > max_sum){\n        max_sum = max_wrap;\n    }\n    max_sum = max_sum * k;\n    return max_sum;\n}\n",
    "    var max_so_far = 0;\n    var max_ending_here = 0;\n    var max_element = -Infinity;\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        max_element = Math.max(max_element, a[i]);\n        sum += a[i];\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    if(max_element < 0){\n        return max_element;\n    }\n    var max_sum = max_so_far;\n    var max_suffix_sum = 0;\n    var max_prefix_sum = 0;\n    for(var i = 0; i < n; i++){\n        max_suffix_sum += a[i];\n        max_suffix_sum = Math.max(max_suffix_sum, 0);\n    }\n    for(var i = n - 1; i >= 0; i--){\n        max_prefix_sum += a[i];\n        max_prefix_sum = Math.max(max_prefix_sum, 0);\n    }\n    max_sum = Math.max(max_sum, max_suffix_sum + max_prefix_sum);\n    return max_sum + (k - 2) * sum;\n}\n",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = -Infinity;\n    let sum = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i=0; i<n*k; i++){\n        max_element = Math.max(max_element, a[i%n]);\n        max_ending_here += a[i%n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i+1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        sum += a[i%n];\n    }\n    if(sum == 0){\n        max_so_far = max_element;\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_sum_so_far = 0;\n    for(let i = 0; i < n; i++){\n        max_sum_so_far += a[i];\n    }\n    max_sum = max_sum_so_far;\n    for(let i = 0; i < n; i++){\n        curr_sum += a[i];\n        if(i < n - 1){\n            max_sum_so_far += a[i];\n        }\n        max_sum = Math.max(max_sum, curr_sum + (k - 2) * max_sum_so_far);\n        curr_sum = Math.max(curr_sum, 0);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i=0; i<n*k; i++){\n        max_ending_here += a[i%n];\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i+1;\n        }\n    }\n    for(let i=start; i<=end; i++){\n        max_sum += a[i%n];\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    var max_so_far = 0;\n    var i = 0;\n    var j = 0;\n    var max_index = 0;\n    var min_index = 0;\n    var min_sum = 0;\n    var min_ending_here = 0;\n    var min_so_far = 0;\n    for(i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            j = i + 1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            max_index = i;\n        }\n    }\n    for(i = 0; i < n; i++){\n        min_ending_here = min_ending_here + a[i];\n        if(min_ending_here > 0){\n            min_ending_here = 0;\n            j = i + 1;\n        }\n        if(min_so_far > min_ending_here){\n            min_so_far = min_ending_here;\n            min_index = i;\n        }\n    }\n    max_sum = max_so_far;\n    min_sum = min_so_far;\n    for(i = 1; i < k; i++){\n        if(max_sum < 0){\n            max_sum = max_sum + min_sum;\n        }\n        else{\n            max_sum = max_sum + max_sum;\n        }\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    for(var i = 0; i < n*k; i++){\n        max_ending_here = max_ending_here + a[i%n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_sum < max_ending_here){\n            max_sum = max_ending_here;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0, max_ending_here = 0;\n    for(let i = 0; i < n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0)\n            max_ending_here = 0;\n        if(max_sum < max_ending_here)\n            max_sum = max_ending_here;\n    }\n    let max_wrap = 0;\n    for(let i = 0; i < n; i++){\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    max_wrap = max_wrap + max_sub_array_sum(a, n);\n    if(max_wrap > max_sum)\n        max_sum = max_wrap;\n    max_sum = max_sum * k;\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var max_ending_here = 0;\n    var max_so_far = 0;\n    var i;\n    for(i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_so_far * k;\n    for(i=0; i<n; i++){\n        max_ending_here = max_ending_here + a[i];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_sum + max_so_far;\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    for(let i = 0; i < n; i++){\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for(let i = 0; i < n; i++){\n        curr_sum += (a[i] * (k - 1));\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0,\n        window_sum = 0,\n        window_start = 0;\n    for (let window_end = 0; window_end < n; window_end++) {\n        window_sum += a[window_end];\n        if (window_end >= k - 1) {\n            max_sum = Math.max(max_sum, window_sum);\n            window_sum -= a[window_start];\n            window_start += 1;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for(let i = 0; i < n * k; i++){\n        max_ending_here += a[i % n];\n        if(max_ending_here < 0){\n            max_ending_here = 0;\n            s = i + 1;\n        }\n        if(max_so_far < max_ending_here){\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n    }\n    for(let i = start; i <= end; i++){\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    for (var i = 0; i < n; i++){\n        curr_sum = curr_sum + a[i];\n    }\n    max_sum = curr_sum;\n    for (var i = 0; i < n; i++){\n        curr_sum = curr_sum + (a[i] * (k - 1));\n        if (curr_sum > max_sum){\n            max_sum = curr_sum;\n        }\n    }\n    return max_sum;\n}\n",
    "    var max_sum = 0;\n    var curr_sum = 0;\n    for(var i=0; i<n; i++){\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for(var i=0; i<n; i++){\n        curr_sum += (a[i]*(k-1));\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n"
  ]
}
{
  "name": "mbpp_283_validate",
  "language": "js",
  "prompt": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_283_validate.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    let arr = n.toString().split('');\n    let obj = {};\n    for(let i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for(let key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var num = n.toString();\n    var freq = {};\n    for(var i=0; i<num.length; i++){\n        if(freq[num[i]]){\n            freq[num[i]]++;\n        }\n        else{\n            freq[num[i]] = 1;\n        }\n    }\n    for(var i=0; i<num.length; i++){\n        if(freq[num[i]] > num[i]){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var n = n.toString();\n    var arr = n.split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] = obj[arr[i]] + 1;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]] > parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0; i<arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var s = n.toString();\n    var freq = {};\n    for(var i = 0; i < s.length; i++){\n        if(freq[s[i]]){\n            freq[s[i]] += 1;\n        }\n        else{\n            freq[s[i]] = 1;\n        }\n    }\n    for(var i = 0; i < s.length; i++){\n        if(freq[s[i]] > parseInt(s[i])){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=0;j<arr.length;j++){\n            if(arr[i]==arr[j]){\n                count++;\n            }\n        }\n        if(count>arr[i]){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = {};\n    for(var i=0;i<arr.length;i++){\n        if(count[arr[i]]){\n            count[arr[i]]++;\n        }\n        else{\n            count[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(count[arr[i]] > parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var freq = {};\n    for(var i=0; i<arr.length; i++){\n        if(freq[arr[i]]){\n            freq[arr[i]] += 1;\n        }\n        else{\n            freq[arr[i]] = 1;\n        }\n    }\n    for(var i=0; i<arr.length; i++){\n        if(freq[arr[i]] > parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]] === undefined){\n            obj[arr[i]] = 1;\n        } else {\n            obj[arr[i]]++;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var count = 0;\n    var count1 = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count <= parseInt(arr[i])){\n            count1++;\n        }\n        count = 0;\n    }\n    if(count1 == arr.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    let arr = n.toString().split('');\n    let obj = {};\n    for(let i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(let i=0;i<arr.length;i++){\n        if(obj[arr[i]]>arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        var ch = str.charAt(i);\n        for(var j=0;j<str.length;j++){\n            if(ch==str.charAt(j)){\n                count++;\n            }\n        }\n        if(count>parseInt(ch)){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nvar res = validate(1223);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var freq = {};\n    for(var i=0; i<arr.length; i++){\n        if(freq[arr[i]]){\n            freq[arr[i]]++;\n        }\n        else{\n            freq[arr[i]] = 1;\n        }\n    }\n    for(var i=0; i<arr.length; i++){\n        if(freq[arr[i]] > parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0; i<arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var num = n.toString();\n    var freq = {};\n    for(var i=0; i<num.length; i++){\n        if(num[i] in freq){\n            freq[num[i]]++;\n        }\n        else{\n            freq[num[i]] = 1;\n        }\n    }\n    for(var i=0; i<num.length; i++){\n        if(freq[num[i]] > parseInt(num[i])){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    let str = n.toString();\n    let count = 0;\n    for(let i=0;i<str.length;i++){\n        let digit = parseInt(str[i]);\n        for(let j=0;j<str.length;j++){\n            if(digit == parseInt(str[j])){\n                count++;\n            }\n        }\n        if(count > digit){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key]>key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]] > arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var n = n.toString();\n    var arr = n.split(\"\");\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var freq = {};\n    for(var i = 0; i < str.length; i++){\n        var char = str.charAt(i);\n        if(freq[char]){\n            freq[char]++;\n        }else{\n            freq[char] = 1;\n        }\n    }\n    for(var key in freq){\n        if(freq[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var num = n.toString();\n    var arr = num.split(\"\");\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key]>key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var freq = {};\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]]){\n            freq[arr[i]]++;\n        }\n        else{\n            freq[arr[i]] = 1;\n        }\n    }\n    var flag = true;\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]]>arr[i]){\n            flag = false;\n            break;\n        }\n    }\n    if(flag){\n        console.log(\"True\");\n    }\n    else{\n        console.log(\"False\");\n    }\n}\nvalidate(1234);\nvalidate(1243);\nvalidate(1222);\nvalidate(1233);\nvalidate(1222);\nvalidate(1234);\nvalidate(1243);\nvalidate(1222);\nvalidate(1233);\nvalidate(1222);\nvalidate(1234);\nvalidate(1243);\nvalidate(1222);\nvalidate(1233);\nvalidate(1222);\nvalidate(1234);\nvalidate(1243);\nvalidate(1222);\nvalidate(1233);\nvalidate(1222);\nvalidate(1234);\nvalidate(1243);\nvalidate(1222);\nvalidate(1233);\nvalidate(1222);\nvalidate(1234);\nvalidate(1243);\nvalidate(1222);\nvalidate(1233);\nvalidate(1222);\nvalidate(1234);\nvalidate(1243);\nvalidate(1222);\nvalidate(1233);\nvalidate(1222);\nvalidate(1234);\nvalidate(1243);\nvalidate(1222);\nvalidate(1233);\nvalidate(1222);\nvalidate(1234);\nvalidate(1243);\nvalidate(1222);\nvalidate(1233);\nvalidate(1222);\nvalidate(1234);\nvalidate(12\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "/tmp/tmpblha8nd1.js:74\nvalidate(12\n         ^^\n\nSyntaxError: missing ) after argument list\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var num = n.toString();\n    var freq = {};\n    for(var i=0;i<num.length;i++){\n        if(freq[num[i]]){\n            freq[num[i]]++;\n        }else{\n            freq[num[i]] = 1;\n        }\n    }\n    for(var i=0;i<num.length;i++){\n        if(freq[num[i]]>num[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = {};\n    for(var i = 0; i < arr.length; i++){\n        if(count[arr[i]] === undefined){\n            count[arr[i]] = 1;\n        }else{\n            count[arr[i]]++;\n        }\n    }\n    for(var key in count){\n        if(count[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = {};\n    for(var i = 0; i < arr.length; i++){\n        if(count[arr[i]]){\n            count[arr[i]]++;\n        }else{\n            count[arr[i]] = 1;\n        }\n    }\n    for(var i = 0; i < arr.length; i++){\n        if(count[arr[i]] > parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key]>key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > arr[i]){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var freq = {};\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]]){\n            freq[arr[i]]++;\n        }\n        else{\n            freq[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]]>arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]] > arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = {};\n    for(var i=0;i<arr.length;i++){\n        if(count[arr[i]]){\n            count[arr[i]]++;\n        }else{\n            count[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(count[arr[i]]>arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var count = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=0;j<arr.length;j++){\n            if(arr[i]==arr[j]){\n                count++;\n            }\n        }\n        if(count>parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]] > parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var count = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=0;j<arr.length;j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    let str = n.toString();\n    let count = 0;\n    for(let i=0;i<str.length;i++){\n        count = 0;\n        for(let j=0;j<str.length;j++){\n            if(str[i]==str[j]){\n                count++;\n            }\n        }\n        if(count>parseInt(str[i])){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]] > arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]>arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]] === undefined){\n            obj[arr[i]] = 1;\n        }else{\n            obj[arr[i]] += 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key]>key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var count = {};\n    for(var i=0;i<arr.length;i++){\n        if(count[arr[i]]){\n            count[arr[i]]++;\n        }\n        else{\n            count[arr[i]]=1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(count[arr[i]]>arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > parseInt(key)){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i=0; i<arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]] > parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split(\"\");\n    var freq = {};\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]]){\n            freq[arr[i]] += 1;\n        }\n        else{\n            freq[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]] > parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]>arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var num = n.toString();\n    var freq = {};\n    for(var i=0;i<num.length;i++){\n        if(freq[num[i]]){\n            freq[num[i]]++;\n        }\n        else{\n            freq[num[i]] = 1;\n        }\n    }\n    for(var i=0;i<num.length;i++){\n        if(freq[num[i]] > parseInt(num[i])){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > arr[i]){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var n = n.toString();\n    var arr = n.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var freq = {};\n    for(var i=0;i<str.length;i++){\n        if(freq[str[i]]){\n            freq[str[i]]++;\n        }\n        else{\n            freq[str[i]] = 1;\n        }\n    }\n    for(var i=0;i<str.length;i++){\n        if(freq[str[i]]>str[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        if (obj[str[i]]) {\n            obj[str[i]]++;\n        } else {\n            obj[str[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > key) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var obj = {};\n    for(var i=0;i<str.length;i++){\n        if(obj[str[i]]){\n            obj[str[i]]++;\n        }else{\n            obj[str[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key]>parseInt(key)){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var freq = {};\n    for(var i=0;i<str.length;i++){\n        if(freq[str[i]]){\n            freq[str[i]]++;\n        }else{\n            freq[str[i]] = 1;\n        }\n    }\n    for(var i=0;i<str.length;i++){\n        if(freq[str[i]]>parseInt(str[i])){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    let str = n.toString();\n    let obj = {};\n    for(let i=0;i<str.length;i++){\n        if(obj[str[i]]){\n            obj[str[i]]++;\n        }else{\n            obj[str[i]] = 1;\n        }\n    }\n    let flag = true;\n    for(let key in obj){\n        if(obj[key]>key){\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    var flag = true;\n    for(var key in obj){\n        if(obj[key] > key){\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var count = {};\n    for(var i = 0; i < arr.length; i++){\n        if(count[arr[i]]){\n            count[arr[i]]++;\n        }\n        else{\n            count[arr[i]] = 1;\n        }\n    }\n    for(var key in count){\n        if(count[key] > parseInt(key)){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key]>key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var count = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=0;j<arr.length;j++){\n            if(arr[i]==arr[j]){\n                count++;\n            }\n        }\n        if(count>arr[i]){\n            return false;\n        }\n        count=0;\n    }\n    return true;\n}\nvalidate(1234);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    let str = n.toString();\n    let freq = {};\n    for(let i=0;i<str.length;i++){\n        if(freq[str[i]]){\n            freq[str[i]]++;\n        }else{\n            freq[str[i]] = 1;\n        }\n    }\n    for(let i=0;i<str.length;i++){\n        if(freq[str[i]]>parseInt(str[i])){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var count = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=0;j<arr.length;j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var freq = {};\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]]){\n            freq[arr[i]]++;\n        }\n        else{\n            freq[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]] > parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\nvalidate(1233);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]] > arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var freq = {};\n    var str = n.toString();\n    for(var i=0;i<str.length;i++){\n        if(freq[str[i]]){\n            freq[str[i]]++;\n        }\n        else{\n            freq[str[i]] = 1;\n        }\n    }\n    for(var i=0;i<str.length;i++){\n        if(freq[str[i]]>parseInt(str[i])){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for (var i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (var key in obj) {\n        if (obj[key] > key) {\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var n = n.toString();\n    var freq = {};\n    for(var i = 0; i < n.length; i++){\n        if(freq[n[i]]){\n            freq[n[i]]++;\n        }\n        else{\n            freq[n[i]] = 1;\n        }\n    }\n    for(var i = 0; i < n.length; i++){\n        if(freq[n[i]] > n[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var num = n.toString();\n    var count = 0;\n    for(var i = 0; i < num.length; i++){\n        for(var j = 0; j < num.length; j++){\n            if(num[i] == num[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(num[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=0;j<arr.length;j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var count = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=0;j<arr.length;j++){\n            if(arr[i]==arr[j]){\n                count++;\n            }\n        }\n        if(count>arr[i]){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var freq = {};\n    for(var i=0; i<str.length; i++){\n        if(freq[str[i]]){\n            freq[str[i]] += 1;\n        }\n        else{\n            freq[str[i]] = 1;\n        }\n    }\n    for(var i=0; i<str.length; i++){\n        if(freq[str[i]] > parseInt(str[i])){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n  var str = n.toString();\n  var arr = str.split(\"\");\n  var obj = {};\n  for(var i = 0; i < arr.length; i++){\n    if(obj[arr[i]]){\n      obj[arr[i]]++;\n    }else{\n      obj[arr[i]] = 1;\n    }\n  }\n  for(var key in obj){\n    if(obj[key] > key){\n      return false;\n    }\n  }\n  return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var n = n.toString();\n    var arr = n.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var freq = {};\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]]){\n            freq[arr[i]]++;\n        }else{\n            freq[arr[i]] = 1;\n        }\n    }\n    for(var key in freq){\n        if(freq[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var freq = {};\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]]){\n            freq[arr[i]]++;\n        }\n        else{\n            freq[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]]>arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var freq = {};\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]]){\n            freq[arr[i]]++;\n        }else{\n            freq[arr[i]] = 1;\n        }\n    }\n    for(var j=0;j<arr.length;j++){\n        if(freq[arr[j]] > parseInt(arr[j])){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]] > arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] = obj[arr[i]] + 1;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var dict = {};\n    for(var i=0;i<str.length;i++){\n        if(dict[str[i]]){\n            dict[str[i]] += 1;\n        }\n        else{\n            dict[str[i]] = 1;\n        }\n    }\n    for(var key in dict){\n        if(dict[key] > parseInt(key)){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var freq = {};\n    for(var i=0;i<str.length;i++){\n        if(freq[str[i]]){\n            freq[str[i]]++;\n        }else{\n            freq[str[i]] = 1;\n        }\n    }\n    for(var i=0;i<str.length;i++){\n        if(freq[str[i]]>parseInt(str[i])){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split(\"\");\n    var count = {};\n    for(var i=0;i<arr.length;i++){\n        if(count[arr[i]]){\n            count[arr[i]]++;\n        }else{\n            count[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(count[arr[i]]>arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] === arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var num = n.toString();\n    var arr = num.split(\"\");\n    var count = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=0;j<arr.length;j++){\n            if(arr[i]==arr[j]){\n                count++;\n            }\n        }\n        if(count>parseInt(arr[i])){\n            return false;\n        }\n        count=0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    for(var i=0;i<str.length;i++){\n        var count = 0;\n        for(var j=0;j<str.length;j++){\n            if(str[i]==str[j]){\n                count++;\n            }\n        }\n        if(count>parseInt(str[i])){\n            return false;\n        }\n    }\n    return true;\n}\nvalidate(1223);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=0;j<arr.length;j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key]>key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var freq = {};\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]]){\n            freq[arr[i]]++;\n        }\n        else{\n            freq[arr[i]]=1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]]>arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var obj = {};\n    for(var i=0;i<str.length;i++){\n        if(obj[str[i]]){\n            obj[str[i]]++;\n        }else{\n            obj[str[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key]>key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var count = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=0;j<arr.length;j++){\n            if(arr[i]==arr[j]){\n                count++;\n            }\n        }\n        if(count>arr[i]){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nvar status = validate(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var n = n.toString();\n    var arr = n.split('');\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var dict = {};\n    for(var i=0;i<str.length;i++){\n        if(str[i] in dict){\n            dict[str[i]]++;\n        }\n        else{\n            dict[str[i]] = 1;\n        }\n    }\n    for(var i=0;i<str.length;i++){\n        if(dict[str[i]] > Number(str[i])){\n            return false;\n        }\n    }\n    return true;\n}\nvalidate(1222);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split(\"\");\n    var freq = {};\n    for(var i=0;i<arr.length;i++){\n        if(arr[i] in freq){\n            freq[arr[i]]++;\n        }\n        else{\n            freq[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]] > arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split(\"\");\n    var freq = {};\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]]){\n            freq[arr[i]]++;\n        }\n        else{\n            freq[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]] > parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = 0;\n    for(var i=0; i<arr.length; i++){\n        for(var j=0; j<arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > arr[i]){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    let str = n.toString();\n    let obj = {};\n    for(let i=0;i<str.length;i++){\n        if(obj[str[i]]){\n            obj[str[i]] += 1;\n        }else{\n            obj[str[i]] = 1;\n        }\n    }\n    for(let key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var freq = {};\n    for(var i = 0; i < str.length; i++){\n        if(str[i] in freq){\n            freq[str[i]] += 1;\n        }\n        else{\n            freq[str[i]] = 1;\n        }\n    }\n    for(var key in freq){\n        if(freq[key] > parseInt(key)){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var n = n.toString();\n    var arr = n.split('');\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]] > arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=0;j<arr.length;j++){\n            if(arr[i]==arr[j]){\n                count++;\n            }\n        }\n        if(count>arr[i]){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nvalidate(1223);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > arr[i]){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=0;j<str.length;j++){\n            if(str[i] == str[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(str[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nvalidate(1223);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = 0;\n    var count1 = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count <= arr[i]){\n            count1++;\n        }\n        count = 0;\n    }\n    if(count1 == arr.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var freq = {};\n    for(var i=0; i<arr.length; i++){\n        if(freq[arr[i]]){\n            freq[arr[i]]++;\n        }\n        else{\n            freq[arr[i]] = 1;\n        }\n    }\n    for(var i=0; i<arr.length; i++){\n        if(freq[arr[i]] > parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var freq = {};\n    for (var i=0; i<str.length;i++)\n        {\n            var character = str.charAt(i);\n            if (freq[character]) {\n               freq[character]++;\n            } else {\n               freq[character] = 1;\n            }\n        }\n    for (var j=0; j<str.length;j++)\n        {\n            var character = str.charAt(j);\n            if (freq[character] > parseInt(character)) {\n               return false;\n            }\n        }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var freq = {};\n    for(var i=0;i<arr.length;i++){\n        if(arr[i] in freq){\n            freq[arr[i]] += 1;\n        }\n        else{\n            freq[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]] > parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\nvalidate(1223);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var n = n.toString();\n    var arr = n.split(\"\");\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = 0; j < str.length; j++){\n            if(str[i] == str[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(str[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = 0;\n    for(var i=0; i<arr.length; i++){\n        for(var j=0; j<arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count <= arr[i]){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp0kga6e3i.js:26:10)\n    at Object.<anonymous> (/tmp/tmp0kga6e3i.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split(\"\");\n    var freq = {};\n    for(var i=0; i<arr.length; i++){\n        if(freq[arr[i]]){\n            freq[arr[i]] = freq[arr[i]] + 1;\n        }\n        else{\n            freq[arr[i]] = 1;\n        }\n    }\n    for(var i=0; i<arr.length; i++){\n        if(freq[arr[i]] > parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = {};\n    for(var i=0;i<arr.length;i++){\n        if(count[arr[i]]){\n            count[arr[i]]++;\n        }\n        else{\n            count[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(count[arr[i]] > parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var num = n.toString().split('');\n    var count = 0;\n    for(var i=0; i<num.length; i++){\n        for(var j=0; j<num.length; j++){\n            if(num[i] == num[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(num[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = 0; j < str.length; j++){\n            if(str[i] == str[j]){\n                count++;\n            }\n        }\n        if(count <= parseInt(str[i])){\n            continue;\n        }\n        else{\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkxx3zid5.js:28:10)\n    at Object.<anonymous> (/tmp/tmpkxx3zid5.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]>arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var freq = {};\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]]){\n            freq[arr[i]]++;\n        }\n        else{\n            freq[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]]>arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var count = 0;\n    for(var i=0; i<arr.length; i++){\n        for(var j=0; j<arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split(\"\");\n    var count = {};\n    for (var i = 0; i < arr.length; i++) {\n        if (count[arr[i]] === undefined) {\n            count[arr[i]] = 1;\n        } else {\n            count[arr[i]]++;\n        }\n    }\n    for (var key in count) {\n        if (count[key] > key) {\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]] > arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var freq = {};\n    for(var i=0;i<str.length;i++){\n        if(freq[str[i]]){\n            freq[str[i]]++;\n        }\n        else{\n            freq[str[i]] = 1;\n        }\n    }\n    for(var i=0;i<str.length;i++){\n        if(freq[str[i]]>parseInt(str[i])){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    var flag = true;\n    for(var key in obj){\n        if(obj[key]>key){\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var num = n.toString();\n    var freq = {};\n    for(var i=0; i<num.length; i++){\n        if(freq[num[i]]){\n            freq[num[i]]++;\n        }else{\n            freq[num[i]] = 1;\n        }\n    }\n    for(var i=0; i<num.length; i++){\n        if(freq[num[i]] > parseInt(num[i])){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=0;j<arr.length;j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > arr[i]){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = {};\n    for(var i=0;i<arr.length;i++){\n        if(count[arr[i]]){\n            count[arr[i]]++;\n        }\n        else{\n            count[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(count[arr[i]]>parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]>arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = [];\n    for(var i = 0; i < str.length; i++){\n        arr.push(str[i]);\n    }\n    var count = 0;\n    for(var j = 0; j < arr.length; j++){\n        for(var k = 0; k < arr.length; k++){\n            if(arr[j] == arr[k]){\n                count++;\n            }\n        }\n        if(count > arr[j]){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]] > parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var num = n.toString();\n    var arr = [];\n    for(var i=0; i<num.length; i++){\n        arr.push(num[i]);\n    }\n    var count = 0;\n    for(var i=0; i<arr.length; i++){\n        for(var j=0; j<arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    let str = n.toString();\n    let freq = {};\n    for(let i=0;i<str.length;i++){\n        if(freq[str[i]]){\n            freq[str[i]]++;\n        }\n        else{\n            freq[str[i]] = 1;\n        }\n    }\n    for(let i=0;i<str.length;i++){\n        if(freq[str[i]]>parseInt(str[i])){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split(\"\");\n    var dict = {};\n    for(var i = 0; i < arr.length; i++){\n        if(dict[arr[i]]){\n            dict[arr[i]] += 1;\n        }\n        else{\n            dict[arr[i]] = 1;\n        }\n    }\n    for(var key in dict){\n        if(dict[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var n = n.toString();\n    var freq = {};\n    for(var i=0;i<n.length;i++){\n        if(freq[n[i]]){\n            freq[n[i]]++;\n        }\n        else{\n            freq[n[i]] = 1;\n        }\n    }\n    for(var i in freq){\n        if(freq[i] > i){\n            return false;\n        }\n    }\n    return true;\n}\nvalidate(1234);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]] > parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i=0; i<arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > parseInt(key)){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key]>key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split(\"\");\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for(let i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(let key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var n = n.toString();\n    var arr = [];\n    for(var i=0;i<n.length;i++){\n        arr.push(n[i]);\n    }\n    var count = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=0;j<arr.length;j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > arr[i]){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var num = n.toString();\n    var count = 0;\n    for(var i=0;i<num.length;i++){\n        for(var j=0;j<num.length;j++){\n            if(num[i]==num[j]){\n                count++;\n            }\n        }\n        if(count>parseInt(num[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key]>key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var freq = {};\n    for(var i=0;i<str.length;i++){\n        if(freq[str[i]]){\n            freq[str[i]] += 1;\n        }else{\n            freq[str[i]] = 1;\n        }\n    }\n    for(var i=0;i<str.length;i++){\n        if(freq[str[i]] > parseInt(str[i])){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split(\"\");\n    var freq = {};\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]]){\n            freq[arr[i]] = freq[arr[i]] + 1;\n        }\n        else{\n            freq[arr[i]] = 1;\n        }\n    }\n    for(var key in freq){\n        if(freq[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var count = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=0;j<arr.length;j++){\n            if(arr[i]==arr[j]){\n                count++;\n            }\n        }\n        if(count>parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=0;j<arr.length;j++){\n            if(arr[i]==arr[j]){\n                count++;\n            }\n        }\n        if(count>arr[i]){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nvar status = validate(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var count = 0;\n    var count1 = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count <= arr[i]){\n            count1++;\n        }\n        count = 0;\n    }\n    if(count1 == arr.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var a = n.toString().split('');\n    var b = [];\n    for(var i = 0; i < a.length; i++){\n        b.push(a.filter(x => x == a[i]).length);\n    }\n    var c = b.filter(x => x > parseInt(a[b.indexOf(x)]));\n    if(c.length == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    let str = n.toString();\n    let arr = str.split(\"\");\n    let obj = {};\n    for(let i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(let key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var count = 0;\n    for(var i=0; i<arr.length; i++){\n        for(var j=0; j<arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var arr = n.toString().split('');\n    var freq = {};\n    for(var i=0;i<arr.length;i++){\n        if(arr[i] in freq){\n            freq[arr[i]]++;\n        }\n        else{\n            freq[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(freq[arr[i]] > parseInt(arr[i])){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i=0; i<arr.length; i++){\n        if(!obj[arr[i]]){\n            obj[arr[i]] = 1;\n        }\n        else{\n            obj[arr[i]]++;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n  var arr = n.toString().split('');\n  var count = {};\n  for(var i=0;i<arr.length;i++){\n    if(count[arr[i]]){\n      count[arr[i]]++;\n    }else{\n      count[arr[i]] = 1;\n    }\n  }\n  for(var key in count){\n    if(count[key]>key){\n      return false;\n    }\n  }\n  return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    let str = n.toString();\n    let arr = str.split(\"\");\n    let obj = {};\n    for(let i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(let key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    // Write your code here\n    var arr = n.toString().split('');\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(arr[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = 0; j < str.length; j++){\n            if(str[i] == str[j]){\n                count++;\n            }\n        }\n        if(count > parseInt(str[i])){\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key]>key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]]++;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]>arr[i]){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var obj = {};\n    for(var i=0;i<arr.length;i++){\n        if(obj[arr[i]]){\n            obj[arr[i]] += 1;\n        }\n        else{\n            obj[arr[i]] = 1;\n        }\n    }\n    for(var key in obj){\n        if(obj[key] > parseInt(key)){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var freq = {};\n    for(var i = 0; i < arr.length; i++){\n        if(freq[arr[i]]){\n            freq[arr[i]]++;\n        }\n        else{\n            freq[arr[i]] = 1;\n        }\n    }\n    for(var key in freq){\n        if(freq[key] > key){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122878,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
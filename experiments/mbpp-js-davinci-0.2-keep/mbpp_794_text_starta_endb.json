{
  "name": "mbpp_794_text_starta_endb",
  "language": "js",
  "prompt": "//Write a function that matches a string that has an 'a' followed by anything, ending in 'b'.\nfunction text_starta_endb(text){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_794_text_starta_endb.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_starta_endb;\n  assert.deepEqual(candidate(\"aabbbb\"),true);\n  assert.deepEqual(candidate(\"aabAbbbc\"),false);\n  assert.deepEqual(candidate(\"accddbbjjj\"),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var regex = /a.+b/;\n    return regex.test(text);\n}\n",
    "    var regex = /a.+b$/;\n    return regex.test(text);\n}\n",
    "    var reg = /a.+b/;\n    return reg.test(text);\n}\n",
    "\tvar regex = /a.+b/;\n\treturn regex.test(text);\n}\n",
    "    return /^a.*b$/.test(text);\n}\n",
    "    var regex = /a.+b/;\n    return regex.test(text);\n}\n",
    "    var regex = /a.+b$/;\n    if(regex.test(text)){\n        console.log(\"true\");\n    }else{\n        console.log(\"false\");\n    }\n}\ntext_starta_endb(\"ab\");\ntext_starta_endb(\"aab\");\ntext_starta_endb(\"accb\");\ntext_starta_endb(\"aabb\");\n",
    "    var regex = /a.+b/;\n    return regex.test(text);\n}\n",
    "    var regex = /a\\w+b/;\n    return regex.test(text);\n}\n",
    "    var regex = /a\\w*b/;\n    return regex.test(text);\n}\n",
    "    var regex = /a.+b/;\n    var result = regex.test(text);\n    return result;\n}\n",
    "    var regex = /a.+b/;\n    return regex.test(text);\n}\n",
    "    var regex = /^a.*b$/;\n    if(regex.test(text)){\n        console.log(text + \" matches the pattern\");\n    }else{\n        console.log(text + \" does not match the pattern\");\n    }\n}\n\ntext_starta_endb(\"aab\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_endb(\"aacb\");\ntext_starta_end",
    "    var regex = /a.+b/;\n    return regex.test(text);\n}\n",
    "    var regex = /a[a-z]*b/;\n    return regex.test(text);\n}\n",
    "    return /^a.*b$/.test(text);\n}\n",
    "    return /^a.*b$/.test(text);\n}\n",
    "    var regex = /a.+b/;\n    return regex.test(text);\n}\n",
    "    var regex = /a\\w*b/;\n    return regex.test(text);\n}\n",
    "    var regex = /a\\w*b/;\n    return regex.test(text);\n}\n"
  ]
}
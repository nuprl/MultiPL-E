{
  "name": "mbpp_69_is_sublist",
  "language": "js",
  "prompt": "//Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist(l, s){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_69_is_sublist.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    if(l.length < s.length) return false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            var j = 1;\n            while(j < s.length && l[i+j] == s[j]){\n                j++;\n            }\n            if(j == s.length) return true;\n        }\n    }\n    return false;\n}\n",
    "    if(s.length > l.length){\n        return false;\n    }\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            var j = 1;\n            while(j < s.length && l[i+j] == s[j]){\n                j++;\n            }\n            if(j == s.length){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    if(l.length < s.length) return false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            var j = 0;\n            while(j < s.length && l[i+j] == s[j]){\n                j++;\n            }\n            if(j == s.length) return true;\n        }\n    }\n    return false;\n}\n",
    "    if(l.length < s.length){\n        return false;\n    }\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            var j = 1;\n            while(j < s.length && l[i + j] == s[j]){\n                j++;\n            }\n            if(j == s.length){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    if(s.length > l.length){\n        return false;\n    }\n    for(var i = 0; i < l.length; i++){\n        if(l[i] === s[0]){\n            var j = 0;\n            while(j < s.length){\n                if(l[i+j] === s[j]){\n                    j++;\n                }\n                else{\n                    break;\n                }\n            }\n            if(j === s.length){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}",
    "    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}",
    "    if (s.length > l.length) return false;\n    for (var i = 0; i < l.length; i++) {\n        if (l[i] == s[0]) {\n            var j = 0;\n            while (j < s.length && l[i + j] == s[j]) {\n                j++;\n            }\n            if (j == s.length) return true;\n        }\n    }\n    return false;\n}\n",
    "    if(l.length < s.length){\n        return false;\n    }\n    for(var i = 0; i < l.length; i++){\n        if(l[i] === s[0]){\n            var j = 1;\n            while(j < s.length && l[i + j] === s[j]){\n                j++;\n            }\n            if(j === s.length){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    return l.indexOf(s) > -1;\n}\n",
    "    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    if (list.indexOf(sublist) != -1) {\n        return true;\n    }\n    return false;\n}",
    "  for(var i = 0; i < l.length; i++){\n    if(l[i] === s[0]){\n      var j = 0;\n      while(j < s.length && l[i+j] === s[j]){\n        j++;\n      }\n      if(j === s.length){\n        return true;\n      }\n    }\n  }\n  return false;\n}\n",
    "    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}",
    "  var j = 0;\n  if (s.length == 0)\n    return true;\n  if (l.length == 0)\n    return false;\n  if (l[0] == s[0]) {\n    for (var i = 0; i < s.length; i++) {\n      if (l[i] != s[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return is_sublist(l.slice(1), s);\n}\n",
    "    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}",
    "    var l_len = l.length;\n    var s_len = s.length;\n    var i = 0;\n    var j = 0;\n    while(i < l_len && j < s_len){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == s_len){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n",
    "    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}",
    "    if(l.length < s.length){\n        return false;\n    }\n    for(let i = 0; i < l.length; i++){\n        if(l[i] === s[0]){\n            let j = 0;\n            for(; j < s.length; j++){\n                if(l[i + j] !== s[j]){\n                    break;\n                }\n            }\n            if(j === s.length){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    if(s.length == 0){\n        return true;\n    }\n    if(l.length == 0){\n        return false;\n    }\n    if(l[0] == s[0]){\n        return is_sublist(l.slice(1), s.slice(1));\n    }\n    return is_sublist(l.slice(1), s);\n}\n",
    "    if(l.length < s.length) return false;\n    for(let i = 0; i < l.length; i++){\n        if(l[i] === s[0]){\n            let j = 1;\n            while(j < s.length && l[i+j] === s[j]){\n                j++;\n            }\n            if(j === s.length) return true;\n        }\n    }\n    return false;\n}\n"
  ]
}
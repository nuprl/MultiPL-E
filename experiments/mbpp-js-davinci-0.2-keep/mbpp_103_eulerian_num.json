{
  "name": "mbpp_103_eulerian_num",
  "language": "js",
  "prompt": "//Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num(n, m){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_103_eulerian_num.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = eulerian_num;\n  assert.deepEqual(candidate(3, 1),4);\n  assert.deepEqual(candidate(4, 1),11);\n  assert.deepEqual(candidate(5, 3),26);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var eulerian_num = 1;\n    for(var i = 1; i <= m; i++){\n        eulerian_num *= (n - i + 1) / i;\n    }\n    return eulerian_num;\n}\n",
    "\tif(m == 0 || n == m) return 1;\n\treturn eulerian_num(n-1, m-1) + (n-1)*eulerian_num(n-1, m);\n}\n",
    "    if(m == 0 || n == m) return 1;\n    return eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1 || m == 1) return n;\n    if(n == m) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0 || n < m) return 0;\n    if(n == m) return 1;\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == m || m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1) return m + 1;\n    if(m == 1) return n + 1;\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "\tif(n < m) return 0;\n\tif(n == m) return 1;\n\tif(m == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian[i][j] = 1;\n            }else{\n                eulerian[i][j] = (i - j + 1) * eulerian[i - 1][j] + j * eulerian[i - 1][j - 1];\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "    var arr = [];\n    for(var i = 0; i <= n; i++){\n        arr[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(j == 0){\n                arr[i][j] = 1;\n            }\n            else if(i == 0){\n                arr[i][j] = 0;\n            }\n            else{\n                arr[i][j] = (j * arr[i - 1][j]) + arr[i - 1][j - 1];\n            }\n        }\n    }\n    return arr[n][m];\n}\n",
    "    if(n == m || m == 0) return 1;\n    return eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1) return m + 1;\n    if(m == 1) return n + 1;\n    return (n + m) * eulerian_num(n - 1, m) + (n + m) * eulerian_num(n, m - 1);\n}\n",
    "\tif(n == 0 || m == 0)\n\t\treturn 1;\n\tif(n == 1)\n\t\treturn m + 1;\n\tif(m == 1)\n\t\treturn n + 1;\n\treturn (n + m) * eulerian_num(n - 1, m) + (n + m) * eulerian_num(n, m - 1) - (n + m) * (n + m - 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    var result = 1;\n    for(var i = 1; i <= m; i++){\n        result *= (n - i + 1) / i;\n    }\n    return result;\n}\n",
    "    var eulerian = 0;\n    for(var i = 0; i <= m; i++){\n        eulerian += Math.pow(-1, i) * binomial(m, i) * binomial(n + m - i, n);\n    }\n    return eulerian;\n}\n",
    "    return factorial(n + 1) / (factorial(m + 1) * factorial(n - m + 1));\n}\n",
    "    if(n == 0 || m == 0 || n == m)\n        return 1;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var a = [];\n    for(var i = 0; i <= n; i++){\n        a[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                a[i][j] = 1;\n            }else{\n                a[i][j] = a[i-1][j-1] + (i+1)*a[i][j-1];\n            }\n        }\n    }\n    return a[n][m];\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "\tvar eul = [];\n\tfor(var i = 0; i < n; i++){\n\t\teul[i] = [];\n\t\tfor(var j = 0; j < m; j++){\n\t\t\tif(i == 0 || j == 0){\n\t\t\t\teul[i][j] = 1;\n\t\t\t}else{\n\t\t\t\teul[i][j] = eul[i-1][j] + j*eul[i-1][j-1];\n\t\t\t}\n\t\t}\n\t}\n\treturn eul[n-1][m-1];\n}\n",
    "    if(n == 0 || m == 0 || n == m){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0){\n        return 1;\n    }\n    if(n == 1){\n        return m + 1;\n    }\n    if(m == 1){\n        return n + 1;\n    }\n    return (n + m) * eulerian_num(n - 1, m) + (n + m) * eulerian_num(n, m - 1);\n}\n",
    "    if(n == 0 || m == 0 || n < m){\n        return 0;\n    }\n    if(n == m){\n        return 1;\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}",
    "    if(n == 0 || m == 0){\n        return 1;\n    }\n    if(n == 1){\n        return m + 1;\n    }\n    if(m == 1){\n        return n + 1;\n    }\n    return (m + 1) * eulerian_num(n - 1, m) + (n - m) * eulerian_num(n - 1, m - 1);\n}\n",
    "\tvar fact = function(n){\n\t\tvar f = 1;\n\t\tfor(var i = 1; i <= n; i++){\n\t\t\tf *= i;\n\t\t}\n\t\treturn f;\n\t}\n\treturn fact(n) / (fact(m) * fact(n - m));\n}\n",
    "    if(n == 0 || m == 0 || n < m){\n        return 0;\n    }\n    if(n == m){\n        return 1;\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "\tvar result = 0;\n\tfor(var i = 0; i <= m; i++){\n\t\tresult += Math.pow(-1, i) * binomial(m, i) * binomial(n + m - i, n);\n\t}\n\treturn result;\n}\n",
    "    if(n < m)\n        return 0;\n    if(n == m)\n        return 1;\n    if(m == 0)\n        return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == m || m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n < m){\n        return 0;\n    }\n    if(n == m){\n        return 1;\n    }\n    if(m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0 || n < m){\n        return 0;\n    }\n    if(n == m){\n        return 1;\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0 || n < m){\n        return 0;\n    }\n    if(n == m){\n        return 1;\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 && m == 0){\n        return 1;\n    }\n    if(n == 0 || m == 0){\n        return 0;\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var eulerian_num = 0;\n    if(n == 0 && m == 0){\n        eulerian_num = 1;\n    }\n    else if(n == 0 || m == 0){\n        eulerian_num = 0;\n    }\n    else{\n        eulerian_num = (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n    }\n    return eulerian_num;\n}\n",
    "    if(n < 0 || m < 0 || n < m){\n        return 0;\n    }\n    if(n == 0 && m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0){\n        return 1;\n    }\n    else if(n == 1){\n        return m + 1;\n    }\n    else if(m == 1){\n        return n + 1;\n    }\n    else{\n        return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n    }\n}\n",
    "    var eulerian_num = 1;\n    for(var i = n; i > n - m; i--){\n        eulerian_num *= i;\n    }\n    return eulerian_num;\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == m || m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m - 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1) return m + 1;\n    if(m == 1) return n + 1;\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    if(m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == m || m == 0)\n        return 1;\n    else\n        return eulerian_num(n-1, m-1) + (n-1)*eulerian_num(n-1, m);\n}\n",
    "\tvar eulerian = [];\n\tfor(var i = 0; i <= n; i++){\n\t\teulerian[i] = [];\n\t\tfor(var j = 0; j <= m; j++){\n\t\t\tif(i == 0 || j == 0){\n\t\t\t\teulerian[i][j] = 1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\teulerian[i][j] = eulerian[i-1][j-1] + (i+1)*eulerian[i][j-1];\n\t\t\t}\n\t\t}\n\t}\n\treturn eulerian[n][m];\n}\n",
    "    var a = [];\n    for(var i = 0; i <= n; i++){\n        a[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                a[i][j] = 1;\n            }\n            else{\n                a[i][j] = a[i - 1][j - 1] + (i * a[i - 1][j]);\n            }\n        }\n    }\n    return a[n][m];\n}\n",
    "    var eulerian_num = [];\n    for(var i = 0; i <= n; i++){\n        eulerian_num[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian_num[i][j] = 1;\n            }else{\n                eulerian_num[i][j] = eulerian_num[i - 1][j - 1] + (i * eulerian_num[i - 1][j]);\n            }\n        }\n    }\n    return eulerian_num[n][m];\n}\n",
    "    let arr = [];\n    for(let i = 0; i <= n; i++){\n        arr[i] = [];\n        for(let j = 0; j <= m; j++){\n            if(j == 0 || j == i){\n                arr[i][j] = 1;\n            }\n            else if(j == 1){\n                arr[i][j] = i;\n            }\n            else{\n                arr[i][j] = arr[i-1][j-1] + j * arr[i-1][j];\n            }\n        }\n    }\n    return arr[n][m];\n}\n",
    "    if(n < m) return 0;\n    if(m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1 || m == 1) return n;\n    if(n < m) return eulerian_num(n, n);\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "\tif(n == 0 && m == 0){\n\t\treturn 1;\n\t}\n\tif(n == 0 || m == 0){\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var res = 1;\n    for(var i = 1; i <= m; i++){\n        res *= (n - i + 1) / i;\n    }\n    return res;\n}\n",
    "    if(n == m || m == 0) return 1;\n    return eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n}\n",
    "\tif(n == m || m == 0) return 1;\n\tif(m == 1) return n;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "\tvar e = 1;\n\tfor(var i = 1; i <= m; i++){\n\t\te *= (n - i + 1) / i;\n\t}\n\treturn e;\n}\n",
    "    if(n == 0 && m == 0){\n        return 1;\n    }\n    if(n == 0 || m == 0){\n        return 0;\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == m || m == 0) return 1;\n    return (n-m+1)*eulerian_num(n, m-1) + (m+1)*eulerian_num(n, m+1);\n}\n",
    "    if(n == 0 || m == 0){\n        return 1;\n    }\n    if(n == 1){\n        return m + 1;\n    }\n    if(m == 1){\n        return n + 1;\n    }\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1) return m + 1;\n    if(m == 1) return n + 1;\n    return (n + m) * eulerian_num(n - 1, m) + eulerian_num(n, m - 1);\n}\n",
    "\tvar arr = [];\n\tfor(var i = 0; i <= n; i++){\n\t\tarr[i] = [];\n\t\tfor(var j = 0; j <= m; j++){\n\t\t\tif(i == 0 || j == 0){\n\t\t\t\tarr[i][j] = 1;\n\t\t\t}else{\n\t\t\t\tarr[i][j] = arr[i - 1][j - 1] + (i - 1) * arr[i - 1][j];\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[n][m];\n}\n",
    "    if(n == 0 || m == 0 || n < m) return 0;\n    if(n == m) return 1;\n    if(m == 1) return factorial(n);\n    return (n - m) * eulerian_num(n - 1, m) + eulerian_num(n - 1, m - 1);\n}\n",
    "\tif(n == 0 || m == 0) return 1;\n\tif(n == 1) return m + 1;\n\tif(m == 1) return n + 1;\n\treturn (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var eulerian_num = 0;\n    if(n == m){\n        eulerian_num = 1;\n    }\n    else if(n > m){\n        eulerian_num = eulerian_num(n-1, m-1) + (n-1)*eulerian_num(n-1, m);\n    }\n    return eulerian_num;\n}\n",
    "\tvar arr = [];\n\tfor(var i = 0; i <= n; i++){\n\t\tarr[i] = [];\n\t\tfor(var j = 0; j <= m; j++){\n\t\t\tif(i == 0 || j == 0) arr[i][j] = 1;\n\t\t\telse arr[i][j] = arr[i-1][j-1] + (i+1)*arr[i][j-1];\n\t\t}\n\t}\n\treturn arr[n][m];\n}\n",
    "    if(n == 0) return 1;\n    if(m == 0) return 0;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian[i][j] = 1;\n            }else{\n                eulerian[i][j] = eulerian[i-1][j-1] + (i+1)*eulerian[i][j-1];\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "\tif(n == 0 || m == 0) return 1;\n\tif(n == 1 || m == 1) return n;\n\tif(n < m) return eulerian_num(n, n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "\tif(n < 0 || m < 0 || n < m){\n\t\treturn 0;\n\t}\n\tif(n == 0 && m == 0){\n\t\treturn 1;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "\tif(n == 0 || m == 0) return 1;\n\tif(n == 1 || m == 1) return n;\n\tif(n < m) return eulerian_num(n, n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "\tif(n < m){\n\t\treturn 0;\n\t}\n\tif(n == m){\n\t\treturn 1;\n\t}\n\treturn (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1) return m+1;\n    if(m == 1) return n+1;\n    return (n+1)*eulerian_num(n, m-1) + (m+1)*eulerian_num(n-1, m);\n}\n",
    "    if(n == m || m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0 || n < m){\n        return 0;\n    }\n    if(n == m){\n        return 1;\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == m || m == 0){\n        return 1;\n    }\n    return eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n}\n",
    "  if(n == 0){\n    return 1;\n  }\n  if(m == 0){\n    return 0;\n  }\n  return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == m) return 1;\n    if(m == 0) return 0;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    var eulerian_num = 1;\n    for(var i = 1; i <= m; i++){\n        eulerian_num *= (n - i + 1) / i;\n    }\n    return eulerian_num;\n}\n",
    "\tif(n == m || m == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == m || m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 && m == 0){\n        return 1;\n    }\n    if(n == 0 || m == 0){\n        return 0;\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == m || m == 0) return 1;\n    return eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n}\n",
    "    var eulerian_num = [];\n    for(var i = 0; i <= n; i++){\n        eulerian_num[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian_num[i][j] = 1;\n            }else{\n                eulerian_num[i][j] = (eulerian_num[i - 1][j - 1] + (i - 1) * eulerian_num[i - 1][j]);\n            }\n        }\n    }\n    return eulerian_num[n][m];\n}\n",
    "    if(n == 0 && m == 0){\n        return 1;\n    }\n    if(n == 0 || m == 0){\n        return 0;\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var arr = [];\n    for(var i = 0; i <= n; i++){\n        arr[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                arr[i][j] = 1;\n            }else{\n                arr[i][j] = arr[i-1][j-1] + (i * arr[i-1][j]);\n            }\n        }\n    }\n    return arr[n][m];\n}",
    "    var arr = [];\n    for(var i = 0; i <= n; i++){\n        arr[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(j == 0 || j == i){\n                arr[i][j] = 1;\n            }else{\n                arr[i][j] = arr[i-1][j-1] + (i-1)*arr[i-1][j];\n            }\n        }\n    }\n    return arr[n][m];\n}\n",
    "    if(n == 0 || m == 0)\n        return 1;\n    if(n == 1 || m == 1)\n        return n;\n    return (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\n",
    "  if(n == 0 || m == 0) return 1;\n  if(n == 1) return m + 1;\n  if(m == 1) return n + 1;\n  return (n + m) * eulerian_num(n - 1, m) + (n + m) * eulerian_num(n, m - 1);\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    if(m == 1) return factorial(n);\n    return (n - m) * eulerian_num(n - 1, m) + eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1) return m + 1;\n    if(m == 1) return n + 1;\n    return (n + m) * eulerian_num(n - 1, m) + (n + m) * eulerian_num(n, m - 1);\n}\n",
    "\tvar a = 1;\n\tvar b = 1;\n\tfor(var i = n; i > n - m; i--){\n\t\ta *= i;\n\t}\n\tfor(var i = 1; i <= m; i++){\n\t\tb *= i;\n\t}\n\treturn a / b;\n}\n",
    "\tif(n < m) return 0;\n\tif(n == m) return 1;\n\tif(m == 1) return factorial(n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "\tif(n == m || m == 0) return 1;\n\telse return eulerian_num(n-1, m-1) + (n-1)*eulerian_num(n-1, m);\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    return eulerian_num(n-1, m-1) + (n-1)*eulerian_num(n-1, m);\n}\n",
    "    let res = 1;\n    for(let i = 1; i <= m; i++){\n        res *= (n - i + 1) / i;\n    }\n    return res;\n}\n",
    "    if(n == 0 || m == 0){\n        return 1;\n    }\n    else if(n == 1){\n        return m;\n    }\n    else if(m == 1){\n        return 1;\n    }\n    else{\n        return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n    }\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1) return m + 1;\n    if(m == 1) return n + 1;\n    return (n + m) * eulerian_num(n - 1, m) + n * eulerian_num(n, m - 1);\n}\n",
    "    if(n == 0 || m == 0 || n < m){\n        return 0;\n    }\n    if(n == m){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 && m == 0){\n        return 1;\n    }\n    if(n == 0 || m == 0){\n        return 0;\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var a = [];\n    for (var i = 0; i <= n; i++) {\n        a[i] = [];\n        for (var j = 0; j <= m; j++) {\n            a[i][j] = 0;\n        }\n    }\n    a[0][0] = 1;\n    for (var i = 1; i <= n; i++) {\n        for (var j = 1; j <= m; j++) {\n            a[i][j] = (a[i - 1][j - 1] + (i - 1) * a[i - 1][j]) / j;\n        }\n    }\n    return a[n][m];\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0 || m > n){\n        return 0;\n    }\n    if(m == 1 || m == n){\n        return 1;\n    }\n    return (m * eulerian_num(n - 1, m)) + (n - m + 1) * eulerian_num(n - 1, m - 1);\n}",
    "    var arr = [];\n    for(var i = 0; i <= n; i++){\n        arr[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                arr[i][j] = 1;\n            }else{\n                arr[i][j] = arr[i - 1][j - 1] + (i - 1) * arr[i - 1][j];\n            }\n        }\n    }\n    return arr[n][m];\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1) return m + 1;\n    if(m == 1) return n + 1;\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    return (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "\tvar sum = 0;\n\tfor(var k = 0; k <= m; k++){\n\t\tsum += Math.pow(-1, k) * binomial(m, k) * binomial(n + m - k - 1, n - 1);\n\t}\n\treturn sum;\n}\n",
    "    if(n == m || m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0 || n < m){\n        return 0;\n    }\n    if(n == m){\n        return 1;\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == m || m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    return eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n}\n",
    "\tvar arr = [];\n\tfor(var i = 0; i <= n; i++){\n\t\tarr[i] = [];\n\t\tfor(var j = 0; j <= m; j++){\n\t\t\tif(i == 0 || j == 0){\n\t\t\t\tarr[i][j] = 1;\n\t\t\t}else{\n\t\t\t\tarr[i][j] = arr[i - 1][j - 1] + j * arr[i - 1][j];\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[n][m];\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    if(m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "\tif(n == 0 && m == 0){\n\t\treturn 1;\n\t}\n\tif(n == 0 || m == 0){\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var a = [];\n    for(var i = 0; i <= n; i++){\n        a[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                a[i][j] = 1;\n            }\n            else{\n                a[i][j] = a[i - 1][j - 1] + j * a[i - 1][j];\n            }\n        }\n    }\n    return a[n][m];\n}\n",
    "\tif(n < m) return 0;\n\tif(n == m) return 1;\n\tif(m == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    var num = 1;\n    for(var i = 0; i < m; i++){\n        num *= (n - i);\n    }\n    return num;\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    return eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    return eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(m == 0 || n == m) return 1;\n    return eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m);\n}\n",
    "    if(n < 0 || m < 0 || n < m){\n        return 0;\n    }\n    if(n == 0 && m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "\tvar sum = 0;\n\tfor(var k = 0; k <= m; k++){\n\t\tsum += Math.pow(-1, k) * binomial(m, k) * binomial(n + m - k - 1, n - 1);\n\t}\n\treturn sum;\n}\n",
    "    var eulerian_num = 1;\n    for(var i = 0; i < m; i++){\n        eulerian_num *= (n - i);\n    }\n    return eulerian_num;\n}\n",
    "    if(n == m || m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    if(m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1 || m == 1) return n;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == m || m == 0){\n        return 1;\n    }\n    else{\n        return eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n    }\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian[i][j] = 1;\n            }\n            else{\n                eulerian[i][j] = (i - j + 1) * eulerian[i - 1][j] + j * eulerian[i - 1][j - 1];\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "    if(n == m || m == 0){\n        return 1;\n    }\n    return eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0 || n < m) return 0;\n    if(n == m) return 1;\n    return (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == m || m == 0) return 1;\n    return eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(m == 0) return 0;\n    if(n == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "\tif(n == 0 || m == 0) return 1;\n\tif(n == 1 || m == 1) return n;\n\tif(n == m) return 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(j == 0){\n                eulerian[i][j] = 1;\n            }\n            else if(i == 0){\n                eulerian[i][j] = 0;\n            }\n            else{\n                eulerian[i][j] = (eulerian[i - 1][j - 1] + (i - 1) * eulerian[i - 1][j]);\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "\tif(m > n){\n\t\treturn 0;\n\t}\n\tif(m == 0 || m == n){\n\t\treturn 1;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    var eulerian_num = 0;\n    if(n == m){\n        eulerian_num = 1;\n    }else if(n > m){\n        eulerian_num = (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m + 1);\n    }\n    return eulerian_num;\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    if(m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "\tvar eulerian_num = 1;\n\tfor(var i = 1; i <= m; i++){\n\t\teulerian_num *= (n - i + 1) / i;\n\t}\n\treturn eulerian_num;\n}\n",
    "  if(n == 0 || m == 0 || n < m) return 0;\n  if(n == m) return 1;\n  return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == m || m == 0) return 1;\n    return eulerian_num(n-1, m-1) + (n-1)*eulerian_num(n-1, m);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1) return m + 1;\n    if(m == 1) return n + 1;\n    return (n + m) * eulerian_num(n - 1, m) + (n + m - 1) * eulerian_num(n, m - 1);\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "\tif(n < 0 || m < 0 || n < m) return 0;\n\tif(n == 0 && m == 0) return 1;\n\treturn (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 || m == 0)\n        return 1;\n    else if(n == 1)\n        return m + 1;\n    else if(m == 1)\n        return n + 1;\n    else\n        return (n + m) * eulerian_num(n - 1, m) + (n + m) * eulerian_num(n, m - 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1 || m == 1) return n;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == m || m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1) return m + 1;\n    if(m == 1) return n + 1;\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(m == 0 || n == m){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0 || n < m) return 0;\n    if(n == m) return 1;\n    if(m == 1) return factorial(n);\n    return (n - m) * eulerian_num(n - 1, m) + eulerian_num(n - 1, m - 1);\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian[i][j] = 1;\n            }else{\n                eulerian[i][j] = eulerian[i-1][j-1] + (i+1)*eulerian[i][j-1];\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "    if(n < 0 || m < 0 || n < m) return 0;\n    if(n == 0 && m == 0) return 1;\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 || n == m) return 1;\n    return (n - 1) * (eulerian_num(n - 1, m) + eulerian_num(n, m - 1));\n}\n",
    "    var result = 1;\n    for(var i = 1; i <= m; i++){\n        result *= (n + 1 - i) / i;\n    }\n    return result;\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    if(m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n < m) return 0;\n    if(n == m || m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n < 0 || m < 0 || n < m){\n        return 0;\n    }\n    if(n == m){\n        return 1;\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0){\n        return 1;\n    }\n    if(n == 1){\n        return m + 1;\n    }\n    if(m == 1){\n        return n + 1;\n    }\n    return (n + m) * eulerian_num(n - 1, m) + (n + m) * eulerian_num(n, m - 1);\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "\tif(n == 0 || m == 0)\n\t\treturn 1;\n\tif(n == 1 || m == 1)\n\t\treturn n;\n\tif(n == m)\n\t\treturn eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n\treturn eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == m || m == 0)\n        return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n < 0 || m < 0 || n < m){\n        return 0;\n    }\n    if(n == 0 && m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(m == 0 || n == m) return 1;\n    return eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m);\n}\n",
    "    var a = [];\n    for (var i = 0; i <= n; i++){\n        a[i] = [];\n        for (var j = 0; j <= m; j++){\n            if (i == 0 || j == 0 || i == j){\n                a[i][j] = 1;\n            }\n            else{\n                a[i][j] = a[i-1][j-1] + j * a[i-1][j];\n            }\n        }\n    }\n    return a[n][m];\n}\n",
    "    if(n == 0 || m == 0 || n < m){\n        return 0;\n    }\n    if(n == m){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    var result = 1;\n    for(var i = 0; i < m; i++){\n        result *= (n - i) / (i + 1);\n    }\n    return result;\n}\n",
    "\tvar a = [];\n\tfor(var i = 0; i <= n; i++){\n\t\ta[i] = [];\n\t\tfor(var j = 0; j <= m; j++){\n\t\t\tif(i == 0 || j == 0){\n\t\t\t\ta[i][j] = 1;\n\t\t\t}else{\n\t\t\t\ta[i][j] = a[i-1][j-1] + j*a[i-1][j];\n\t\t\t}\n\t\t}\n\t}\n\treturn a[n][m];\n}\n",
    "\tif(n == 0 || m == 0 || n < m){\n\t\treturn 0;\n\t}\n\tif(n == m){\n\t\treturn 1;\n\t}\n\treturn (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1) return m + 1;\n    if(m == 1) return n + 1;\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 && m == 0){\n        return 1;\n    }\n    if(n == 0 || m == 0){\n        return 0;\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == m || m == 0){\n        return 1;\n    }\n    return eulerian_num(n-1, m-1) + (n-1)*eulerian_num(n-1, m);\n}\n",
    "    if(n == m || m == 0)\n        return 1;\n    return eulerian_num(n-1, m-1) + (n-1)*eulerian_num(n-1, m);\n}\n",
    "    if(n < 0 || m < 0 || n < m){\n        return 0;\n    }\n    if(n == 0 && m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i < n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j < m; j++){\n            if(i == 0 || j == 0)\n                eulerian[i][j] = 1;\n            else\n                eulerian[i][j] = eulerian[i - 1][j - 1] + (i + 1) * eulerian[i][j - 1];\n        }\n    }\n    return eulerian[n - 1][m - 1];\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    if(m == 1) return factorial(n);\n    return (n - m + 1) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == m){\n        return 1;\n    }\n    if(n == 0){\n        return 0;\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    var eulerian_num = 0;\n    var factorial = function(n){\n        if (n == 0){\n            return 1;\n        }\n        return n * factorial(n - 1);\n    }\n    for (var i = 0; i <= m; i++){\n        eulerian_num += Math.pow(-1, i) * factorial(m) / (factorial(i) * factorial(m - i) * factorial(n - m + i));\n    }\n    return eulerian_num;\n}\n",
    "  var eulerian = [];\n  for(var i = 0; i <= n; i++){\n    eulerian[i] = [];\n    for(var j = 0; j <= m; j++){\n      if(i == 0 || j == 0){\n        eulerian[i][j] = 1;\n      }\n      else{\n        eulerian[i][j] = eulerian[i - 1][j - 1] + (i + 1) * eulerian[i][j - 1];\n      }\n    }\n  }\n  return eulerian[n][m];\n}\n",
    "    if(n == m || m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian[i][j] = 1;\n            }else{\n                eulerian[i][j] = eulerian[i - 1][j - 1] + (i * eulerian[i - 1][j]);\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "\tvar res = 1;\n\tfor(var i = 1; i <= m; i++){\n\t\tres *= (n - i + 1) / i;\n\t}\n\treturn res;\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1) return m + 1;\n    if(m == 1) return n + 1;\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    if(m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    var eulerian_num = 1;\n    var factorial = 1;\n    for(var i = 1; i <= n; i++){\n        factorial *= i;\n        eulerian_num += factorial / (i + m);\n    }\n    return eulerian_num;\n}\n",
    "    if(n == m || m == 0) return 1;\n    return eulerian_num(n-1, m-1) + (n-1)*eulerian_num(n-1, m);\n}\n",
    "    if(n == m || m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "\tvar result = 1;\n\tfor(var i = 1; i <= m; i++){\n\t\tresult *= (n - i + 1) / i;\n\t}\n\treturn result;\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == m) return 1;\n    if(n > m) return 0;\n    return (m - n + 1) * eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1);\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1 || m == 1) return n;\n    if(n < m) return eulerian_num(n, n);\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    var eulerian_num = 0;\n    var factorial = 1;\n    for(var i = 1; i <= m; i++){\n        factorial *= i;\n    }\n    eulerian_num = factorial * Math.pow(n, m);\n    return eulerian_num;\n}",
    "    if(n == m || m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "\tif(n == 0 || m == 0 || n < m) return 0;\n\tif(n == m) return 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(m == 0 || m == n) return 1;\n    return eulerian_num(n-1, m-1) + (n-1) * eulerian_num(n-1, m);\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    return (n - m) * eulerian_num(n - 1, m) + eulerian_num(n - 1, m - 1);\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(j == 0){\n                eulerian[i][j] = 1;\n            }\n            else if(i == 0){\n                eulerian[i][j] = 0;\n            }\n            else{\n                eulerian[i][j] = (eulerian[i - 1][j - 1] + (i - 1) * eulerian[i - 1][j]);\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1 || m == 1) return n;\n    return (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\n"
  ]
}
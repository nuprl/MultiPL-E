{
  "name": "mbpp_227_min_of_three",
  "language": "js",
  "prompt": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_227_min_of_three.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c){\n        return a;\n    }\n    else if (b < a && b < c){\n        return b;\n    }\n    else {\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c){\n        return a;\n    }\n    else if (b < a && b < c){\n        return b;\n    }\n    else {\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    if(b < a && b < c){\n        return b;\n    }\n    if(c < a && c < b){\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a<b && a<c){\n        return a;\n    }\n    else if(b<a && b<c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    var min = a;\n    if(b < min){\n        min = b;\n    }\n    if(c < min){\n        min = c;\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    } else if(b < a && b < c){\n        return b;\n    } else {\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    var min = a;\n    if (b < min){\n        min = b;\n    }\n    if (c < min){\n        min = c;\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a<b && a<c){\n        return a;\n    }\n    else if(b<a && b<c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    var min = a;\n    if(b < min){\n        min = b;\n    }\n    if(c < min){\n        min = c;\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c){\n        return a;\n    }\n    else if (b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a<b && a<c){\n        return a;\n    }\n    else if(b<a && b<c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c){\n        return a;\n    }\n    else if (b < a && b < c){\n        return b;\n    }\n    else if (c < a && c < b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c) {\n        return a;\n    }\n    else if (b < a && b < c) {\n        return b;\n    }\n    else {\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    } else if(b < a && b < c){\n        return b;\n    } else {\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n\tif(a < b && a < c){\n\t\treturn a;\n\t}\n\telse if(b < a && b < c){\n\t\treturn b;\n\t}\n\telse{\n\t\treturn c;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a<b && a<c){\n        return a;\n    }\n    else if(b<a && b<c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else if(c < a && c < b){\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n\tif(a < b && a < c){\n\t\treturn a;\n\t}\n\telse if(b < a && b < c){\n\t\treturn b;\n\t}\n\telse{\n\t\treturn c;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a<b && a<c){\n        return a;\n    }\n    else if(b<a && b<c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c){\n        return a;\n    }\n    else if (b < a && b < c){\n        return b;\n    }\n    else {\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c){\n        return a;\n    }\n    else if (b < a && b < c){\n        return b;\n    }\n    else {\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n  if(a < b && a < c){\n    return a;\n  }\n  else if(b < a && b < c){\n    return b;\n  }\n  else{\n    return c;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c){\n        return a;\n    }\n    else if (b < a && b < c){\n        return b;\n    }\n    else {\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    var min = a;\n    if(b < min){\n        min = b;\n    }\n    if(c < min){\n        min = c;\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    var min = a;\n    if(b < min){\n        min = b;\n    }\n    if(c < min){\n        min = c;\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    var min = a;\n    if (b < min){\n        min = b;\n    }\n    if (c < min){\n        min = c;\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c){\n        return a;\n    }\n    else if (b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n\tif(a < b && a < c){\n\t\treturn a;\n\t}\n\telse if(b < a && b < c){\n\t\treturn b;\n\t}\n\telse{\n\t\treturn c;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c){\n        return a;\n    }\n    else if (b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a<b && a<c){\n        return a;\n    }\n    else if(b<a && b<c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c){\n        return a;\n    }\n    else if (b < a && b < c){\n        return b;\n    }\n    else {\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_412_remove_odd",
  "language": "js",
  "prompt": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_412_remove_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    return l.filter(function(num){\n        return num%2==0;\n    });\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[]\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i])\n        }\n    }\n    return l1\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[]\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i])\n        }\n    }\n    return l1\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2!=0){\n            l.splice(i,1);\n            i--;\n        }\n    }\n    return l;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[]\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i])\n        }\n    }\n    return l1\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[]\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i])\n        }\n    }\n    return l1\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=l.filter(function(x){\n        return x%2==0;\n    })\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10])\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i = 0; i < l.length; i++){\n        if(l[i] % 2 == 0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l2 = [];\n    for(var i = 0; i < l.length; i++){\n        if(l[i] % 2 == 0){\n            l2.push(l[i]);\n        }\n    }\n    return l2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0; i<l.length; i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    return l.filter(function(n){\n        return n%2==0;\n    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0; i<l.length; i++){\n        if(l[i]%2 == 0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[]\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i])\n        }\n    }\n    return l1\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var lst = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            lst.push(l[i]);\n        }\n    }\n    return lst;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l2 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l2.push(l[i]);\n        }\n    }\n    return l2;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var new_list = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            new_list.push(l[i]);\n        }\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[]\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i])\n        }\n    }\n    return l1\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    return l.filter(function(n){\n        return n%2==0;\n    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i = 0; i < l.length; i++){\n        if(l[i] % 2 == 0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i = 0; i < l.length; i++){\n        if(l[i] % 2 == 0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i = 0; i < l.length; i++){\n        if(l[i] % 2 == 0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[]\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i])\n        }\n    }\n    return l1\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    return l.filter(function(x){\n        return x%2==0;\n    })\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    return l.filter(el => el % 2 == 0)\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10])\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    return l.filter(function(n){\n        return n%2==0;\n    });\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[]\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i])\n        }\n    }\n    return l1\n}\nremove_odd([1,2,3,4,5])\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i = 0; i < l.length; i++){\n        if(l[i] % 2 == 0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l2 = [];\n    for (var i = 0; i < l.length; i++){\n        if (l[i] % 2 == 0){\n            l2.push(l[i]);\n        }\n    }\n    return l2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l = [1,2,3,4,5,6,7,8,9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l2 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l2.push(l[i]);\n        }\n    }\n    return l2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i = 0; i < l.length; i++){\n        if(l[i] % 2 == 0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    return l.filter(el => el % 2 == 0);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    return l.filter(function(x){\n        return x%2==0;\n    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i = 0; i < l.length; i++){\n        if(l[i] % 2 == 0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[]\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i])\n        }\n    }\n    return l1\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2 == 0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nremove_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1 = [];\n    for(var i = 0; i < l.length; i++){\n        if(l[i] % 2 == 0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l){\n    var l1=[];\n    for(var i=0;i<l.length;i++){\n        if(l[i]%2==0){\n            l1.push(l[i]);\n        }\n    }\n    return l1;\n}\nvar l=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_773_occurance_substring",
  "language": "js",
  "prompt": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_773_occurance_substring.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        count++;\n        index++;\n    }\n    return count == 0 ? null : result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index === -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n",
    "    var i=0;\n    var j=0;\n    var count=0;\n    var pos=[];\n    while(i<text.length){\n        if(text[i]==pattern[j]){\n            i++;\n            j++;\n            if(j==pattern.length){\n                count++;\n                pos.push(i-j);\n                j=0;\n            }\n        }\n        else{\n            i++;\n            j=0;\n        }\n    }\n    if(count==0){\n        return null;\n    }\n    else{\n        return pos;\n    }\n}\n",
    "    var index = text.indexOf(pattern);\n    var count = 0;\n    while(index != -1){\n        count++;\n        index = text.indexOf(pattern, index + 1);\n    }\n    return count;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n",
    "    var index = text.indexOf(pattern);\n    if(index == -1){\n        return null;\n    }\n    else{\n        return index;\n    }\n}\n",
    "    var count = 0;\n    var position = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        count += 1;\n        position.push(index_of);\n        index = index_of + 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return {\n        count: count,\n        position: position\n    };\n}\n",
    "    var result = [];\n    var pos = text.indexOf(pattern);\n    while(pos > -1){\n        result.push(pos);\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return result;\n}\n",
    "    let count = 0;\n    let position = [];\n    for(let i = 0; i < text.length; i++){\n        if(text[i] === pattern[0]){\n            let j = 0;\n            while(j < pattern.length && text[i+j] === pattern[j]){\n                j++;\n            }\n            if(j === pattern.length){\n                count++;\n                position.push(i);\n            }\n        }\n    }\n    if(count === 0){\n        return null;\n    }\n    return {\n        count: count,\n        position: position\n    }\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while (pos > -1) {\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length && text[i+j] == pattern[j]){\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n",
    "    var pos = text.indexOf(pattern);\n    if (pos == -1) {\n        return null;\n    }\n    var count = 0;\n    while (pos != -1) {\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}\n",
    "    var pos = 0;\n    var count = 0;\n    var result = [];\n    while(pos < text.length){\n        var index = text.indexOf(pattern, pos);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        pos = index + 1;\n        count++;\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n",
    "\tvar count = 0;\n\tvar pos = [];\n\tfor(var i=0; i<text.length; i++){\n\t\tif(text.substring(i, i+pattern.length) == pattern){\n\t\t\tcount++;\n\t\t\tpos.push(i);\n\t\t}\n\t}\n\tif(count == 0){\n\t\treturn null;\n\t}\n\telse{\n\t\treturn [count, pos];\n\t}\n}\n",
    "    let result = [];\n    let index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result.length > 0 ? result : null;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length && text[i+j] == pattern[j]){\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index > -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var pos = [];\n    for(var i=0; i<text.length; i++){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n",
    "\tvar pos = text.indexOf(pattern);\n\tvar count = 0;\n\twhile(pos > -1){\n\t\tcount++;\n\t\tpos = text.indexOf(pattern, pos + 1);\n\t}\n\tif(count == 0){\n\t\treturn null;\n\t}\n\treturn count;\n}\n",
    "    var index = text.indexOf(pattern);\n    var count = 0;\n    while(index != -1){\n        count++;\n        index = text.indexOf(pattern, index+1);\n    }\n    return count;\n}\n",
    "    var count = 0;\n    var index = 0;\n    while(text.indexOf(pattern, index) != -1){\n        count++;\n        index = text.indexOf(pattern, index) + 1;\n    }\n    return count;\n}\n",
    "    var count = 0;\n    var pos = [];\n    for(var i=0; i<text.length; i++){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, pos];\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        count++;\n        result.push(index);\n        index++;\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, pos];\n}",
    "    var result = [];\n    var i = 0;\n    while(true){\n        i = text.indexOf(pattern, i);\n        if(i == -1){\n            break;\n        }\n        result.push(i);\n        i++;\n    }\n    return result;\n}\n",
    "    var text_length = text.length;\n    var pattern_length = pattern.length;\n    var result = [];\n    for(var i = 0; i < text_length; i++){\n        if(text.substring(i, i + pattern_length) == pattern){\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return {\n        count: count,\n        position: position\n    };\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n",
    "    var match = text.match(pattern);\n    if(match){\n        return \"Occurance: \" + match.length + \" Position: \" + match.index;\n    }\n    return \"None\";\n}",
    "    let result = [];\n    let index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, pos];\n}\n",
    "    var count = 0;\n    var index = [];\n    for (var i = 0; i < text.length; i++){\n        if (text.substring(i, i + pattern.length) == pattern){\n            count++;\n            index.push(i);\n        }\n    }\n    if (count == 0){\n        return null;\n    }\n    else{\n        return [count, index];\n    }\n}\n",
    "    var result = [];\n    var index = 0;\n    var pos = 0;\n    while(index < text.length){\n        pos = text.indexOf(pattern, index);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        index = pos + 1;\n    }\n    return result;\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    if(count > 0){\n        return count;\n    }\n    else{\n        return null;\n    }\n}\n",
    "    var result = [];\n    var pos = 0;\n    var index = text.indexOf(pattern, pos);\n    while(index >= 0){\n        result.push(index);\n        pos = index + 1;\n        index = text.indexOf(pattern, pos);\n    }\n    return result;\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos != -1){\n        count++;\n        pos = text.indexOf(pattern, pos+1);\n    }\n    return count;\n}",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern === -1){\n            break;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    var pos = [];\n    while(i < text.length){\n        if(text[i] == pattern[j]){\n            if(j == pattern.length - 1){\n                count++;\n                pos.push(i - j);\n                j = 0;\n            }\n            else{\n                j++;\n            }\n        }\n        else{\n            j = 0;\n        }\n        i++;\n    }\n    if(count > 0){\n        return [count, pos];\n    }\n    else{\n        return null;\n    }\n}\n",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return {\n        count: count,\n        pos: pos\n    };\n}\n",
    "    let count = 0;\n    let pos = [];\n    for(let i=0; i<text.length; i++){\n        if(text[i] == pattern[0]){\n            let j = 0;\n            while(j<pattern.length && text[i+j] == pattern[j]){\n                j++;\n            }\n            if(j == pattern.length){\n                count++;\n                pos.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, pos];\n}\n",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            var j = 0;\n            while(j < pattern.length && text[i+j] == pattern[j]){\n                j++;\n            }\n            if(j == pattern.length){\n                count++;\n                pos.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, pos];\n}\n",
    "    var pos = 0;\n    var count = 0;\n    var result = [];\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos >= 0){\n            result.push(pos);\n            pos += 1;\n            count += 1;\n        }else{\n            break;\n        }\n    }\n    if(count == 0){\n        return null;\n    }else{\n        return result;\n    }\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n",
    "    var occurance = 0;\n    var position = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.substring(i, i + pattern.length) == pattern){\n            occurance++;\n            position.push(i);\n            i = i + pattern.length;\n        }\n        else{\n            i++;\n        }\n    }\n    if(occurance == 0){\n        return null;\n    }\n    else{\n        return {\n            occurance: occurance,\n            position: position\n        }\n    }\n}\n",
    "    var count = 0;\n    var pos = [];\n    for(var i=0; i<text.length; i++){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        count++;\n        result.push(index);\n        index++;\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.slice(i, i + pattern.length) == pattern){\n            result.push(i);\n            i += pattern.length;\n        }\n        else{\n            i++;\n        }\n    }\n    return result.length > 0 ? result : null;\n}\n",
    "    var count = 0;\n    var positions = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        count++;\n        positions.push(index_of);\n        index = index_of + 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return {\n        count: count,\n        positions: positions\n    };\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return {count: count, position: position};\n    }\n}",
    "    var pos = text.indexOf(pattern);\n    if(pos == -1) {\n        return null;\n    }\n    else {\n        var count = 0;\n        while(pos != -1) {\n            count++;\n            pos = text.indexOf(pattern, pos + 1);\n        }\n        return count;\n    }\n}",
    "\tvar result = [];\n\tvar pos = text.indexOf(pattern);\n\twhile(pos > -1){\n\t\tresult.push(pos);\n\t\tpos = text.indexOf(pattern, pos + 1);\n\t}\n\treturn result;\n}\n",
    "    var count = 0;\n    var positions = [];\n    for (var i = 0; i < text.length; i++){\n        if (text.substr(i, pattern.length) == pattern){\n            count++;\n            positions.push(i);\n        }\n    }\n    if (count == 0){\n        return null;\n    }\n    else {\n        return [count, positions];\n    }\n}\n",
    "    var result = [];\n    var index = 0;\n    var count = 0;\n    while(index < text.length){\n        var found = text.indexOf(pattern, index);\n        if(found == -1){\n            break;\n        }\n        result.push(found);\n        count++;\n        index = found + 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var pos = 0;\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos += 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n",
    "\tvar pos = 0;\n\tvar count = 0;\n\tvar result = [];\n\twhile(pos < text.length){\n\t\tpos = text.indexOf(pattern, pos);\n\t\tif(pos == -1){\n\t\t\tbreak;\n\t\t}\n\t\tresult.push(pos);\n\t\tcount++;\n\t\tpos++;\n\t}\n\tif(count == 0){\n\t\treturn null;\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern === -1){\n            break;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n",
    "  var result = [];\n  var i = 0;\n  while(i < text.length){\n    var j = 0;\n    var k = i;\n    while(j < pattern.length && k < text.length && text[k] == pattern[j]){\n      j++;\n      k++;\n    }\n    if(j == pattern.length){\n      result.push(i);\n    }\n    i++;\n  }\n  return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        index += pattern.length;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of === -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern === -1){\n            break;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            result.push(i);\n        }\n    }\n    return result.length > 0 ? result : null;\n}\n",
    "    let count = 0;\n    let pos = 0;\n    let result = [];\n    while(pos < text.length){\n        pos = text.indexOf(pattern, pos);\n        if(pos < 0){\n            break;\n        }\n        count++;\n        result.push(pos);\n        pos++;\n    }\n    if(count > 0){\n        return result;\n    }\n    return null;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length && text[i+j] == pattern[j]){\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return {\n        count: count,\n        pos: pos\n    };\n}",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        count++;\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n",
    "    var index = text.indexOf(pattern);\n    var count = 0;\n    while(index != -1){\n        count++;\n        index = text.indexOf(pattern, index + 1);\n    }\n    return count;\n}\n",
    "    var position = -1;\n    var count = 0;\n    var index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        count++;\n        position = index;\n        index++;\n    }\n    if(count > 0){\n        return \"Occurance: \" + count + \" Position: \" + position;\n    }\n    else{\n        return \"None\";\n    }\n}",
    "  var result = [];\n  var index = text.indexOf(pattern);\n  while(index >= 0){\n    result.push(index);\n    index = text.indexOf(pattern, index + 1);\n  }\n  return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.substring(i, i + pattern.length) == pattern){\n            result.push(i);\n            i += pattern.length;\n        }\n        else{\n            i++;\n        }\n    }\n    return result;\n}",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    var pos = [];\n    while(i < text.length){\n        if(text[i] == pattern[j]){\n            if(j == pattern.length - 1){\n                count++;\n                pos.push(i - j);\n                j = 0;\n            }else{\n                j++;\n            }\n        }else{\n            j = 0;\n        }\n        i++;\n    }\n    if(count > 0){\n        return {count: count, pos: pos};\n    }else{\n        return null;\n    }\n}\n",
    "    let result = [];\n    let i = 0;\n    while(i < text.length){\n        let j = 0;\n        while(j < pattern.length && text[i+j] === pattern[j]){\n            j++;\n        }\n        if(j === pattern.length){\n            result.push(i);\n            i += j;\n        }\n        else{\n            i++;\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while (pos > -1) {\n        count += 1;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }else{\n        return {\n            count: count,\n            pos: pos\n        }\n    }\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return {\n            count: count,\n            position: position\n        }\n    }\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var pos = 0;\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos++;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var pos = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n        i++;\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n",
    "    let count = 0;\n    let position = [];\n    for(let i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            let j = 0;\n            while(j < pattern.length && text[i+j] == pattern[j]){\n                j++;\n            }\n            if(j == pattern.length){\n                count++;\n                position.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, position];\n}\n",
    "    let result = [];\n    let index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos+1);\n    }\n    if(count > 0){\n        return count;\n    }\n    else{\n        return null;\n    }\n}\n",
    "    var pos = 0;\n    var count = 0;\n    var result = [];\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        count++;\n        result.push(pos);\n        pos += pattern.length;\n    }\n    return [count, result];\n}\n",
    "    var occurance = 0;\n    var position = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        occurance += 1;\n        position.push(index_of);\n        index = index_of + 1;\n    }\n    if(occurance == 0){\n        return null;\n    }\n    return {\n        occurance: occurance,\n        position: position\n    }\n}\n",
    "    var count = 0;\n    var pos = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count += 1;\n            pos.push(i);\n            i += pattern.length;\n        }\n        else{\n            i += 1;\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}",
    "    var result = [];\n    var pos = text.indexOf(pattern);\n    while (pos > -1){\n        result.push(pos);\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return result;\n}",
    "    let result = [];\n    let index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index !== -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var pos = 0;\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos += pattern.length;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar index = text.indexOf(pattern);\n\twhile(index >= 0){\n\t\tresult.push(index);\n\t\tindex = text.indexOf(pattern, index+1);\n\t}\n\treturn result;\n}\n",
    "    var count = 0;\n    var pos = 0;\n    var result = [];\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos += 1;\n        count += 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.substring(i, i + pattern.length) == pattern){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return {\n            count: count,\n            pos: pos\n        }\n    }\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        index += pattern.length;\n    }\n    return result;\n}\n",
    "    var pos = text.indexOf(pattern);\n    if(pos == -1){\n        return \"None\";\n    }\n    else{\n        return pos;\n    }\n}",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, pos];\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index > -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var text_length = text.length;\n    var pattern_length = pattern.length;\n    var count = 0;\n    var position = [];\n    for(var i=0; i<text_length; i++){\n        if(text[i] == pattern[0]){\n            var j = 0;\n            while(j<pattern_length && text[i+j] == pattern[j]){\n                j++;\n            }\n            if(j == pattern_length){\n                count++;\n                position.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return \"None\";\n    }\n    else{\n        return [count, position];\n    }\n}\n",
    "    var result = [];\n    var pos = 0;\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos++;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            for(var j = 0; j < pattern.length; j++){\n                if(text[i+j] == pattern[j]){\n                    count++;\n                }\n            }\n            if(count == pattern.length){\n                position.push(i);\n            }\n            count = 0;\n        }\n    }\n    if(position.length == 0){\n        return null;\n    }\n    return position;\n}",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while (index >= 0) {\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var pos = text.indexOf(pattern);\n    while(pos > -1){\n        result.push(pos);\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return result;\n}",
    "    var index = text.indexOf(pattern);\n    var count = 0;\n    while(index != -1){\n        count++;\n        index = text.indexOf(pattern, index + 1);\n    }\n    if(count == 0){\n        return null;\n    }\n    return count;\n}\n",
    "    var result = [];\n    var pos = 0;\n    while(pos < text.length){\n        var index = text.indexOf(pattern, pos);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        pos = index + 1;\n    }\n    return result;\n}",
    "    var len = text.length;\n    var len_pat = pattern.length;\n    var result = [];\n    for(var i=0; i<len; i++){\n        if(text[i] == pattern[0]){\n            var j = 0;\n            while(j<len_pat && text[i+j] == pattern[j]){\n                j++;\n            }\n            if(j == len_pat){\n                result.push(i);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            for(var j = 0; j < pattern.length; j++){\n                if(text[i+j] != pattern[j]){\n                    break;\n                }\n                if(j == pattern.length - 1){\n                    count++;\n                    position.push(i);\n                }\n            }\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, position];\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    var position = [];\n    while(i < text.length){\n        if(text[i] == pattern[j]){\n            if(j == pattern.length - 1){\n                count++;\n                position.push(i - j);\n                j = 0;\n            }\n            else{\n                j++;\n            }\n        }\n        else{\n            j = 0;\n        }\n        i++;\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, position];\n    }\n}\n",
    "    var count = 0;\n    var pos = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n            i += pattern.length;\n        }\n        else{\n            i++;\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        count++;\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos+1);\n    }\n    return count;\n}",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern === -1){\n            break;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar index = text.indexOf(pattern);\n\twhile (index >= 0) {\n\t\tresult.push(index);\n\t\tindex = text.indexOf(pattern, index + 1);\n\t}\n\treturn result;\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    var pos = [];\n    while(i < text.length){\n        if(text[i] == pattern[j]){\n            i++;\n            j++;\n        }\n        else{\n            i = i - j + 1;\n            j = 0;\n        }\n        if(j == pattern.length){\n            count++;\n            pos.push(i - j);\n            j = 0;\n        }\n    }\n    if(count == 0){\n        return \"None\";\n    }\n    else{\n        return count + \" \" + pos;\n    }\n}\n",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n",
    "    var result = [];\n    var pos = 0;\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos += 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    if(count > 0){\n        return count;\n    }\n    else{\n        return null;\n    }\n}",
    "    var pos = text.indexOf(pattern);\n    if(pos == -1){\n        return null;\n    }\n    else{\n        return pos;\n    }\n}",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length && text[i+j] == pattern[j]){\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n            i = i + j;\n        }\n        else{\n            i++;\n        }\n    }\n    if(result.length == 0){\n        return null;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return {\n            count: count,\n            position: position\n        };\n    }\n}",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var indexOf = text.indexOf(pattern, index);\n        if(indexOf === -1){\n            break;\n        }\n        result.push(indexOf);\n        index = indexOf + 1;\n    }\n    return result;\n}",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var indexOf = text.indexOf(pattern, index);\n        if(indexOf == -1){\n            break;\n        }\n        result.push(indexOf);\n        index = indexOf + 1;\n    }\n    return result;\n}\n",
    "    let count = 0;\n    let position = [];\n    for(let i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, position];\n    }\n}\n",
    "    var pos = 0;\n    var count = 0;\n    var result = [];\n    while(pos < text.length){\n        var index = text.indexOf(pattern, pos);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        pos = index + 1;\n        count++;\n    }\n    return count == 0 ? null : result;\n}\n",
    "    let count = 0;\n    let position = [];\n    for(let i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return {count, position};\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while (index >= 0) {\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length && text[i+j] == pattern[j]){\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n",
    "\tvar pos = 0;\n\tvar count = 0;\n\twhile(true){\n\t\tpos = text.indexOf(pattern, pos);\n\t\tif(pos == -1){\n\t\t\tbreak;\n\t\t}\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\n",
    "    var pos = 0;\n    var count = 0;\n    var result = [];\n    while(pos < text.length){\n        if(text.substring(pos, pos + pattern.length) == pattern){\n            count++;\n            result.push(pos);\n            pos += pattern.length;\n        }\n        else{\n            pos++;\n        }\n    }\n    if(count > 0){\n        return result;\n    }\n    else{\n        return null;\n    }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    var pos = [];\n    while(i < text.length){\n        if(text[i] == pattern[j]){\n            if(j == pattern.length - 1){\n                count++;\n                pos.push(i - j);\n                j = 0;\n            }\n            else{\n                j++;\n            }\n        }\n        else{\n            j = 0;\n        }\n        i++;\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while (pos > -1) {\n        count += 1;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        count++;\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var pos = 0;\n    var count = 0;\n    var pos_arr = [];\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        pos_arr.push(pos);\n        pos += 1;\n        count += 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, pos_arr];\n}\n",
    "    var pos = text.indexOf(pattern);\n    if(pos == -1)\n        return null;\n    else\n        return pos;\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            var match = true;\n            for(var j = 0; j < pattern.length; j++){\n                if(text[i+j] != pattern[j]){\n                    match = false;\n                    break;\n                }\n            }\n            if(match){\n                count++;\n                position.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, position];\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            var j = 0;\n            while(j < pattern.length){\n                if(text[i+j] == pattern[j]){\n                    j++;\n                }\n                else{\n                    break;\n                }\n            }\n            if(j == pattern.length){\n                count++;\n                position.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return \"None\";\n    }\n    else{\n        return \"Occurance: \" + count + \" Position: \" + position;\n    }\n}\n",
    "    var pos = text.indexOf(pattern);\n    if(pos == -1){\n        return null;\n    }\n    else{\n        return pos;\n    }\n}",
    "    var occurance = 0;\n    var pos = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.substring(i, i + pattern.length) == pattern){\n            occurance++;\n            pos.push(i);\n            i += pattern.length;\n        }\n        else{\n            i++;\n        }\n    }\n    if(occurance == 0){\n        return null;\n    }\n    else{\n        return [occurance, pos];\n    }\n}\n",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        var found = text.indexOf(pattern, index);\n        if(found != -1){\n            count++;\n            result.push(found);\n            index = found + 1;\n        }\n        else{\n            break;\n        }\n    }\n    if(count > 0){\n        return result;\n    }\n    else{\n        return null;\n    }\n}\n",
    "    var count = 0;\n    var index = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            index.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, index];\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length && text[i+j] == pattern[j]){\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        var k = i;\n        while(j < pattern.length && k < text.length && text[k] == pattern[j]){\n            j++;\n            k++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n            i = k;\n        }\n        else{\n            i++;\n        }\n    }\n    if(result.length == 0){\n        return null;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length && text[i+j] == pattern[j]){\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var found = text.indexOf(pattern, index);\n        if(found == -1){\n            break;\n        }\n        result.push(found);\n        index = found + 1;\n    }\n    return result;\n}",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    let count = 0;\n    let position = [];\n    for(let i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return {\n        count: count,\n        position: position\n    }\n}",
    "    var count = 0;\n    var pos = [];\n    var n = text.length;\n    var m = pattern.length;\n    for(var i = 0; i <= n - m; i++){\n        var j;\n        for(j = 0; j < m; j++){\n            if(text[i + j] != pattern[j]){\n                break;\n            }\n        }\n        if(j == m){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count > 0){\n        return {\n            count: count,\n            pos: pos\n        };\n    }\n    else{\n        return null;\n    }\n}",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substr(i, pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index != -1){\n        index = text.indexOf(pattern, index);\n        if(index != -1){\n            result.push(index);\n            index++;\n            count++;\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var index = 0;\n    var array = [];\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        count++;\n        array.push(index_of);\n        index = index_of + 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, array];\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    if(result.length == 0){\n        return null;\n    }\n    return result;\n}",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            var j = 0;\n            while(j < pattern.length && text[i+j] == pattern[j]){\n                j++;\n            }\n            if(j == pattern.length){\n                count++;\n                pos.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return \"None\";\n    }\n    return count + \" \" + pos;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var result = [];\n    var index = 0;\n    var i = 0;\n    while(i < text.length){\n        if(text[i] == pattern[index]){\n            index++;\n            if(index == pattern.length){\n                result.push(i - index + 1);\n                index = 0;\n            }\n        }\n        else{\n            index = 0;\n        }\n        i++;\n    }\n    if(result.length == 0){\n        return \"None\";\n    }\n    else{\n        return result;\n    }\n}",
    "    var count = 0;\n    var index = 0;\n    var position = [];\n    while(index < text.length){\n        var i = text.indexOf(pattern, index);\n        if(i == -1){\n            break;\n        }\n        count++;\n        position.push(i);\n        index = i + 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return {\n        count: count,\n        position: position\n    };\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            var j = 0;\n            while(j < pattern.length && text[i+j] == pattern[j]){\n                j++;\n            }\n            if(j == pattern.length){\n                count++;\n                position.push(i);\n            }\n        }\n    }\n    return count == 0 ? null : [count, position];\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var index = text.indexOf(pattern);\n    var count = 0;\n    while(index != -1){\n        count++;\n        index = text.indexOf(pattern, index + 1);\n    }\n    return count;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern == -1){\n            break;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index === -1){\n            break;\n        }\n        result.push(index);\n        index++;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var pos = 0;\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos += 1;\n    }\n    return result;\n}",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern == -1){\n            break;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        index += pattern.length;\n    }\n    return result;\n}\n",
    "    var pos = [];\n    var count = 0;\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            pos.push(i);\n            count++;\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n",
    "    var result = [];\n    var pos = 0;\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos += 1;\n    }\n    return result;\n}\n\nvar text = \"Hello World\";\nvar pattern = \"o\";",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length && text[i+j] == pattern[j]){\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n",
    "    let count = 0;\n    let pos = [];\n    for(let i = 0; i < text.length; i++){\n        if(text.substr(i, pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    return count == 0 ? null : [count, pos];\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count += 1;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    if(count > 0){\n        return count;\n    }\n    else{\n        return \"None\";\n    }\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern === -1){\n            break;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var position = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        count++;\n        position.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, position];\n    }\n}",
    "    var count = 0;\n    var index = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            index.push(i);\n        }\n        i++;\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, index];\n    }\n}\n",
    "    var count = 0;\n    var pos = [];\n    for(var i=0; i<text.length; i++){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, pos];\n}",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        count += 1;\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return [count, result];\n}\n"
  ]
}
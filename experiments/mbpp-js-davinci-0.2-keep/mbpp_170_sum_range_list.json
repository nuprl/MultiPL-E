{
  "name": "mbpp_170_sum_range_list",
  "language": "js",
  "prompt": "//Write a function to find the sum of numbers in a list within a range specified by two indices.\nfunction sum_range_list(list1, m, n){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_170_sum_range_list.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_range_list;\n  assert.deepEqual(candidate([2, 1, 5, 6, 8, 3, 4, 9, 10, 11, 8, 12], 8, 10),29);\n  assert.deepEqual(candidate([2, 1, 5, 6, 8, 3, 4, 9, 10, 11, 8, 12], 5, 7),16);\n  assert.deepEqual(candidate([2, 1, 5, 6, 8, 3, 4, 9, 10, 11, 8, 12], 7, 10),38);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i=m; i<=n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for (var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    for(var i = m; i <= n; i++){\n        sum += list1[i];\n    }\n    return sum;\n}"
  ]
}
{
  "name": "mbpp_724_power_base_sum",
  "language": "js",
  "prompt": "//Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum(base, power){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_724_power_base_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = power_base_sum;\n  assert.deepEqual(candidate(2, 100),115);\n  assert.deepEqual(candidate(8, 10),37);\n  assert.deepEqual(candidate(8, 15),62);\n  assert.deepEqual(candidate(3, 3),9);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var sum = 0;\n    var result = Math.pow(base, power);\n    var result_str = result.toString();\n    for (var i = 0; i < result_str.length; i++) {\n        sum += parseInt(result_str[i]);\n    }\n    return sum;\n}\n",
    "\tvar result = Math.pow(base, power);\n\tvar sum = 0;\n\twhile(result > 0){\n\t\tsum += result % 10;\n\t\tresult = Math.floor(result / 10);\n\t}\n\treturn sum;\n}\n",
    "    var sum = 0;\n    var result = Math.pow(base, power);\n    var result_str = result.toString();\n    for(var i = 0; i < result_str.length; i++){\n        sum += parseInt(result_str[i]);\n    }\n    return sum;\n}\n",
    "    var result = Math.pow(base, power);\n    var sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    var result = 1;\n    for(var i = 1; i <= power; i++){\n        result *= base;\n    }\n    var sum = 0;\n    while(result > 0){\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    var result = Math.pow(base, power);\n    var result_string = result.toString();\n    for(var i = 0; i < result_string.length; i++){\n        sum += parseInt(result_string[i]);\n    }\n    return sum;\n}\n",
    "    var result = Math.pow(base, power);\n    var sum = 0;\n    while(result > 0){\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    var result = Math.pow(base, power);\n    var sum = 0;\n    while(result > 0){\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    var num = Math.pow(base, power);\n    var num_str = num.toString();\n    for(var i = 0; i < num_str.length; i++){\n        sum += parseInt(num_str[i]);\n    }\n    return sum;\n}\n",
    "    var result = Math.pow(base, power);\n    var sum = 0;\n    while(result > 0){\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    var result = Math.pow(base, power);\n    var sum = 0;\n    while(result > 0){\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    var result = Math.pow(base, power);\n    var sum = 0;\n    var str = result.toString();\n    for(var i = 0; i < str.length; i++){\n        sum += parseInt(str[i]);\n    }\n    return sum;\n}",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while(result > 0){\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    var result = Math.pow(base, power);\n    var sum = 0;\n    while(result > 0){\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    var result = Math.pow(base, power);\n    var sum = 0;\n    while(result > 0){\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    var sum = 0;\n    var result = Math.pow(base, power);\n    var result_string = result.toString();\n    for(var i = 0; i < result_string.length; i++){\n        sum += parseInt(result_string[i]);\n    }\n    return sum;\n}\n",
    "    var result = Math.pow(base, power);\n    var sum = 0;\n    while(result > 0){\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    var result = Math.pow(base, power);\n    var sum = 0;\n    while(result > 0){\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    var result = Math.pow(base, power);\n    var sum = 0;\n    while(result > 0){\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    var result = Math.pow(base, power);\n    var sum = 0;\n    while(result > 0){\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n"
  ]
}
{
  "name": "mbpp_472_check_Consecutive",
  "language": "js",
  "prompt": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_472_check_Consecutive.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"It is a consecutive list\");\n    }\n    else{\n        console.log(\"It is not a consecutive list\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "",
      "stderr": "/tmp/tmpfz474lz_.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 1;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1] - l[i] != 1){\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbnufxu_k.js:25:10)\n    at Object.<anonymous> (/tmp/tmpbnufxu_k.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(max-min+1 == l.length){\n        for(var i=0; i<l.length; i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(max-min+1==l.length){\n        for(var i=0;i<l.length;i++){\n            if(l.indexOf(min+i)==-1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = true;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i] != 1){\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = true;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i] != 1){\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ncheck_Consecutive([1,2,3,4,5,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=true;\n    var min=Math.min.apply(null,l);\n    var max=Math.max.apply(null,l);\n    if(max-min+1==l.length){\n        for(var i=0;i<l.length;i++){\n            if(l.indexOf(min+i)==-1){\n                flag=false;\n                break;\n            }\n        }\n    }\n    else{\n        flag=false;\n    }\n    return flag;\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    var n=l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "Consecutive\nConsecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpj_dta319.js:29:10)\n    at Object.<anonymous> (/tmp/tmpj_dta319.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = true;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i] != 1){\n            flag = false;\n            break;\n        }\n    }\n    if(flag == true){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not Consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "",
      "stderr": "/tmp/tmpxyn7tzrk.js:22\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,5,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "List contains consecutive numbers\nList does not contain consecutive numbers\nList contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1tyzrtm_.js:28:10)\n    at Object.<anonymous> (/tmp/tmp1tyzrtm_.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    var l1=l.sort();\n    for(var i=0;i<l1.length-1;i++){\n        if(l1[i+1]-l1[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp3xpl43lg.js:29:10)\n    at Object.<anonymous> (/tmp/tmp3xpl43lg.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "List contains consecutive numbers\nList contains consecutive numbers\nList contains consecutive numbers\nList contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppqhm_kty.js:29:10)\n    at Object.<anonymous> (/tmp/tmppqhm_kty.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var n = l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,5,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmphton34ci.js:29:10)\n    at Object.<anonymous> (/tmp/tmphton34ci.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "",
      "stderr": "/tmp/tmpq6tzh3_4.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var n = l.length;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if (n == (max - min + 1)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\ncheck_Consecutive([1,2,3,4,5,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var count = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            count++;\n        }\n    }\n    if(count==l.length-1){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i]+1 != l[i+1]){\n            flag = 1;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"The given list is not consecutive\");\n    }\n    else{\n        console.log(\"The given list is consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "",
      "stderr": "/tmp/tmp7y_bq67b.js:20\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu3a7sz75.js:28:10)\n    at Object.<anonymous> (/tmp/tmpu3a7sz75.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "",
      "stderr": "/tmp/tmpn_zkzcd7.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = true;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]!=1){\n            flag = false;\n            break;\n        }\n    }\n    if(flag){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "",
      "stderr": "/tmp/tmp1xhs762m.js:20\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max(...l);\n    var min = Math.min(...l);\n    if(max-min+1 == l.length){\n        for(var i=0;i<l.length;i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpj9lny1ox.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"The list contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The list does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpy7s84wt8.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmptpycfpsj.js:28:10)\n    at Object.<anonymous> (/tmp/tmptpycfpsj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmp2vdnfffy.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == l[i+1]-1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpierc86m9.js:26:10)\n    at Object.<anonymous> (/tmp/tmpierc86m9.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max(...l);\n    var min = Math.min(...l);\n    if(max-min+1 == l.length){\n        for(var i=0;i<l.length;i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length;i++){\n        if(l[i]==l[i+1]-1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpi6___s_i.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1] - l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpzgvydn5m.js:28:10)\n    at Object.<anonymous> (/tmp/tmpzgvydn5m.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpxj8c6x7a.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List doesn't contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmphhpwwt62.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i = 0; i < l.length - 1; i++){\n        if(l[i] + 1 != l[i + 1]){\n            flag = 1;\n            break;\n        }\n    }\n    if(flag == 0){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp3igvhs_7.js:25:10)\n    at Object.<anonymous> (/tmp/tmp3igvhs_7.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == l[i+1]-1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]);\ncheck_Consecutive([1,2,3,4,5\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpiozbg8ui.js:33\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    l.sort(function(a,b){return a-b});\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive numbers\nConsecutive numbers\nNot consecutive numbers\nConsecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjw_i631m.js:30:10)\n    at Object.<anonymous> (/tmp/tmpjw_i631m.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max(...l);\n    var min = Math.min(...l);\n    if(max-min+1 == l.length){\n        for(var i=0;i<l.length;i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i = 0; i < l.length - 1; i++){\n        if(l[i] + 1 != l[i + 1]){\n            flag = 1;\n            break;\n        }\n    }\n    if(flag == 1){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\n\ncheck_Consecutive([1,2,3,4,5,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = true;\n    for(var i=0; i<l.length-1; i++){\n        if(l[i+1]-l[i] != 1){\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] - l[i+1] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n        }\n    }\n    if(flag == 1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpse7c89ii.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 1;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]!=1){\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwcnb6ox0.js:26:10)\n    at Object.<anonymous> (/tmp/tmpwcnb6ox0.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var n = l.length;\n    for(var i=0;i<n;i++){\n        if(l[i]-l[i+1]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Not Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp13hg3zp4.js:29:10)\n    at Object.<anonymous> (/tmp/tmp13hg3zp4.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "List contains consecutive numbers\nList does not contain consecutive numbers\nList contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppdvyqcf1.js:28:10)\n    at Object.<anonymous> (/tmp/tmppdvyqcf1.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var n = l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i+1]-l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdeiop_ny.js:29:10)\n    at Object.<anonymous> (/tmp/tmpdeiop_ny.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = true;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i] != 1){\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max(...l);\n    var min = Math.min(...l);\n    var len = l.length;\n    if(max-min+1 == len){\n        flag = 1;\n    }\n    if(flag == 1){\n        console.log(\"It is a consecutive list\");\n    }\n    else{\n        console.log(\"It is not a consecutive list\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpxxr4_5e9.js:21\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 1;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1] - arr[i] != 1){\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5oasl82f.js:26:10)\n    at Object.<anonymous> (/tmp/tmp5oasl82f.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "List contains consecutive numbers\nList contains consecutive numbers\nList contains consecutive numbers\nList contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjxzswj07.js:29:10)\n    at Object.<anonymous> (/tmp/tmpjxzswj07.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var s = l.sort();\n    for(var i=1;i<l.length;i++){\n        if(s[i]-s[i-1]!=1){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"The given list contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The given list does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "The given list contains consecutive numbers\nThe given list does not contain consecutive numbers\nThe given list contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpna_54800.js:28:10)\n    at Object.<anonymous> (/tmp/tmpna_54800.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Not Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp3a_kouxb.js:28:10)\n    at Object.<anonymous> (/tmp/tmp3a_kouxb.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"The list contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The list does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "The list does not contain consecutive numbers\nThe list does not contain consecutive numbers\nThe list does not contain consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpb7oytzid.js:28:10)\n    at Object.<anonymous> (/tmp/tmpb7oytzid.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(max-min+1 == l.length){\n        for(var i=0; i<l.length; i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\ncheck_Consecutive([5,2,3,1,4]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive numbers\nConsecutive numbers\nConsecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyp0ij8y5.js:28:10)\n    at Object.<anonymous> (/tmp/tmpyp0ij8y5.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmp9ig0ebln.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i = 0; i < l.length-1; i++){\n        if(l[i+1] - l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpxmmmjohr.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,5,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgykaw_un.js:28:10)\n    at Object.<anonymous> (/tmp/tmpgykaw_un.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,5,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxq79mzrj.js:28:10)\n    at Object.<anonymous> (/tmp/tmpxq79mzrj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 1;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]!=1){\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpa9n8zjjq.js:25:10)\n    at Object.<anonymous> (/tmp/tmpa9n8zjjq.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive numbers\nNot consecutive numbers\nNot consecutive numbers\nConsecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp58hsmn83.js:30:10)\n    at Object.<anonymous> (/tmp/tmp58hsmn83.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpaqznd08b.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpx_nyst6t.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i = 0; i < l.length - 1; i++){\n        if(l[i] + 1 != l[i+1]){\n            flag = 1;\n            break;\n        }\n    }\n    if(flag == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsj7z4k8s.js:28:10)\n    at Object.<anonymous> (/tmp/tmpsj7z4k8s.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List doesn't contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpsakj79m4.js:25\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var n = l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i+1]-l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpbggz12ed.js:29\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    var n=l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,5,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "List contains consecutive numbers\nList does not contain consecutive numbers\nList contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpo4ppstnb.js:29:10)\n    at Object.<anonymous> (/tmp/tmpo4ppstnb.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(max - min + 1 == l.length){\n        for(var i = 0; i < l.length; i++){\n            if(l.indexOf(min + i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n    else{\n        return false;\n    }\n}\n\ncheck_Consecutive([1,2,3,4,5,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive numbers\nNot consecutive numbers\nConsecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpon5j1nym.js:28:10)\n    at Object.<anonymous> (/tmp/tmpon5j1nym.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpx_nyst6t.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpaqznd08b.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    var max=Math.max(...l);\n    var min=Math.min(...l);\n    if(max-min+1==l.length){\n        for(var i=0;i<l.length;i++){\n            if(l.indexOf(min+i)==-1){\n                flag=1;\n                break;\n            }\n        }\n    }\n    else{\n        flag=1;\n    }\n    if(flag==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpsdw1nnd1.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max(...l);\n    var min = Math.min(...l);\n    var n = l.length;\n    if(max-min+1 == n){\n        for(var i=0;i<n;i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 1){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\nl = [5,2,3,1,4];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for (var i = 0; i < l.length-1; i++){\n        if (l[i+1] - l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if (flag == 1){\n        console.log(\"The list contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The list does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpy9nea9h9.js:26\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpx58l_eew.js:28:10)\n    at Object.<anonymous> (/tmp/tmpx58l_eew.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,5,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive numbers\nNot consecutive numbers\nConsecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpubf_k3c2.js:28:10)\n    at Object.<anonymous> (/tmp/tmpubf_k3c2.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    var l1=l.sort();\n    for(var i=0;i<l1.length-1;i++){\n        if(l1[i+1]-l1[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive numbers\nNot consecutive numbers\nConsecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnee3oqp1.js:29:10)\n    at Object.<anonymous> (/tmp/tmpnee3oqp1.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var n = l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i]==l[i+1]-1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpoil_j7_w.js:25\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmptpycfpsj.js:28:10)\n    at Object.<anonymous> (/tmp/tmptpycfpsj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var max = Math.max(...l);\n    var min = Math.min(...l);\n    var n = l.length;\n    if (max - min + 1 === n) {\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var n = l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i = 0; i < l.length - 1; i++){\n        if(l[i] + 1 == l[i + 1]){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"The list contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The list does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "The list contains consecutive numbers\nThe list contains consecutive numbers\nThe list does not contain consecutive numbers\nThe list does not contain consecutive numbers\nThe list contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpakcoo1cx.js:30:10)\n    at Object.<anonymous> (/tmp/tmpakcoo1cx.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0; i<l.length-1; i++){\n        if(l[i+1] - l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmp42drygjm.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List doesn't contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "List contains consecutive numbers\nList contains consecutive numbers\nList contains consecutive numbers\nList contains consecutive numbers\nList contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmrr5ps6n.js:30:10)\n    at Object.<anonymous> (/tmp/tmpmrr5ps6n.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"The list contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The list does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmp3vggd627.js:25\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]!=1){\n            flag = 1;\n            break;\n        }\n    }\n    if(flag==0){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpihmrgi0r.js:20\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"The given list contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The given list does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpohnyc9c5.js:27\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var n = l.length;\n    for(var i=0; i<n-1; i++){\n        if(l[i+1] - l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpabuldkwi.js:25\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1] - l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmp1uz4a4wu.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var n = l.length;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(n == max - min + 1){\n        flag = 1;\n    }\n    if(flag == 1){\n        console.log(\"It is a consecutive list\");\n    }\n    else{\n        console.log(\"It is not a consecutive list\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "It is a consecutive list\nIt is not a consecutive list\nIt is a consecutive list\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0i4s32dc.js:25:10)\n    at Object.<anonymous> (/tmp/tmp0i4s32dc.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"The list contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The list does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpcsbcxf3e.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i = 0; i < l.length-1; i++){\n        if(l[i+1] - l[i] != 1){\n            flag = 1;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"The given list is not consecutive\");\n    }\n    else{\n        console.log(\"The given list is consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "The given list is consecutive\nThe given list is not consecutive\nThe given list is consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgpsg8hvp.js:25:10)\n    at Object.<anonymous> (/tmp/tmpgpsg8hvp.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var n = l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i+1] - l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmps7xm0drr.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1] - l[i] != 1){\n            flag = 1;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"It is not consecutive\");\n    }\n    else{\n        console.log(\"It is consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "It is consecutive\nIt is not consecutive\nIt is consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmsyuag98.js:25:10)\n    at Object.<anonymous> (/tmp/tmpmsyuag98.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"List is consecutive\");\n    }\n    else{\n        console.log(\"List is not consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "List is consecutive\nList is consecutive\nList is consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqglepjfb.js:28:10)\n    at Object.<anonymous> (/tmp/tmpqglepjfb.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    for(let i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    var max=Math.max(...l);\n    var min=Math.min(...l);\n    if(max-min+1==l.length){\n        for(var i=0;i<l.length;i++){\n            if(l.indexOf(min+i)==-1){\n                flag=1;\n                break;\n            }\n        }\n        if(flag==0){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n    else{\n        return false;\n    }\n}\ncheck_Consecutive([5,2,3,1,4]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max(...l);\n    var min = Math.min(...l);\n    var len = l.length;\n    if(max-min+1 == len){\n        flag = 1;\n    }\n    if(flag == 1){\n        console.log(\"It is a consecutive list\");\n    }\n    else{\n        console.log(\"It is not a consecutive list\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpxxr4_5e9.js:21\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7bj6g5ef.js:29:10)\n    at Object.<anonymous> (/tmp/tmp7bj6g5ef.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"The list contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The list does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "The list contains consecutive numbers\nThe list does not contain consecutive numbers\nThe list contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmps3q0rg5d.js:28:10)\n    at Object.<anonymous> (/tmp/tmps3q0rg5d.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 1;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]!=1){\n            flag = 0;\n        }\n    }\n    if(flag==1){\n        console.log(\"It is a consecutive list\");\n    }\n    else{\n        console.log(\"It is not a consecutive list\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,4,5,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "It is a consecutive list\nIt is not a consecutive list\nIt is a consecutive list\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqh1prf4k.js:25:10)\n    at Object.<anonymous> (/tmp/tmpqh1prf4k.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "List contains consecutive numbers\nList does not contain consecutive numbers\nList contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppdvyqcf1.js:28:10)\n    at Object.<anonymous> (/tmp/tmppdvyqcf1.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i] != 1){\n            flag = 1;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"The given list does not contain consecutive numbers\");\n    }\n    else{\n        console.log(\"The given list contains consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "The given list contains consecutive numbers\nThe given list does not contain consecutive numbers\nThe given list contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppljs2fng.js:25:10)\n    at Object.<anonymous> (/tmp/tmppljs2fng.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = true;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]!=1){\n            flag = false;\n            break;\n        }\n    }\n    if(flag){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nConsecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsms9md38.js:25:10)\n    at Object.<anonymous> (/tmp/tmpsms9md38.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] == arr[i+1]-1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Not Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpl4x7_f9s.js:29:10)\n    at Object.<anonymous> (/tmp/tmpl4x7_f9s.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List doesn't contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "List contains consecutive numbers\nList contains consecutive numbers\nList contains consecutive numbers\nList contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp_d5wdxn9.js:29:10)\n    at Object.<anonymous> (/tmp/tmp_d5wdxn9.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    var range = max - min + 1;\n    if(range == l.length){\n        for(var i = 0; i < l.length; i++){\n            if(l.indexOf(min) == -1){\n                flag = 1;\n                break;\n            }\n            min++;\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    var n=l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "List contains consecutive numbers\nList does not contain consecutive numbers\nList contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpr5bcm8h5.js:29:10)\n    at Object.<anonymous> (/tmp/tmpr5bcm8h5.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"The list contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The list does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmp5v8drtmz.js:22\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmptpycfpsj.js:28:10)\n    at Object.<anonymous> (/tmp/tmptpycfpsj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpx58l_eew.js:28:10)\n    at Object.<anonymous> (/tmp/tmpx58l_eew.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpj9lny1ox.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not Consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpgyll8cw8.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(max-min+1 == l.length){\n        for(var i=0; i<l.length; i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var l1 = l.sort();\n    for(var i=0;i<l1.length;i++){\n        if(l1[i+1]-l1[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Not Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9tma3ey4.js:29:10)\n    at Object.<anonymous> (/tmp/tmp9tma3ey4.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsj7z4k8s.js:28:10)\n    at Object.<anonymous> (/tmp/tmpsj7z4k8s.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 1;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i] != 1){\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpotsmr3ex.js:22\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max(...l);\n    var min = Math.min(...l);\n    var n = l.length;\n    if(n == max - min + 1){\n        flag = 1;\n    }\n    if(flag == 1){\n        console.log(\"It contains consecutive numbers\");\n    }\n    else{\n        console.log(\"It doesn't contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpxux2q185.js:20\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmp2z980num.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nConsecutive\nConsecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsxtioox9.js:29:10)\n    at Object.<anonymous> (/tmp/tmpsxtioox9.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var l1 = l.sort();\n    for(var i=0;i<l1.length-1;i++){\n        if(l1[i+1]-l1[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmp27kvdujl.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpod5minfb.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmptpycfpsj.js:28:10)\n    at Object.<anonymous> (/tmp/tmptpycfpsj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i] == l[i+1]-1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp032jnpf0.js:28:10)\n    at Object.<anonymous> (/tmp/tmp032jnpf0.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1] - l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nConsecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqho62yg5.js:29:10)\n    at Object.<anonymous> (/tmp/tmpqho62yg5.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"The given list contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The given list does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpqz8t79ix.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nConsecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9j4jibvt.js:28:10)\n    at Object.<anonymous> (/tmp/tmp9j4jibvt.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = true;\n    var n = l.length;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(n == max - min + 1){\n        for(var i=0; i<n; i++){\n            if(l.indexOf(min+i) == -1){\n                flag = false;\n                break;\n            }\n        }\n    }\n    else{\n        flag = false;\n    }\n    return flag;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0; i<l.length-1; i++){\n        if(l[i+1]-l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpwffspafq.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nConsecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7mjvnw2o.js:28:10)\n    at Object.<anonymous> (/tmp/tmp7mjvnw2o.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max(...l);\n    var min = Math.min(...l);\n    var len = l.length;\n    if(max-min+1 == len){\n        flag = 1;\n    }\n    if(flag == 1){\n        return \"It is a consecutive list\";\n    }\n    else{\n        return \"It is not a consecutive list\";\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'It is a consecutive list'\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdvpef74k.js:24:10)\n    at Object.<anonymous> (/tmp/tmpdvpef74k.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'It is a consecutive list',\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpqg_sezpg.js:22\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contains consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "List contains consecutive numbers\nList does not contains consecutive numbers\nList contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp232heui5.js:28:10)\n    at Object.<anonymous> (/tmp/tmp232heui5.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"The list contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The list does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "The list contains consecutive numbers\nThe list does not contain consecutive numbers\nThe list contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmps3q0rg5d.js:28:10)\n    at Object.<anonymous> (/tmp/tmps3q0rg5d.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive Numbers\");\n    }\n    else{\n        console.log(\"Not Consecutive Numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive Numbers\nNot Consecutive Numbers\nConsecutive Numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7bbau42v.js:28:10)\n    at Object.<anonymous> (/tmp/tmp7bbau42v.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = true;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]!=1){\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpj9lny1ox.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(max - min + 1 == l.length){\n        for(var i = 0; i < l.length; i++){\n            if(l.indexOf(min + i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1] - l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpzgvydn5m.js:28:10)\n    at Object.<anonymous> (/tmp/tmpzgvydn5m.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i = 0; i < l.length-1; i++){\n        if(l[i+1] - l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "List contains consecutive numbers\nList does not contain consecutive numbers\nList contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppg5ut1hi.js:28:10)\n    at Object.<anonymous> (/tmp/tmppg5ut1hi.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpcvl3kftv.js:28:10)\n    at Object.<anonymous> (/tmp/tmpcvl3kftv.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var n = l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmpbuj36t7f.js:25\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "List contains consecutive numbers\nList does not contain consecutive numbers\nList does not contain consecutive numbers\nList contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmjp7lxyj.js:30:10)\n    at Object.<anonymous> (/tmp/tmpmjp7lxyj.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var l1 = l.sort();\n    for(var i=0;i<l1.length-1;i++){\n        if(l1[i+1]-l1[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmpqfxkn5w8.js:28\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 1;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i] != 1){\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "Consecutive numbers\nNot consecutive numbers\nConsecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpw1zeziv7.js:26:10)\n    at Object.<anonymous> (/tmp/tmpw1zeziv7.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "List contains consecutive numbers\nList does not contain consecutive numbers\nList contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0v3kd77w.js:28:10)\n    at Object.<anonymous> (/tmp/tmp0v3kd77w.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpcvl3kftv.js:28:10)\n    at Object.<anonymous> (/tmp/tmpcvl3kftv.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "Consecutive numbers\nConsecutive numbers\nConsecutive numbers\nConsecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbyfrog1i.js:29:10)\n    at Object.<anonymous> (/tmp/tmpbyfrog1i.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var n = l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmpbzqhnu53.js:28\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsj7z4k8s.js:28:10)\n    at Object.<anonymous> (/tmp/tmpsj7z4k8s.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var l1 = l.sort();\n    for(var i=0;i<l1.length-1;i++){\n        if(l1[i+1] - l1[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "Consecutive numbers\nNot consecutive numbers\nConsecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpllemej0_.js:29:10)\n    at Object.<anonymous> (/tmp/tmpllemej0_.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "List does not contain consecutive numbers\nList does not contain consecutive numbers\nList does not contain consecutive numbers\nList does not contain consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpb1c3hkby.js:29:10)\n    at Object.<anonymous> (/tmp/tmpb1c3hkby.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 1;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpe6gpvr54.js:29:10)\n    at Object.<anonymous> (/tmp/tmpe6gpvr54.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmp5a24xdqu.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpntynajcc.js:27:10)\n    at Object.<anonymous> (/tmp/tmpntynajcc.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "Not Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpas4jdz9v.js:28:10)\n    at Object.<anonymous> (/tmp/tmpas4jdz9v.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = false;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = true;\n        }\n        else{\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var count=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            count++;\n        }\n    }\n    if(count==l.length-1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmpfs9cngcy.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]);\ncheck_Consecut\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "Consecutive\nConsecutive\nConsecutive\nConsecutive\nConsecutive\nConsecutive\nConsecutive\n",
      "stderr": "/tmp/tmpzoy3k_yd.js:27\ncheck_Consecut\n^\n\nReferenceError: check_Consecut is not defined\n    at Object.<anonymous> (/tmp/tmpzoy3k_yd.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(max-min+1 == l.length){\n        for(var i=0; i<l.length; i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n    else{\n        return false;\n    }\n}\nl = [5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsj7z4k8s.js:28:10)\n    at Object.<anonymous> (/tmp/tmpsj7z4k8s.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max(...l);\n    var min = Math.min(...l);\n    if(max-min+1 == l.length){\n        for(var i=0;i<l.length;i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n    else{\n        return false;\n    }\n}\ncheck_Consecutive([5,2,3,1,4]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmpmv1kxnvv.js:26\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length;i++){\n        if(l[i]==l[i+1]-1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmpm2t28q7d.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmptpycfpsj.js:28:10)\n    at Object.<anonymous> (/tmp/tmptpycfpsj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max(...l);\n    var min = Math.min(...l);\n    var range = max - min + 1;\n    if(range == l.length){\n        for(var i = 0; i < l.length; i++){\n            if(l.indexOf(min) == -1){\n                flag = 1;\n                break;\n            }\n            min++;\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 1){\n        console.log(\"False\");\n    }\n    else{\n        console.log(\"True\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "True\nTrue\nTrue\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmprqhvm1g5.js:34:10)\n    at Object.<anonymous> (/tmp/tmprqhvm1g5.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    var n = l.length;\n    if(max-min+1 == n){\n        for(var i=0; i<n; i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 0){\n        return \"Yes\";\n    }\n    else{\n        return \"No\";\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Yes'\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp24228pon.js:32:10)\n    at Object.<anonymous> (/tmp/tmp24228pon.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Yes',\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 1;\n    var n = l.length;\n    for(var i = 0; i < n-1; i++){\n        if(l[i+1] - l[i] != 1){\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "List contains consecutive numbers\nList does not contain consecutive numbers\nList contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6l7a2kt9.js:26:10)\n    at Object.<anonymous> (/tmp/tmp6l7a2kt9.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max(...l);\n    var min = Math.min(...l);\n    var n = l.length;\n    if(max-min+1 == n){\n        for(var i=0;i<n;i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 0){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmp0j8mas37.js:30\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppwihygmp.js:28:10)\n    at Object.<anonymous> (/tmp/tmppwihygmp.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var n = l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmpszzuk_a5.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i]==l[i+1]-1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmp62mcgdv4.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    var n=l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmpt9rnhvwb.js:28\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var n = l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"List contains consecutive numbers\");\n    }\n    else{\n        console.log(\"List does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,5,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "List contains consecutive numbers\nList does not contain consecutive numbers\nList contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpovtph_oj.js:29:10)\n    at Object.<anonymous> (/tmp/tmpovtph_oj.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 1;\n    var n = l.length;\n    l.sort();\n    for(var i=0;i<n-1;i++){\n        if(l[i+1] != l[i]+1){\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmpirob8qrh.js:22\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpcvl3kftv.js:28:10)\n    at Object.<anonymous> (/tmp/tmpcvl3kftv.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,5,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgykaw_un.js:28:10)\n    at Object.<anonymous> (/tmp/tmpgykaw_un.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var l1 = l.sort();\n    for(var i=0;i<l1.length-1;i++){\n        if(l1[i+1] - l1[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmp4wbr2s57.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu3a7sz75.js:28:10)\n    at Object.<anonymous> (/tmp/tmpu3a7sz75.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var n = l.length;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if ((max - min + 1) == n)\n        return true;\n    else\n        return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmpkx43eqwi.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i]==l[i+1]-1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmptavv85zq.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = true;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    var len = l.length;\n    if(len == max - min + 1){\n        for(var i = 0; i < len; i++){\n            if(l.indexOf(min + i) == -1){\n                flag = false;\n                break;\n            }\n        }\n    }\n    else{\n        flag = false;\n    }\n    return flag;\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max(...l);\n    var min = Math.min(...l);\n    if(max-min+1 == l.length){\n        for(var i=0; i<l.length; i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n    else{\n        return false;\n    }\n}\ncheck_Consecutive([5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == l[i+1]-1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "Not Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpc0eytagz.js:28:10)\n    at Object.<anonymous> (/tmp/tmpc0eytagz.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "Consecutive numbers\nConsecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpiilto15z.js:27:10)\n    at Object.<anonymous> (/tmp/tmpiilto15z.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0; i<l.length-1; i++){\n        if(l[i+1]-l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjr51clvc.js:28:10)\n    at Object.<anonymous> (/tmp/tmpjr51clvc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max(...l);\n    var min = Math.min(...l);\n    if(max - min + 1 == l.length){\n        for(var i = 0; i < l.length; i++){\n            if(l.indexOf(min + i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 0){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp697v6ita.js:32:10)\n    at Object.<anonymous> (/tmp/tmp697v6ita.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"The list contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The list does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "The list contains consecutive numbers\nThe list contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpetumozq9.js:27:10)\n    at Object.<anonymous> (/tmp/tmpetumozq9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"It is a consecutive list\");\n    }\n    else{\n        console.log(\"It is not a consecutive list\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "It is not a consecutive list\nIt is not a consecutive list\nIt is not a consecutive list\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp81apinn_.js:28:10)\n    at Object.<anonymous> (/tmp/tmp81apinn_.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    var n=l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]);\ncheck_Consecutive([\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmpfmd5jgzn.js:34\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpx58l_eew.js:28:10)\n    at Object.<anonymous> (/tmp/tmpx58l_eew.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpaqznd08b.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"The given list contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The given list does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmp31s42ovk.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu3a7sz75.js:28:10)\n    at Object.<anonymous> (/tmp/tmpu3a7sz75.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "Consecutive numbers\nNot consecutive numbers\nConsecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpl6rgyo8h.js:28:10)\n    at Object.<anonymous> (/tmp/tmpl6rgyo8h.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpj9lny1ox.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"list contains consecutive numbers\");\n    }\n    else{\n        console.log(\"list does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "/tmp/tmppvkvos9x.js:26\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = true;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i] != 1){\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0; i<l.length-1; i++){\n        if(l[i+1] - l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpacrneccn.js:28:10)\n    at Object.<anonymous> (/tmp/tmpacrneccn.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
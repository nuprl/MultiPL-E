{
  "name": "mbpp_290_max_length",
  "language": "js",
  "prompt": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_290_max_length.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp32yjw6yh.js:19:10)\n    at Object.<anonymous> (/tmp/tmp32yjw6yh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_length_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_length_list = [];\n            max_length_list.push(list1[i]);\n        }\n        else if(list1[i].length == max_length){\n            max_length_list.push(list1[i]);\n        }\n    }\n    return max_length_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmphrftspxd.js:23:10)\n    at Object.<anonymous> (/tmp/tmphrftspxd.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length == max){\n            max_list.push(list1[i]);\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpy7ssizgp.js:23:10)\n    at Object.<anonymous> (/tmp/tmpy7ssizgp.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = 0;\n  var max_list = [];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n    }\n  }\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length == max){\n      max_list.push(list1[i]);\n    }\n  }\n  return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmph9cqik7b.js:23:10)\n    at Object.<anonymous> (/tmp/tmph9cqik7b.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpk0a9nqo4.js:18:10)\n    at Object.<anonymous> (/tmp/tmpk0a9nqo4.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp9aamjhip.js:19:10)\n    at Object.<anonymous> (/tmp/tmp9aamjhip.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max = 0;\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpd07h60j6.js:17:10)\n    at Object.<anonymous> (/tmp/tmpd07h60j6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpwakvqszj.js:17:10)\n    at Object.<anonymous> (/tmp/tmpwakvqszj.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max=list1[0].length;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length>max){\n            max=list1[i].length;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpdo3c6vtt.js:16:10)\n    at Object.<anonymous> (/tmp/tmpdo3c6vtt.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max = 0;\n\tvar max_list = [];\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t\tmax_list = list1[i];\n\t\t}\n\t}\n\treturn max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpk1oje2ik.js:19:10)\n    at Object.<anonymous> (/tmp/tmpk1oje2ik.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i=1;i<list1.length;i++){\n        if(max < list1[i].length){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmptouo4y1_.js:18:10)\n    at Object.<anonymous> (/tmp/tmptouo4y1_.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i=0; i<list1.length; i++){\n        if(max < list1[i].length){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp4_ix8_0r.js:16:10)\n    at Object.<anonymous> (/tmp/tmp4_ix8_0r.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpderndz5b.js:17:10)\n    at Object.<anonymous> (/tmp/tmpderndz5b.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpderndz5b.js:17:10)\n    at Object.<anonymous> (/tmp/tmpderndz5b.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max = list1[0].length;\n\tvar max_list = list1[0];\n\tfor(var i = 1; i < list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t\tmax_list = list1[i];\n\t\t}\n\t}\n\treturn max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpq1x1yy9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmpq1x1yy9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = 0;\n  var max_list = [];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n      max_list = list1[i];\n    }\n  }\n  return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmppm4bj_rb.js:19:10)\n    at Object.<anonymous> (/tmp/tmppm4bj_rb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max=0;\n\tfor(var i=0;i<list1.length;i++){\n\t\tif(list1[i].length>max){\n\t\t\tmax=list1[i].length;\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp3k3hnz_j.js:17:10)\n    at Object.<anonymous> (/tmp/tmp3k3hnz_j.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for (var i = 1; i < list1.length; i++){\n        if (list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpvoxes1n9.js:17:10)\n    at Object.<anonymous> (/tmp/tmpvoxes1n9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max = 0;\n\tvar max_list = [];\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t\tmax_list = list1[i];\n\t\t}\n\t}\n\treturn max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpk1oje2ik.js:19:10)\n    at Object.<anonymous> (/tmp/tmpk1oje2ik.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = [];\n            max_list.push(list1[i]);\n        }\n        else if(list1[i].length == max){\n            max_list.push(list1[i]);\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpoo438s41.js:23:10)\n    at Object.<anonymous> (/tmp/tmpoo438s41.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmplm70ju1p.js:19:10)\n    at Object.<anonymous> (/tmp/tmplm70ju1p.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max_len = 0;\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max_len){\n      max_len = list1[i].length;\n    }\n  }\n  return max_len;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpxsk7sivw.js:17:10)\n    at Object.<anonymous> (/tmp/tmpxsk7sivw.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i = 0; i < list1.length; i++){\n        if(max < list1[i].length){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpi18riq1h.js:17:10)\n    at Object.<anonymous> (/tmp/tmpi18riq1h.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpt5w_yxbg.js:18:10)\n    at Object.<anonymous> (/tmp/tmpt5w_yxbg.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i = 1; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp9gbubn1n.js:17:10)\n    at Object.<anonymous> (/tmp/tmp9gbubn1n.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i=1;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp07ismp66.js:19:10)\n    at Object.<anonymous> (/tmp/tmp07ismp66.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 1; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpt9f4apxm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpt9f4apxm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp0zfhivin.js:16:10)\n    at Object.<anonymous> (/tmp/tmp0zfhivin.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp9aamjhip.js:19:10)\n    at Object.<anonymous> (/tmp/tmp9aamjhip.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max = list1[0].length;\n\tfor(var i=1;i<list1.length;i++){\n\t\tif(list1[i].length>max){\n\t\t\tmax = list1[i].length;\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpsi0k0wx7.js:17:10)\n    at Object.<anonymous> (/tmp/tmpsi0k0wx7.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i = 1; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp9gbubn1n.js:17:10)\n    at Object.<anonymous> (/tmp/tmp9gbubn1n.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length == max){\n            max_list.push(list1[i]);\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpy7ssizgp.js:23:10)\n    at Object.<anonymous> (/tmp/tmpy7ssizgp.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmplm70ju1p.js:19:10)\n    at Object.<anonymous> (/tmp/tmplm70ju1p.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpnkhpjf59.js:17:10)\n    at Object.<anonymous> (/tmp/tmpnkhpjf59.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_length_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_length_list = [];\n            max_length_list.push(list1[i]);\n        }\n        else if(list1[i].length == max_length){\n            max_length_list.push(list1[i]);\n        }\n    }\n    return max_length_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmphrftspxd.js:23:10)\n    at Object.<anonymous> (/tmp/tmphrftspxd.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max = 0;\n\tvar max_list = [];\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t}\n\t}\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length == max){\n\t\t\tmax_list.push(list1[i]);\n\t\t}\n\t}\n\treturn max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp9_pg4qk1.js:22:10)\n    at Object.<anonymous> (/tmp/tmp9_pg4qk1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list;\n    for (var i = 0; i < list1.length; i++){\n        if (list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpsbsaetlg.js:19:10)\n    at Object.<anonymous> (/tmp/tmpsbsaetlg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_len=list1[0].length;\n    var max_list=[];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length>max_len){\n            max_len=list1[i].length;\n            max_list=list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpayuezaeg.js:18:10)\n    at Object.<anonymous> (/tmp/tmpayuezaeg.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = 0;\n  var max_list = [];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n      max_list = list1[i];\n    }\n  }\n  return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpkznl7_7k.js:18:10)\n    at Object.<anonymous> (/tmp/tmpkznl7_7k.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = [];\n            max_list.push(list1[i]);\n        }\n        else if(list1[i].length == max){\n            max_list.push(list1[i]);\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpoo438s41.js:23:10)\n    at Object.<anonymous> (/tmp/tmpoo438s41.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpb7ds6mpr.js:19:10)\n    at Object.<anonymous> (/tmp/tmpb7ds6mpr.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max_len = 0;\n\tvar max_list = [];\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length > max_len){\n\t\t\tmax_len = list1[i].length;\n\t\t\tmax_list = list1[i];\n\t\t}\n\t}\n\treturn max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp80ynhub_.js:19:10)\n    at Object.<anonymous> (/tmp/tmp80ynhub_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max = list1[0].length;\n\tvar max_list = list1[0];\n\tfor(var i = 1; i < list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t\tmax_list = list1[i];\n\t\t}\n\t}\n\treturn max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpq1x1yy9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmpq1x1yy9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max = list1[0].length;\n\tvar max_list = list1[0];\n\tfor(var i = 1; i < list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t\tmax_list = list1[i];\n\t\t}\n\t}\n\treturn max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpq1x1yy9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmpq1x1yy9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = 0;\n  var max_list = [];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n    }\n  }\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length == max){\n      max_list.push(list1[i]);\n    }\n  }\n  return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmptvn5zcy6.js:22:10)\n    at Object.<anonymous> (/tmp/tmptvn5zcy6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = [];\n            max_list.push(list1[i]);\n        }\n        else if(list1[i].length == max){\n            max_list.push(list1[i]);\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpoo438s41.js:23:10)\n    at Object.<anonymous> (/tmp/tmpoo438s41.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpk0a9nqo4.js:18:10)\n    at Object.<anonymous> (/tmp/tmpk0a9nqo4.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    return list1.reduce(function(a,b){\n        return a.length > b.length ? a : b;\n    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpdz0_3ajr.js:13:10)\n    at Object.<anonymous> (/tmp/tmpdz0_3ajr.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = 0;\n  var max_list = [];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n      max_list = list1[i];\n    }\n  }\n  return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmppm4bj_rb.js:19:10)\n    at Object.<anonymous> (/tmp/tmppm4bj_rb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length>max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpdiumro8k.js:16:10)\n    at Object.<anonymous> (/tmp/tmpdiumro8k.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max = list1[0].length;\n\tvar max_list = list1[0];\n\tfor(var i = 1; i < list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t\tmax_list = list1[i];\n\t\t}\n\t}\n\treturn max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpq1x1yy9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmpq1x1yy9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = 0;\n  var max_list = [];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n      max_list = list1[i];\n    }\n  }\n  return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmppm4bj_rb.js:19:10)\n    at Object.<anonymous> (/tmp/tmppm4bj_rb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = [];\n            max_list.push(list1[i]);\n        }\n        else if(list1[i].length == max){\n            max_list.push(list1[i]);\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpoo438s41.js:23:10)\n    at Object.<anonymous> (/tmp/tmpoo438s41.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpfs1mfqsa.js:17:10)\n    at Object.<anonymous> (/tmp/tmpfs1mfqsa.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nvar list1 = [[1,2,3], [1,2,3,4,5], [1,2,3,4,5,6,7], [1,2], [1]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpakh27tp6.js:17:10)\n    at Object.<anonymous> (/tmp/tmpakh27tp6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp9aamjhip.js:19:10)\n    at Object.<anonymous> (/tmp/tmp9aamjhip.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_len = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n        }\n    }\n    return max_len;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpyzewot7d.js:17:10)\n    at Object.<anonymous> (/tmp/tmpyzewot7d.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_len=0;\n    var max_list=[];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length>max_len){\n            max_len=list1[i].length;\n            max_list=list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpmy2grdlo.js:18:10)\n    at Object.<anonymous> (/tmp/tmpmy2grdlo.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = [];\n            max_list.push(list1[i]);\n        }\n        else if(list1[i].length == max){\n            max_list.push(list1[i]);\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpoo438s41.js:23:10)\n    at Object.<anonymous> (/tmp/tmpoo438s41.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max_length = 0;\n\tvar max_list = [];\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length > max_length){\n\t\t\tmax_length = list1[i].length;\n\t\t\tmax_list = list1[i];\n\t\t}\n\t}\n\treturn max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpbixj9hhg.js:19:10)\n    at Object.<anonymous> (/tmp/tmpbixj9hhg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpdpk9ecdh.js:18:10)\n    at Object.<anonymous> (/tmp/tmpdpk9ecdh.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpfs1mfqsa.js:17:10)\n    at Object.<anonymous> (/tmp/tmpfs1mfqsa.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length>max){\n            max=list1[i].length;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp15wxiyqj.js:16:10)\n    at Object.<anonymous> (/tmp/tmp15wxiyqj.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_length_list = [];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_length_list = [];\n            max_length_list.push(list1[i]);\n        }\n        else if(list1[i].length == max_length){\n            max_length_list.push(list1[i]);\n        }\n    }\n    return max_length_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp_4ozo7xu.js:23:10)\n    at Object.<anonymous> (/tmp/tmp_4ozo7xu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpod050bqr.js:16:10)\n    at Object.<anonymous> (/tmp/tmpod050bqr.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = [];\n            max_list.push(list1[i]);\n        }\n        else if(list1[i].length == max){\n            max_list.push(list1[i]);\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpoo438s41.js:23:10)\n    at Object.<anonymous> (/tmp/tmpoo438s41.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max = list1[0].length;\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmppsapgv45.js:17:10)\n    at Object.<anonymous> (/tmp/tmppsapgv45.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzfmz0s9n.js:18:10)\n    at Object.<anonymous> (/tmp/tmpzfmz0s9n.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max = 0;\n\tvar max_list = [];\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t\tmax_list = list1[i];\n\t\t}\n\t}\n\treturn max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpk1oje2ik.js:19:10)\n    at Object.<anonymous> (/tmp/tmpk1oje2ik.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = 0;\n  var max_list = [];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n    }\n  }\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length == max){\n      max_list.push(list1[i]);\n    }\n  }\n  return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmph9cqik7b.js:23:10)\n    at Object.<anonymous> (/tmp/tmph9cqik7b.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = 0;\n  var max_list = [];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n      max_list = list1[i];\n    }\n  }\n  return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmppm4bj_rb.js:19:10)\n    at Object.<anonymous> (/tmp/tmppm4bj_rb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp3vidqemo.js:19:10)\n    at Object.<anonymous> (/tmp/tmp3vidqemo.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp32yjw6yh.js:19:10)\n    at Object.<anonymous> (/tmp/tmp32yjw6yh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length>max){\n            max=list1[i].length;\n        }\n    }\n    return max;\n}\nvar list1=[[1,2,3],[1,2,3,4],[1,2,3,4,5]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp8u8gf7uc.js:17:10)\n    at Object.<anonymous> (/tmp/tmp8u8gf7uc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = 0;\n  var max_list = [];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n      max_list = list1[i];\n    }\n  }\n  return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmppm4bj_rb.js:19:10)\n    at Object.<anonymous> (/tmp/tmppm4bj_rb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzvc84_ng.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzvc84_ng.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 1; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp_s8a2io2.js:18:10)\n    at Object.<anonymous> (/tmp/tmp_s8a2io2.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max = 0;\n\tvar max_list = [];\n\tfor(var i=0; i<list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t\tmax_list = list1[i];\n\t\t}\n\t}\n\treturn max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpmyxidwie.js:19:10)\n    at Object.<anonymous> (/tmp/tmpmyxidwie.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max = 0;\n\tfor(var i=0;i<list1.length;i++){\n\t\tif(list1[i].length>max){\n\t\t\tmax = list1[i].length;\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp7s5zvln_.js:17:10)\n    at Object.<anonymous> (/tmp/tmp7s5zvln_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = [];\n            max_list.push(list1[i]);\n        }\n        else if(list1[i].length == max){\n            max_list.push(list1[i]);\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzweauquw.js:23:10)\n    at Object.<anonymous> (/tmp/tmpzweauquw.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpdpk9ecdh.js:18:10)\n    at Object.<anonymous> (/tmp/tmpdpk9ecdh.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpnkhpjf59.js:17:10)\n    at Object.<anonymous> (/tmp/tmpnkhpjf59.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i = 1; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp9gbubn1n.js:17:10)\n    at Object.<anonymous> (/tmp/tmp9gbubn1n.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpfs1mfqsa.js:17:10)\n    at Object.<anonymous> (/tmp/tmpfs1mfqsa.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max_length = 0;\n  var max_list = [];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max_length){\n      max_length = list1[i].length;\n      max_list = list1[i];\n    }\n  }\n  return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp6h7gb930.js:19:10)\n    at Object.<anonymous> (/tmp/tmp6h7gb930.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = [];\n            max_list.push(list1[i]);\n        }\n        else if(list1[i].length == max){\n            max_list.push(list1[i]);\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpoo438s41.js:23:10)\n    at Object.<anonymous> (/tmp/tmpoo438s41.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max_list = list1[0];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max_list.length){\n      max_list = list1[i];\n    }\n  }\n  return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpq1bdir1u.js:17:10)\n    at Object.<anonymous> (/tmp/tmpq1bdir1u.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = [];\n            max_list.push(list1[i]);\n        }\n        else if(list1[i].length == max){\n            max_list.push(list1[i]);\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpoo438s41.js:23:10)\n    at Object.<anonymous> (/tmp/tmpoo438s41.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpfs1mfqsa.js:17:10)\n    at Object.<anonymous> (/tmp/tmpfs1mfqsa.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = 0;\n  var max_list = [];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n      max_list = list1[i];\n    }\n  }\n  return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmppm4bj_rb.js:19:10)\n    at Object.<anonymous> (/tmp/tmppm4bj_rb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = list1[0].length;\n  var max_list = list1[0];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n      max_list = list1[i];\n    }\n  }\n  return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp2xue17ab.js:19:10)\n    at Object.<anonymous> (/tmp/tmp2xue17ab.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max = list1[0].length;\n\tvar max_list = list1[0];\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t\tmax_list = list1[i];\n\t\t}\n\t}\n\treturn max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp9qhylspl.js:19:10)\n    at Object.<anonymous> (/tmp/tmp9qhylspl.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpdpk9ecdh.js:18:10)\n    at Object.<anonymous> (/tmp/tmpdpk9ecdh.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp7sn1lzpn.js:19:10)\n    at Object.<anonymous> (/tmp/tmp7sn1lzpn.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_len = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n        }\n    }\n    return max_len;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp80fsxpqv.js:17:10)\n    at Object.<anonymous> (/tmp/tmp80fsxpqv.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = 0;\n  var max_list = [];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n      max_list = list1[i];\n    }\n  }\n  return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmppm4bj_rb.js:19:10)\n    at Object.<anonymous> (/tmp/tmppm4bj_rb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max = 0;\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpd07h60j6.js:17:10)\n    at Object.<anonymous> (/tmp/tmpd07h60j6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpfs1mfqsa.js:17:10)\n    at Object.<anonymous> (/tmp/tmpfs1mfqsa.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 1; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpt9f4apxm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpt9f4apxm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = 0;\n  for (var i = 0; i < list1.length; i++) {\n    if (list1[i].length > max) {\n      max = list1[i].length;\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpb7o_8p3v.js:17:10)\n    at Object.<anonymous> (/tmp/tmpb7o_8p3v.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max = 0;\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpd07h60j6.js:17:10)\n    at Object.<anonymous> (/tmp/tmpd07h60j6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp32yjw6yh.js:19:10)\n    at Object.<anonymous> (/tmp/tmp32yjw6yh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = list1[0].length;\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpuw1j0fv6.js:17:10)\n    at Object.<anonymous> (/tmp/tmpuw1j0fv6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i=1; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpljm2nw9t.js:16:10)\n    at Object.<anonymous> (/tmp/tmpljm2nw9t.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            index = i;\n        }\n    }\n    return list1[index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpmrhf327w.js:19:10)\n    at Object.<anonymous> (/tmp/tmpmrhf327w.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp3dtpnp04.js:16:10)\n    at Object.<anonymous> (/tmp/tmp3dtpnp04.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length>max){\n            max=list1[i].length;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp15wxiyqj.js:16:10)\n    at Object.<anonymous> (/tmp/tmp15wxiyqj.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i=1;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpwz06ol8u.js:18:10)\n    at Object.<anonymous> (/tmp/tmpwz06ol8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp1k5p1xmj.js:18:10)\n    at Object.<anonymous> (/tmp/tmp1k5p1xmj.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzfmz0s9n.js:18:10)\n    at Object.<anonymous> (/tmp/tmpzfmz0s9n.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length == max){\n            max_list.push(list1[i]);\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpy7ssizgp.js:23:10)\n    at Object.<anonymous> (/tmp/tmpy7ssizgp.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp32yjw6yh.js:19:10)\n    at Object.<anonymous> (/tmp/tmp32yjw6yh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(max < list1[i].length){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpxqx5uxx9.js:18:10)\n    at Object.<anonymous> (/tmp/tmpxqx5uxx9.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpfs1mfqsa.js:17:10)\n    at Object.<anonymous> (/tmp/tmpfs1mfqsa.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmplm70ju1p.js:19:10)\n    at Object.<anonymous> (/tmp/tmplm70ju1p.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpdpk9ecdh.js:18:10)\n    at Object.<anonymous> (/tmp/tmpdpk9ecdh.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpfs1mfqsa.js:17:10)\n    at Object.<anonymous> (/tmp/tmpfs1mfqsa.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp5gl0pi9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5gl0pi9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nvar list1 = [[1,2,3],[4,5,6,7],[8,9,10,11,12]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpnxaan4_9.js:18:10)\n    at Object.<anonymous> (/tmp/tmpnxaan4_9.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpderndz5b.js:17:10)\n    at Object.<anonymous> (/tmp/tmpderndz5b.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max=0;\n  for(var i=0;i<list1.length;i++){\n    if(list1[i].length>max){\n      max=list1[i].length;\n    }\n  }\n  return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpp4gx9r6w.js:16:10)\n    at Object.<anonymous> (/tmp/tmpp4gx9r6w.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_len = list1[0].length;\n    var max_list = list1[0];\n    for(var i=1;i<list1.length;i++){\n        if(list1[i].length>max_len){\n            max_len = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpdmt6rzke.js:18:10)\n    at Object.<anonymous> (/tmp/tmpdmt6rzke.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpt5w_yxbg.js:18:10)\n    at Object.<anonymous> (/tmp/tmpt5w_yxbg.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = 0;\n  var max_list = [];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n      max_list = list1[i];\n    }\n  }\n  return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmppm4bj_rb.js:19:10)\n    at Object.<anonymous> (/tmp/tmppm4bj_rb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n  var max = list1[0].length;\n  var max_list = list1[0];\n  for(var i = 1; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n      max_list = list1[i];\n    }\n  }\n  return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmptmblk9z0.js:19:10)\n    at Object.<anonymous> (/tmp/tmptmblk9z0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp9aamjhip.js:19:10)\n    at Object.<anonymous> (/tmp/tmp9aamjhip.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n\tvar max = 0;\n\tvar max_list;\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t\tmax_list = list1[i];\n\t\t}\n\t}\n\treturn max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp3n66g8hr.js:19:10)\n    at Object.<anonymous> (/tmp/tmp3n66g8hr.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = [];\n            max_list.push(list1[i]);\n        }\n        else if(list1[i].length == max){\n            max_list.push(list1[i]);\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpcq4x_002.js:22:10)\n    at Object.<anonymous> (/tmp/tmpcq4x_002.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpnkhpjf59.js:17:10)\n    at Object.<anonymous> (/tmp/tmpnkhpjf59.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = [];\n            max_list.push(list1[i]);\n        }\n        else if(list1[i].length == max){\n            max_list.push(list1[i]);\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    13,\n    15,\n    17\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpoo438s41.js:23:10)\n    at Object.<anonymous> (/tmp/tmpoo438s41.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 13, 15, 17 ] ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpk0a9nqo4.js:18:10)\n    at Object.<anonymous> (/tmp/tmpk0a9nqo4.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpt5w_yxbg.js:18:10)\n    at Object.<anonymous> (/tmp/tmpt5w_yxbg.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpk0a9nqo4.js:18:10)\n    at Object.<anonymous> (/tmp/tmpk0a9nqo4.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 1; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpt9f4apxm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpt9f4apxm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max_len=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length>max_len){\n            max_len=list1[i].length;\n        }\n    }\n    return max_len;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu5rgbqdx.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu5rgbqdx.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nvar list1 = [[1,2,3], [4,5,6], [7,8,9,10]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp_dyutv4g.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_dyutv4g.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length>max){\n            max=list1[i].length;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123194,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp15wxiyqj.js:16:10)\n    at Object.<anonymous> (/tmp/tmp15wxiyqj.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the list of maximum length in a list of lists.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpu4836_s_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpu4836_s_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
{
  "name": "mbpp_722_filter_data",
  "language": "js",
  "prompt": "//The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.\nfunction filter_data(students, h, w){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_722_filter_data.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_data;\n  assert.deepEqual(candidate({\"Cierra Vega\": [6.2, 70], \"Alden Cantrell\": [5.9, 65], \"Kierra Gentry\": [6.0, 68], \"Pierre Cox\": [5.8, 66]}, 6.0, 70),{\"Cierra Vega\": [6.2, 70]});\n  assert.deepEqual(candidate({\"Cierra Vega\": [6.2, 70], \"Alden Cantrell\": [5.9, 65], \"Kierra Gentry\": [6.0, 68], \"Pierre Cox\": [5.8, 66]}, 5.9, 67),{\"Cierra Vega\": [6.2, 70], \"Kierra Gentry\": [6.0, 68]});\n  assert.deepEqual(candidate({\"Cierra Vega\": [6.2, 70], \"Alden Cantrell\": [5.9, 65], \"Kierra Gentry\": [6.0, 68], \"Pierre Cox\": [5.8, 66]}, 5.7, 64),{\"Cierra Vega\": [6.2, 70], \"Alden Cantrell\": [5.9, 65], \"Kierra Gentry\": [6.0, 68], \"Pierre Cox\": [5.8, 66]});\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    return Object.entries(students).filter(([name, [height, weight]]) => height > h && weight > w).map(([name, [height, weight]]) => ({name, height, weight}));\n}\n",
    "    return Object.keys(students).filter(function(key){\n        return students[key][0] > h && students[key][1] > w;\n    });\n}\n",
    "    return Object.keys(students).filter(key => students[key][0] > h && students[key][1] > w)\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let [key, value] of Object.entries(students)) {\n        if (value[0] > h && value[1] > w) {\n            result[key] = value;\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let [key, value] of Object.entries(students)){\n        if (value[0] > h && value[1] > w){\n            result[key] = value;\n        }\n    }\n    return result;\n}\n",
    "    let filtered = {};\n    for (let student in students){\n        if (students[student][0] > h && students[student][1] > w){\n            filtered[student] = students[student];\n        }\n    }\n    return filtered;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let [key, value] of Object.entries(students)) {\n        if (value[0] > h && value[1] > w) {\n            result[key] = value;\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    var filtered = {};\n    for(var key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            filtered[key] = students[key];\n        }\n    }\n    return filtered;\n}\n",
    "    let filtered = {};\n    for (let key in students){\n        if (students[key][0] >= h && students[key][1] >= w){\n            filtered[key] = students[key];\n        }\n    }\n    return filtered;\n}\n",
    "    let result = {};\n    for(let student in students){\n        if(students[student][0] > h && students[student][1] > w){\n            result[student] = students[student];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.entries(students).filter(student => student[1][0] > h && student[1][1] > w).map(student => student[0]);\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.entries(students).filter(([name, [height, weight]]) => height >= h && weight >= w).map(([name, [height, weight]]) => name);\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.entries(students).filter(([key, value]) => value[0] > h && value[1] > w).map(([key, value]) => key);\n}\n",
    "  let result = {};\n  for (let key in students){\n    if (students[key][0] > h && students[key][1] > w){\n      result[key] = students[key];\n    }\n  }\n  return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.entries(students).filter(student => student[1][0] > h && student[1][1] > w);\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.entries(students).filter(([name, [height, weight]]) => height > h && weight > w);\n}\n",
    "    let filtered = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            filtered[key] = students[key];\n        }\n    }\n    return filtered;\n}\n",
    "    return Object.keys(students).filter(function(key){\n        return students[key][0] >= h && students[key][1] >= w;\n    });\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "  let result = {};\n  for(let key in students){\n    if(students[key][0] > h && students[key][1] > w){\n      result[key] = students[key];\n    }\n  }\n  return result;\n}\n",
    "    let res = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            res[key] = students[key];\n        }\n    }\n    return res;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    var result = {};\n    for (var key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    var result = {};\n    for(var key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let filtered = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            filtered[key] = students[key];\n        }\n    }\n    return filtered;\n}\n",
    "    return Object.entries(students).filter(student => student[1][0] >= h && student[1][1] >= w).map(student => student[0])\n}\n",
    "    return Object.keys(students).filter(function(key){\n        return students[key][0] > h && students[key][1] > w;\n    });\n}\n",
    "    return Object.keys(students).filter(key => students[key][0] > h && students[key][1] > w);\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.entries(students).filter(student => student[1][0] > h && student[1][1] > w).map(student => student[0]);\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.entries(students).filter(([name, [height, weight]]) => height > h && weight > w).map(([name, [height, weight]]) => name);\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let filtered = {};\n    for (let student in students){\n        if (students[student][0] >= h && students[student][1] >= w){\n            filtered[student] = students[student];\n        }\n    }\n    return filtered;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.entries(students).filter(([name, [height, weight]]) => height > h && weight > w).map(([name, [height, weight]]) => name);\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let res = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            res[key] = students[key];\n        }\n    }\n    return res;\n}\n",
    "    return Object.entries(students).filter(([name, [height, weight]]) => height > h && weight > w).map(([name, [height, weight]]) => `${name} ${height} ${weight}`);\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    var result = {};\n    for (var key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "  return Object.entries(students).filter(([name, [height, weight]]) => height > h && weight > w).map(([name, [height, weight]]) => name);\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let filtered = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            filtered[key] = students[key];\n        }\n    }\n    return filtered;\n}\n",
    "    let filtered = {}\n    for (let [key, value] of Object.entries(students)){\n        if (value[0] > h && value[1] > w){\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let filtered = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            filtered[key] = students[key];\n        }\n    }\n    return filtered;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] >= h && students[key][1] >= w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let [key, value] of Object.entries(students)) {\n        if (value[0] > h && value[1] > w) {\n            result[key] = value;\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    var result = {};\n    for(var key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.keys(students).filter(key => students[key][0] > h && students[key][1] > w)\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result.push(key);\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.entries(students).filter(student => student[1][0] > h && student[1][1] > w).map(student => student[0]);\n}\n",
    "    let result = {};\n    for (let [key, value] of Object.entries(students)){\n        if (value[0] > h && value[1] > w){\n            result[key] = value;\n        }\n    }\n    return result;\n}\n",
    "    return Object.keys(students).filter(key => students[key][0] > h && students[key][1] > w);\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let filtered = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            filtered[key] = students[key];\n        }\n    }\n    return filtered;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for (let [key, value] of Object.entries(students)) {\n        if (value[0] > h && value[1] > w) {\n            result.push(key);\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let [key, value] of Object.entries(students)){\n        if(value[0] > h && value[1] > w){\n            result[key] = value;\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.entries(students).filter(([name, [height, weight]]) => height >= h && weight >= w).map(([name, [height, weight]]) => ({name, height, weight}))\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] >= h && students[key][1] >= w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let [key, value] of Object.entries(students)) {\n        if (value[0] > h && value[1] > w){\n            result[key] = value;\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result.push(key);\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.keys(students).filter(function(key){\n        return students[key][0] > h && students[key][1] > w;\n    });\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] >= h && students[key][1] >= w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.entries(students).filter(student => student[1][0] > h && student[1][1] > w);\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for (let [key, value] of Object.entries(students)){\n        if (value[0] > h && value[1] > w){\n            result.push(key);\n        }\n    }\n    return result;\n}\n",
    "    return Object.keys(students).filter(function(key){\n        return students[key][0] > h && students[key][1] > w;\n    });\n}\n",
    "    let result = {};\n    for (let [key, value] of Object.entries(students)) {\n        if (value[0] > h && value[1] > w) {\n            result[key] = value;\n        }\n    }\n    return result;\n}\n",
    "    return Object.keys(students).filter(key => students[key][0] > h && students[key][1] > w);\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.keys(students).filter(key => students[key][0] > h && students[key][1] > w);\n}\n",
    "    let new_students = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            new_students[key] = students[key];\n        }\n    }\n    return new_students;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "  let result = {};\n  for (let key in students){\n    if (students[key][0] > h && students[key][1] > w){\n      result[key] = students[key];\n    }\n  }\n  return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let filtered = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            filtered[key] = students[key];\n        }\n    }\n    return filtered;\n}\n\nlet students = {\n    \"John\": [1.8, 80],\n    \"Bob\": [1.9, 90],\n    \"Tom\": [1.7, 70],\n    \"Nick\": [1.6, 60],\n    \"Kate\": [1.8, 90]\n};\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.keys(students).filter(key => students[key][0] > h && students[key][1] > w);\n}\n",
    "    let res = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            res[key] = students[key];\n        }\n    }\n    return res;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n\nlet students = {\n    'John': [1.8, 80],\n    'Ann': [1.7, 60],\n    'Pete': [1.9, 90],\n    'Mary': [1.6, 50]\n};\n",
    "    return Object.keys(students).filter(key => students[key][0] > h && students[key][1] > w);\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] >= h && students[key][1] >= w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let filtered = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            filtered[key] = students[key];\n        }\n    }\n    return filtered;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] >= h && students[key][1] >= w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i in students){\n        if(students[i][0] > h && students[i][1] > w){\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let filtered = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            filtered[key] = students[key];\n        }\n    }\n    return filtered;\n}\n",
    "    return Object.entries(students).filter(([name, [height, weight]]) => height > h && weight > w).map(([name, [height, weight]]) => name);\n}\n",
    "    return Object.keys(students).filter(key => students[key][0] > h && students[key][1] > w);\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let filtered = {};\n    for (let student in students){\n        if (students[student][0] > h && students[student][1] > w){\n            filtered[student] = students[student];\n        }\n    }\n    return filtered;\n}\n",
    "    return Object.entries(students).filter(x => x[1][0] > h && x[1][1] > w).map(x => x[0]);\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n\nlet students = {\n    \"John\": [1.8, 80],\n    \"Bob\": [1.9, 90],\n    \"Nick\": [1.7, 60],\n    \"Tom\": [1.6, 70],\n    \"Anna\": [1.5, 50]\n};\n",
    "    let result = {};\n    for (let [key, value] of Object.entries(students)){\n        if (value[0] > h && value[1] > w){\n            result[key] = value;\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let new_students = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            new_students[key] = students[key];\n        }\n    }\n    return new_students;\n}\n",
    "    return Object.keys(students).filter(key => students[key][0] > h && students[key][1] > w);\n}\n",
    "    let result = [];\n    for (let [key, value] of Object.entries(students)){\n        if (value[0] > h && value[1] > w){\n            result.push(key);\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let newObj = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            newObj[key] = students[key];\n        }\n    }\n    return newObj;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.keys(students).filter(key => students[key][0] > h && students[key][1] > w);\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let filtered = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            filtered[key] = students[key];\n        }\n    }\n    return filtered;\n}\n",
    "    let result = {};\n    for (let [key, value] of Object.entries(students)){\n        if (value[0] > h && value[1] > w){\n            result[key] = value;\n        }\n    }\n    return result;\n}\n",
    "    return Object.entries(students).filter(s => s[1][0] > h && s[1][1] > w).map(s => s[0]);\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let student in students){\n        if (students[student][0] > h && students[student][1] > w){\n            result[student] = students[student];\n        }\n    }\n    return result;\n}\n",
    "    return Object.entries(students).filter(student => student[1][0] > h && student[1][1] > w);\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.entries(students).filter(s => s[1][0] > h && s[1][1] > w).map(s => s[0]);\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    return Object.entries(students).filter(student => student[1][0] > h && student[1][1] > w).map(student => student[0]);\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for(let key in students){\n        if(students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] >= h && students[key][1] >= w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let filtered = {};\n    for (let [key, value] of Object.entries(students)){\n        if (value[0] > h && value[1] > w){\n            filtered[key] = value;\n        }\n    }\n    return filtered;\n}\n",
    "    return Object.keys(students).filter(function(key){\n        return students[key][0] > h && students[key][1] > w;\n    });\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n",
    "    let result = {};\n    for (let key in students){\n        if (students[key][0] > h && students[key][1] > w){\n            result[key] = students[key];\n        }\n    }\n    return result;\n}\n"
  ]
}
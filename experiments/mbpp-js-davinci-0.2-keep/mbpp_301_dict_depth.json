{
  "name": "mbpp_301_dict_depth",
  "language": "js",
  "prompt": "//Write a function to find the depth of a dictionary.\nfunction dict_depth(d){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_301_dict_depth.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = dict_depth;\n  assert.deepEqual(candidate({\"a\": 1, \"b\": {\"c\": {\"d\": {}}}}),4);\n  assert.deepEqual(candidate({\"a\": 1, \"b\": {\"c\": \"python\"}}),2);\n  assert.deepEqual(candidate({1: \"Sun\", 2: {3: {4: \"Mon\"}}}),3);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var max = 0;\n    for(var k in d){\n        if(typeof d[k] == \"object\"){\n            var depth = dict_depth(d[k]) + 1;\n            if(depth > max){\n                max = depth;\n            }\n        }\n    }\n    return max;\n}\n",
    "    var depth = 1;\n    for(var key in d){\n        if(typeof d[key] == \"object\"){\n            var depth2 = dict_depth(d[key]) + 1;\n            if(depth2 > depth){\n                depth = depth2;\n            }\n        }\n    }\n    return depth;\n}\n",
    "  var max = 0;\n  for(var k in d){\n    if(typeof d[k] == \"object\"){\n      var depth = dict_depth(d[k]) + 1;\n      if(depth > max){\n        max = depth;\n      }\n    }\n  }\n  return max;\n}\n",
    "    var depth = 0;\n    for(var key in d){\n        if(typeof(d[key]) == \"object\"){\n            var depth2 = dict_depth(d[key]) + 1;\n            if(depth2 > depth){\n                depth = depth2;\n            }\n        }\n    }\n    return depth;\n}\n",
    "\tvar max = 0;\n\tfor(var key in d){\n\t\tif(typeof d[key] == \"object\"){\n\t\t\tvar depth = dict_depth(d[key]) + 1;\n\t\t\tif(depth > max){\n\t\t\t\tmax = depth;\n\t\t\t}\n\t\t}\n\t}\n\treturn max;\n}\n",
    "    if(d === {}) return 0;\n    return 1 + Math.max(...Object.values(d).map(dict_depth));\n}\n",
    "    var depth = 0;\n    for(var k in d){\n        if(typeof d[k] === 'object'){\n            var depth2 = dict_depth(d[k]) + 1;\n            if(depth2 > depth){\n                depth = depth2;\n            }\n        }\n    }\n    return depth;\n}\n",
    "    var max_depth = 0;\n    function depth(d, depth){\n        for(var k in d){\n            if (typeof d[k] == 'object'){\n                depth(d[k], depth+1);\n            }\n            else{\n                if (depth > max_depth){\n                    max_depth = depth;\n                }\n            }\n        }\n    }\n    depth(d, 1);\n    return max_depth;\n}\n",
    "    if(d === {}){\n        return 0;\n    }\n    var max = 1;\n    for(var key in d){\n        if(typeof d[key] === 'object'){\n            var depth = dict_depth(d[key]) + 1;\n            if(depth > max){\n                max = depth;\n            }\n        }\n    }\n    return max;\n}\n",
    "    var max_depth = 0;\n    for (var key in d){\n        if (typeof d[key] == \"object\"){\n            var depth = dict_depth(d[key]) + 1;\n            if (depth > max_depth){\n                max_depth = depth;\n            }\n        }\n    }\n    return max_depth;\n}\n",
    "    if(!d || typeof d !== 'object'){\n        return 0;\n    }\n    var max = 0;\n    for(var key in d){\n        var depth = dict_depth(d[key]);\n        if(depth > max){\n            max = depth;\n        }\n    }\n    return max + 1;\n}\n",
    "  var depth = 0;\n  for(var k in d){\n    if(typeof d[k] == 'object'){\n      var temp_depth = dict_depth(d[k]) + 1;\n      if(temp_depth > depth){\n        depth = temp_depth;\n      }\n    }\n  }\n  return depth;\n}\n",
    "    if(d === {}) return 0;\n    var max = 1;\n    for(var k in d){\n        if(typeof d[k] === 'object'){\n            var depth = dict_depth(d[k]) + 1;\n            if(depth > max) max = depth;\n        }\n    }\n    return max;\n}\n",
    "    var depth = 0;\n    for(var k in d){\n        if(typeof d[k] == 'object'){\n            var depth_k = dict_depth(d[k]) + 1;\n            if(depth_k > depth){\n                depth = depth_k;\n            }\n        }\n    }\n    return depth;\n}\n",
    "\tvar depth = 1;\n\tfor(var k in d){\n\t\tif(typeof d[k] == 'object'){\n\t\t\tvar depth2 = dict_depth(d[k]) + 1;\n\t\t\tif(depth2 > depth)\n\t\t\t\tdepth = depth2;\n\t\t}\n\t}\n\treturn depth;\n}\n",
    "    if(d=={}){\n        return 0;\n    }\n    else{\n        var max=0;\n        for(var i in d){\n            var depth=dict_depth(d[i]);\n            if(depth>max){\n                max=depth;\n            }\n        }\n        return max+1;\n    }\n}\n",
    "    if(d.constructor === Object){\n        return 1 + Math.max(...Object.values(d).map(dict_depth));\n    }\n    return 0;\n}\n",
    "    if(d === {}){\n        return 0;\n    }\n    var max = 1;\n    for(var key in d){\n        if(typeof d[key] === 'object'){\n            var depth = dict_depth(d[key]) + 1;\n            if(depth > max){\n                max = depth;\n            }\n        }\n    }\n    return max;\n}\n",
    "    if(d.constructor === Object){\n        var max = 0;\n        for(var key in d){\n            var v = dict_depth(d[key]);\n            if(v > max){\n                max = v;\n            }\n        }\n        return max + 1;\n    }\n    return 0;\n}\n",
    "    var max = 0;\n    for(var i in d){\n        if(typeof d[i] == \"object\"){\n            var depth = dict_depth(d[i]) + 1;\n            if(depth > max){\n                max = depth;\n            }\n        }\n    }\n    return max;\n}\n"
  ]
}
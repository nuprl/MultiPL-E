{
  "name": "mbpp_440_find_adverb_position",
  "language": "js",
  "prompt": "//Write a function to find the first adverb and their positions in a given sentence.\nfunction find_adverb_position(text){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_440_find_adverb_position.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_adverb_position;\n  assert.deepEqual(candidate(\"clearly!! we can see the sky\"),[0, 7, \"clearly\"]);\n  assert.deepEqual(candidate(\"seriously!! there are many roses\"),[0, 9, \"seriously\"]);\n  assert.deepEqual(candidate(\"unfortunately!! sita is going to home\"),[0, 13, \"unfortunately\"]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_list_position = [];\n    var adverb_list_position_final = [];\n    var adverb_list_final = [];\n    var text_array = text.split(\" \");\n    for(var i = 0; i < text_array.length; i++){\n        if(text_array[i].endsWith(\"ly\")){\n            adverb_list.push(text_array[i]);\n            adverb_list_position.push(i);\n        }\n    }\n    adverb_list_final.push(adverb_list[0]);\n    adverb_list_position_final.push(adverb_list_position[0]);\n    adverb_position.push(adverb_list_final);\n    adverb_position.push(adverb_list_position_final);\n    return adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverb_array = text.match(/\\w+ly/g);\n    var adverb_array_length = adverb_array.length;\n    for(var i = 0; i < adverb_array_length; i++){\n        adverb_position.push(text.indexOf(adverb_array[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverb = text.match(/\\w+ly/g);\n    var adverb_position = text.match(/\\w+ly/g).index;\n    return adverb + \" \" + adverb_position;\n}",
    "    var adverb = text.match(/\\w+ly/g);\n    var adverb_position = [];\n    for(var i = 0; i < adverb.length; i++){\n        adverb_position.push(text.indexOf(adverb[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverb_array = [];\n    var adverb_index = [];\n    var adverb_array = text.match(/\\w+ly/g);\n    for(var i=0; i<adverb_array.length; i++){\n        adverb_index.push(text.indexOf(adverb_array[i]));\n    }\n    adverb_position.push(adverb_array, adverb_index);\n    return adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverbs = text.match(/\\w+ly/g);\n    if(adverbs){\n        for(var i=0; i<adverbs.length; i++){\n            adverb_position.push(text.indexOf(adverbs[i]));\n        }\n    }\n    return adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_index = 0;\n    var adverb_array = text.split(\" \");\n    for(var i = 0; i < adverb_array.length; i++){\n        if(adverb_array[i].endsWith(\"ly\")){\n            adverb_list[adverb_index] = adverb_array[i];\n            adverb_position[adverb_index] = i;\n            adverb_index++;\n        }\n    }\n    return adverb_list + \" \" + adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_regex = /\\w+ly/g;\n    var adverb_match = text.match(adverb_regex);\n    var adverb_match_length = adverb_match.length;\n    for(var i=0;i<adverb_match_length;i++){\n        var adverb_position_regex = new RegExp(adverb_match[i]);\n        var adverb_position_match = text.match(adverb_position_regex);\n        adverb_position.push(adverb_position_match.index);\n        adverb_list.push(adverb_match[i]);\n    }\n    return [adverb_list,adverb_position];\n}\n",
    "    var adverb = [];\n    var adverb_position = [];\n    var text_array = text.split(\" \");\n    for(var i = 0; i < text_array.length; i++){\n        if(text_array[i].endsWith(\"ly\")){\n            adverb.push(text_array[i]);\n            adverb_position.push(i);\n        }\n    }\n    console.log(adverb);\n    console.log(adverb_position);\n}\nfind_adverb_position(\"She worked diligently\");\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_list_position = [];\n    var text_list = text.split(\" \");\n    for(var i = 0; i < text_list.length; i++){\n        if(text_list[i].endsWith(\"ly\")){\n            adverb_list.push(text_list[i]);\n            adverb_list_position.push(i);\n        }\n    }\n    adverb_position.push(adverb_list);\n    adverb_position.push(adverb_list_position);\n    return adverb_position;\n}\n",
    "    let adverb_position = [];\n    let adverb_index = 0;\n    let adverb_array = [];\n    let adverb_regex = /\\w+ly/g;\n    let adverb_match = adverb_regex.exec(text);\n    while(adverb_match){\n        adverb_array.push(adverb_match[0]);\n        adverb_position.push(adverb_match.index);\n        adverb_match = adverb_regex.exec(text);\n    }\n    return adverb_array + \" \" + adverb_position;\n}\n",
    "    var text = text.split(\" \");\n    var adverb = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i].endsWith(\"ly\")){\n            adverb.push(text[i]);\n        }\n    }\n    return adverb;\n}",
    "    var adverb = /\\w+(ly)/g;\n    var result = text.match(adverb);\n    console.log(result);\n    var position = [];\n    for(var i=0; i<result.length; i++){\n        position.push(text.indexOf(result[i]));\n    }\n    console.log(position);\n}\nfind_adverb_position(\"She works very quickly\");\nfind_adverb_position(\"She eats really healthily\");\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_regex = /\\w+ly/g;\n    var adverb_match = adverb_regex.exec(text);\n    while(adverb_match != null){\n        adverb_list.push(adverb_match[0]);\n        adverb_position.push(adverb_match.index);\n        adverb_match = adverb_regex.exec(text);\n    }\n    return [adverb_list, adverb_position];\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return [adverbs, adverb_positions];\n}\n",
    "    var adverb_position = [];\n    var adverb_array = [];\n    var adverb_index = 0;\n    var adverb_array_index = 0;\n    var text_array = text.split(\" \");\n    for(var i=0; i<text_array.length; i++){\n        if(text_array[i].endsWith(\"ly\")){\n            adverb_position[adverb_index] = i;\n            adverb_array[adverb_array_index] = text_array[i];\n            adverb_index++;\n            adverb_array_index++;\n        }\n    }\n    return adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverb = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb_position.push(i);\n            adverb.push(words[i]);\n        }\n    }\n    return adverb_position;\n}",
    "    var adverb = [];\n    var position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            position.push(i+1);\n        }\n    }\n    return [adverb, position];\n}\n",
    "    var adverb_position = [];\n    var adverb_array = text.match(/\\w+ly/g);\n    for(var i=0; i<adverb_array.length; i++){\n        adverb_position.push(text.indexOf(adverb_array[i]));\n    }\n    return adverb_position;\n}\n"
  ]
}
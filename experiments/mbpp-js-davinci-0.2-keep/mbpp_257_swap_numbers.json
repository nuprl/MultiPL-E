{
  "name": "mbpp_257_swap_numbers",
  "language": "js",
  "prompt": "//Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers(a, b){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_257_swap_numbers.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = swap_numbers;\n  assert.deepEqual(candidate(10, 20),[20, 10]);\n  assert.deepEqual(candidate(15, 17),[17, 15]);\n  assert.deepEqual(candidate(100, 200),[200, 100]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n"
  ]
}
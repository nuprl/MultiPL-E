{
  "name": "mbpp_277_dict_filter",
  "language": "js",
  "prompt": "//Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunction dict_filter(dict, n){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_277_dict_filter.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = dict_filter;\n  assert.deepEqual(candidate({\"Cierra Vega\": 175, \"Alden Cantrell\": 180, \"Kierra Gentry\": 165, \"Pierre Cox\": 190}, 170),{\"Cierra Vega\": 175, \"Alden Cantrell\": 180, \"Pierre Cox\": 190});\n  assert.deepEqual(candidate({\"Cierra Vega\": 175, \"Alden Cantrell\": 180, \"Kierra Gentry\": 165, \"Pierre Cox\": 190}, 180),{\"Alden Cantrell\": 180, \"Pierre Cox\": 190});\n  assert.deepEqual(candidate({\"Cierra Vega\": 175, \"Alden Cantrell\": 180, \"Kierra Gentry\": 165, \"Pierre Cox\": 190}, 190),{\"Pierre Cox\": 190});\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var new_dict = {};\n    for (var key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    let new_dict = {};\n    for (let key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for (var key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for (var key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for (var key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for (var key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for (var key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for (var key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for (var key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for (var key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for (var key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for(var key in dict){\n        if(dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for (var key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for(var key in dict){\n        if(dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for (var key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for (var key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for (var key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for (var key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for (var key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n",
    "    var new_dict = {};\n    for (var key in dict){\n        if (dict[key] >= n){\n            new_dict[key] = dict[key];\n        }\n    }\n    return new_dict;\n}\n"
  ]
}
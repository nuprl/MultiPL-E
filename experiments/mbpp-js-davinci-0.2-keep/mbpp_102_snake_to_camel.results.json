{
  "name": "mbpp_102_snake_to_camel",
  "language": "js",
  "prompt": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_102_snake_to_camel.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpqmknfycb.js:10:10)\n    at Object.<anonymous> (/tmp/tmpqmknfycb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpsjcxt70o.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsjcxt70o.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    var newWord = word[0];\n    for(var i = 1; i < word.length; i++){\n        newWord += word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return newWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp9257fw7f.js:16:10)\n    at Object.<anonymous> (/tmp/tmp9257fw7f.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpqmknfycb.js:10:10)\n    at Object.<anonymous> (/tmp/tmpqmknfycb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var words = word.split(\"_\");\n    var camel = words[0];\n    for(var i = 1; i < words.length; i++){\n        camel += words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    }\n    return camel;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpae31p6oo.js:16:10)\n    at Object.<anonymous> (/tmp/tmpae31p6oo.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpx20cr792.js:11:10)\n    at Object.<anonymous> (/tmp/tmpx20cr792.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpnfjsba0l.js:15:10)\n    at Object.<anonymous> (/tmp/tmpnfjsba0l.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i !== 0){\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }else{\n            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpvogd02e8.js:19:10)\n    at Object.<anonymous> (/tmp/tmpvogd02e8.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        }\n        else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp63rot6__.js:20:10)\n    at Object.<anonymous> (/tmp/tmp63rot6__.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpsjcxt70o.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsjcxt70o.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpqmknfycb.js:10:10)\n    at Object.<anonymous> (/tmp/tmpqmknfycb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var wordArr = word.split(\"_\");\n    var newWord = \"\";\n    for(var i = 0; i < wordArr.length; i++){\n        if(i == 0){\n            newWord += wordArr[i];\n        }\n        else{\n            newWord += wordArr[i][0].toUpperCase() + wordArr[i].slice(1);\n        }\n    }\n    return newWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmptp43ur73.js:21:10)\n    at Object.<anonymous> (/tmp/tmptp43ur73.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            i++;\n            newWord += word[i].toUpperCase();\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpvotuukks.js:19:10)\n    at Object.<anonymous> (/tmp/tmpvotuukks.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word_array = word.split(\"_\");\n    var new_word = \"\";\n    for(var i = 0; i < word_array.length; i++){\n        if(i == 0){\n            new_word += word_array[i];\n        }\n        else{\n            new_word += word_array[i].charAt(0).toUpperCase() + word_array[i].slice(1);\n        }\n    }\n    return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpoep8qyst.js:21:10)\n    at Object.<anonymous> (/tmp/tmpoep8qyst.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word_array = word.split(\"_\");\n    var new_word = word_array[0];\n    for(var i = 1; i < word_array.length; i++){\n        new_word += word_array[i].charAt(0).toUpperCase() + word_array[i].slice(1);\n    }\n    return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp1t1hl2gw.js:16:10)\n    at Object.<anonymous> (/tmp/tmp1t1hl2gw.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp1dnmvig5.js:11:10)\n    at Object.<anonymous> (/tmp/tmp1dnmvig5.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpsjcxt70o.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsjcxt70o.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word_array = word.split(\"_\");\n    for(var i = 1; i < word_array.length; i++){\n        word_array[i] = word_array[i].charAt(0).toUpperCase() + word_array[i].slice(1);\n    }\n    return word_array.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmphdsejmrc.js:15:10)\n    at Object.<anonymous> (/tmp/tmphdsejmrc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpqmknfycb.js:10:10)\n    at Object.<anonymous> (/tmp/tmpqmknfycb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i === 0){\n            newArr.push(arr[i]);\n        } else {\n            newArr.push(arr[i][0].toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp1sygnjea.js:19:10)\n    at Object.<anonymous> (/tmp/tmp1sygnjea.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpbz4nwzzr.js:11:10)\n    at Object.<anonymous> (/tmp/tmpbz4nwzzr.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.replace(/_\\w/g, function(m){return m[1].toUpperCase();});\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmprje1l944.js:11:10)\n    at Object.<anonymous> (/tmp/tmprje1l944.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python_program'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpb1e8xcfe.js:11:10)\n    at Object.<anonymous> (/tmp/tmpb1e8xcfe.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python_program',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for (var i = 0; i < arr.length; i++){\n        newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split('_');\n    for(var i = 1; i < word.length; i++){\n        word[i] = word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return word.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0pg2p7iz.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0pg2p7iz.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp9pezu8z9.js:14:10)\n    at Object.<anonymous> (/tmp/tmp9pezu8z9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpqmknfycb.js:10:10)\n    at Object.<anonymous> (/tmp/tmpqmknfycb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = word.split(\"_\");\n    for(let i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].substring(1);\n    }\n    return newWord.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpbrwq0wwf.js:15:10)\n    at Object.<anonymous> (/tmp/tmpbrwq0wwf.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = \"\";\n    for(var i=0; i<word.length; i++){\n        if(word[i] === \"_\"){\n            result += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            result += word[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpv9hmfnro.js:20:10)\n    at Object.<anonymous> (/tmp/tmpv9hmfnro.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    var newWord2 = newWord.map(function(word,index){\n        if(index > 0){\n            return word.charAt(0).toUpperCase() + word.slice(1);\n        }\n        return word;\n    });\n    return newWord2.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpniyotlyz.js:17:10)\n    at Object.<anonymous> (/tmp/tmpniyotlyz.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpnfjsba0l.js:15:10)\n    at Object.<anonymous> (/tmp/tmpnfjsba0l.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp1dnmvig5.js:11:10)\n    at Object.<anonymous> (/tmp/tmp1dnmvig5.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(match){\n        return match[1].toUpperCase();\n    });\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp59uy69hy.js:12:10)\n    at Object.<anonymous> (/tmp/tmp59uy69hy.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n  return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpkevro5_f.js:11:10)\n    at Object.<anonymous> (/tmp/tmpkevro5_f.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/_/g, ' ').replace(/\\w\\S*/g, function(txt){\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    }).replace(/ /g, '');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python_program'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpb1e8xcfe.js:11:10)\n    at Object.<anonymous> (/tmp/tmpb1e8xcfe.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python_program',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var wordArray = word.split(\"_\");\n    var newWord = wordArray[0];\n    for(var i = 1; i < wordArray.length; i++){\n        newWord += wordArray[i].charAt(0).toUpperCase() + wordArray[i].slice(1);\n    }\n    return newWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpuvl3ksyp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpuvl3ksyp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = word.split('_');\n    for (let i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmppa0m01es.js:14:10)\n    at Object.<anonymous> (/tmp/tmppa0m01es.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpsjcxt70o.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsjcxt70o.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var split = word.split(\"_\");\n    var newWord = split[0];\n    for(var i = 1; i < split.length; i++){\n        newWord += split[i].charAt(0).toUpperCase() + split[i].slice(1);\n    }\n    return newWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmptzicv2jo.js:16:10)\n    at Object.<anonymous> (/tmp/tmptzicv2jo.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpsjcxt70o.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsjcxt70o.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/_/g, ' ').replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();}).replace(/ /g, '');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = '';\n    var wordArray = word.split('_');\n    for(var i = 0; i < wordArray.length; i++){\n        if(i == 0){\n            result += wordArray[i];\n        }else{\n            result += wordArray[i].charAt(0).toUpperCase() + wordArray[i].slice(1);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpsn5wvqvu.js:20:10)\n    at Object.<anonymous> (/tmp/tmpsn5wvqvu.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.replace(/_/g, ' ');\n    var newWord = newWord.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n    var newWord = newWord.replace(/ /g, '');\n    return newWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp1dnmvig5.js:11:10)\n    at Object.<anonymous> (/tmp/tmp1dnmvig5.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    var camel = word[0];\n    for(var i = 1; i < word.length; i++){\n        camel += word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return camel;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpqhmfj3se.js:16:10)\n    at Object.<anonymous> (/tmp/tmpqhmfj3se.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpl_cujgs_.js:20:10)\n    at Object.<anonymous> (/tmp/tmpl_cujgs_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(match){\n        return match[1].toUpperCase();\n    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpl65g5gy_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpl65g5gy_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = '';\n    for(let i = 0; i < word.length; i++){\n        if(word[i] === '_'){\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmprjyrj_k3.js:19:10)\n    at Object.<anonymous> (/tmp/tmprjyrj_k3.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = '';\n    for(let i = 0; i < word.length; i++){\n        if(word[i] === '_'){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp_spw8okk.js:20:10)\n    at Object.<anonymous> (/tmp/tmp_spw8okk.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp1dnmvig5.js:11:10)\n    at Object.<anonymous> (/tmp/tmp1dnmvig5.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/_\\w/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmph3q429ri.js:10:10)\n    at Object.<anonymous> (/tmp/tmph3q429ri.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word_array = word.split(\"_\");\n    var new_word = \"\";\n    for(var i = 0; i < word_array.length; i++){\n        if(i == 0){\n            new_word += word_array[i];\n        }\n        else{\n            new_word += word_array[i].charAt(0).toUpperCase() + word_array[i].slice(1);\n        }\n    }\n    return new_word;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpxn5e1yo9.js:20:10)\n    at Object.<anonymous> (/tmp/tmpxn5e1yo9.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = '';\n    for(let i = 0; i < word.length; i++){\n        if(word[i] === '_'){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp8thq3tlm.js:20:10)\n    at Object.<anonymous> (/tmp/tmp8thq3tlm.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp1dnmvig5.js:11:10)\n    at Object.<anonymous> (/tmp/tmp1dnmvig5.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python_program'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0hb45txt.js:10:10)\n    at Object.<anonymous> (/tmp/tmp0hb45txt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python_program',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word_array = word.split(\"_\");\n    var new_word = \"\";\n    for(var i = 0; i < word_array.length; i++){\n        new_word += word_array[i].charAt(0).toUpperCase() + word_array[i].slice(1);\n    }\n    return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp1dnmvig5.js:11:10)\n    at Object.<anonymous> (/tmp/tmp1dnmvig5.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp1dnmvig5.js:11:10)\n    at Object.<anonymous> (/tmp/tmp1dnmvig5.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word_array = word.split(\"_\");\n    var new_word = \"\";\n    for(var i = 0; i < word_array.length; i++){\n        if(i == 0){\n            new_word += word_array[i];\n        }\n        else{\n            new_word += word_array[i].charAt(0).toUpperCase() + word_array[i].slice(1);\n        }\n    }\n    return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpoep8qyst.js:21:10)\n    at Object.<anonymous> (/tmp/tmpoep8qyst.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    var newWord2 = newWord.map(function(word, index){\n        if(index > 0){\n            return word.charAt(0).toUpperCase() + word.slice(1);\n        }\n        return word;\n    });\n    return newWord2.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpcut8o1n9.js:18:10)\n    at Object.<anonymous> (/tmp/tmpcut8o1n9.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    var newWord = word[0];\n    for(var i = 1; i < word.length; i++){\n        newWord += word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return newWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp9257fw7f.js:16:10)\n    at Object.<anonymous> (/tmp/tmp9257fw7f.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpo_v0ayo3.js:21:10)\n    at Object.<anonymous> (/tmp/tmpo_v0ayo3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    for(var i = 1; i < word.length; i++){\n        word[i] = word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return word.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpt8r_hzc_.js:15:10)\n    at Object.<anonymous> (/tmp/tmpt8r_hzc_.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/_/g, ' ').replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();}).replace(/ /g, '');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            result += word[i+1].toUpperCase();\n            i++;\n        }else{\n            result += word[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp5ytzai72.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5ytzai72.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n  var newWord = word.split('_');\n  for(var i = 1; i < newWord.length; i++){\n    newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n  }\n  return newWord.join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpear97ma_.js:15:10)\n    at Object.<anonymous> (/tmp/tmpear97ma_.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var words = word.split('_');\n    var result = words[0];\n    for(var i = 1; i < words.length; i++){\n        result += words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpz0r6x8mc.js:16:10)\n    at Object.<anonymous> (/tmp/tmpz0r6x8mc.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp1dnmvig5.js:11:10)\n    at Object.<anonymous> (/tmp/tmp1dnmvig5.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            result += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            result += word[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp7uj9tbsa.js:20:10)\n    at Object.<anonymous> (/tmp/tmp7uj9tbsa.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i === 0){\n            newArr.push(arr[i]);\n        }\n        else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpcxp2s7_y.js:20:10)\n    at Object.<anonymous> (/tmp/tmpcxp2s7_y.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp1dnmvig5.js:11:10)\n    at Object.<anonymous> (/tmp/tmp1dnmvig5.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/_\\w/g, function(match){\n        return match[1].toUpperCase();\n    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpa5frzf3w.js:13:10)\n    at Object.<anonymous> (/tmp/tmpa5frzf3w.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var wordArray = word.split(\"_\");\n    for(var i = 1; i < wordArray.length; i++){\n        wordArray[i] = wordArray[i].charAt(0).toUpperCase() + wordArray[i].slice(1);\n    }\n    return wordArray.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpxd7yk5gj.js:15:10)\n    at Object.<anonymous> (/tmp/tmpxd7yk5gj.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpo_v0ayo3.js:21:10)\n    at Object.<anonymous> (/tmp/tmpo_v0ayo3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i=1; i<newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpqbjv8ify.js:14:10)\n    at Object.<anonymous> (/tmp/tmpqbjv8ify.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp9pezu8z9.js:14:10)\n    at Object.<anonymous> (/tmp/tmp9pezu8z9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i === 0){\n            newArr.push(arr[i]);\n        } else {\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp4_5mih8e.js:20:10)\n    at Object.<anonymous> (/tmp/tmp4_5mih8e.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python_program'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0hb45txt.js:10:10)\n    at Object.<anonymous> (/tmp/tmp0hb45txt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python_program',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        }else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp6zlghvmb.js:19:10)\n    at Object.<anonymous> (/tmp/tmp6zlghvmb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    var newWord = word[0];\n    for(var i = 1; i < word.length; i++){\n        newWord += word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpsxzs894o.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsxzs894o.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            result += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            result += word[i];\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpl6tp9o4w.js:21:10)\n    at Object.<anonymous> (/tmp/tmpl6tp9o4w.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = word.split(\"_\");\n    for(let i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpp5i0kueo.js:14:10)\n    at Object.<anonymous> (/tmp/tmpp5i0kueo.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    for(var i = 1; i < arr.length; i++){\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpwakq_5w1.js:14:10)\n    at Object.<anonymous> (/tmp/tmpwakq_5w1.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    for(var i = 1; i < arr.length; i++){\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return arr.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp10hz0_hk.js:15:10)\n    at Object.<anonymous> (/tmp/tmp10hz0_hk.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    var newWord2 = newWord.map(function(word, index){\n        if(index > 0){\n            return word.charAt(0).toUpperCase() + word.slice(1);\n        }\n        return word;\n    });\n    return newWord2.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmplypk1si5.js:17:10)\n    at Object.<anonymous> (/tmp/tmplypk1si5.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpsjcxt70o.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsjcxt70o.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpsjcxt70o.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsjcxt70o.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpqmknfycb.js:10:10)\n    at Object.<anonymous> (/tmp/tmpqmknfycb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    for(var i = 1; i < word.length; i++){\n        word[i] = word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return word.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpo03kb5ee.js:14:10)\n    at Object.<anonymous> (/tmp/tmpo03kb5ee.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = word.split(\"_\");\n    for(let i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpp5i0kueo.js:14:10)\n    at Object.<anonymous> (/tmp/tmpp5i0kueo.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var new_word = word.split(\"_\");\n    for(var i = 1; i < new_word.length; i++){\n        new_word[i] = new_word[i].charAt(0).toUpperCase() + new_word[i].slice(1);\n    }\n    return new_word.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp7n3c7su5.js:14:10)\n    at Object.<anonymous> (/tmp/tmp7n3c7su5.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = word.split(\"_\");\n    for(let i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpp5i0kueo.js:14:10)\n    at Object.<anonymous> (/tmp/tmpp5i0kueo.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i === 0){\n            newArr.push(arr[i]);\n        }else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp3m2ncoxl.js:19:10)\n    at Object.<anonymous> (/tmp/tmp3m2ncoxl.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    for(var i = 1; i < word.length; i++){\n        word[i] = word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return word.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpo03kb5ee.js:14:10)\n    at Object.<anonymous> (/tmp/tmpo03kb5ee.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        }else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp6zlghvmb.js:19:10)\n    at Object.<anonymous> (/tmp/tmp6zlghvmb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp1dnmvig5.js:11:10)\n    at Object.<anonymous> (/tmp/tmp1dnmvig5.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var wordArr = word.split(\"_\");\n    for(var i = 1; i < wordArr.length; i++){\n        wordArr[i] = wordArr[i].charAt(0).toUpperCase() + wordArr[i].slice(1);\n    }\n    return wordArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmprinyvog4.js:14:10)\n    at Object.<anonymous> (/tmp/tmprinyvog4.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    var camelWord = newWord[0];\n    for(var i = 1; i < newWord.length; i++){\n        var firstLetter = newWord[i].charAt(0);\n        var restOfWord = newWord[i].slice(1);\n        camelWord += firstLetter.toUpperCase() + restOfWord;\n    }\n    return camelWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpnt28mb30.js:18:10)\n    at Object.<anonymous> (/tmp/tmpnt28mb30.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split('_');\n    for(var i = 1; i < arr.length; i++){\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return arr.join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpvmhpfze7.js:15:10)\n    at Object.<anonymous> (/tmp/tmpvmhpfze7.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp9pezu8z9.js:14:10)\n    at Object.<anonymous> (/tmp/tmp9pezu8z9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp1dnmvig5.js:11:10)\n    at Object.<anonymous> (/tmp/tmp1dnmvig5.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python_program'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpb1e8xcfe.js:11:10)\n    at Object.<anonymous> (/tmp/tmpb1e8xcfe.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python_program',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].substring(1);\n    }\n    return newWord.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp42_a6pkr.js:15:10)\n    at Object.<anonymous> (/tmp/tmp42_a6pkr.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var wordArray = word.split(\"_\");\n    var newWord = \"\";\n    for(var i = 0; i < wordArray.length; i++){\n        newWord += wordArray[i].charAt(0).toUpperCase() + wordArray[i].slice(1);\n    }\n    return newWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python_program'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpb1e8xcfe.js:11:10)\n    at Object.<anonymous> (/tmp/tmpb1e8xcfe.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python_program',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newWord = arr[0];\n    for(var i = 1; i < arr.length; i++){\n        newWord += arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpt085kor7.js:15:10)\n    at Object.<anonymous> (/tmp/tmpt085kor7.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpqmknfycb.js:10:10)\n    at Object.<anonymous> (/tmp/tmpqmknfycb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    var camelWord = newWord[0];\n    for(var i = 1; i < newWord.length; i++){\n        camelWord += newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return camelWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp76jpeffh.js:15:10)\n    at Object.<anonymous> (/tmp/tmp76jpeffh.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpx20cr792.js:11:10)\n    at Object.<anonymous> (/tmp/tmpx20cr792.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpqmknfycb.js:10:10)\n    at Object.<anonymous> (/tmp/tmpqmknfycb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n  var newWord = word.split(\"_\");\n  for(var i = 1; i < newWord.length; i++){\n    newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n  }\n  return newWord.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmput9mtjxb.js:15:10)\n    at Object.<anonymous> (/tmp/tmput9mtjxb.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word_array = word.split(\"_\");\n    var new_word = \"\";\n    for(var i = 0; i < word_array.length; i++){\n        if(i == 0){\n            new_word += word_array[i];\n        }\n        else{\n            new_word += word_array[i].charAt(0).toUpperCase() + word_array[i].slice(1);\n        }\n    }\n    return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpoep8qyst.js:21:10)\n    at Object.<anonymous> (/tmp/tmpoep8qyst.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    for(var i = 1; i < arr.length; i++){\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return arr.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp10hz0_hk.js:15:10)\n    at Object.<anonymous> (/tmp/tmp10hz0_hk.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            i++;\n            result += word[i].toUpperCase();\n        }\n        else{\n            result += word[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpafqpxdcs.js:20:10)\n    at Object.<anonymous> (/tmp/tmpafqpxdcs.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = '';\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === '_'){\n            result += word[i+1].toUpperCase();\n            i++;\n        } else {\n            result += word[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmps32ikho8.js:19:10)\n    at Object.<anonymous> (/tmp/tmps32ikho8.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split('_');\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        }else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp60ak25jc.js:19:10)\n    at Object.<anonymous> (/tmp/tmp60ak25jc.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp9pezu8z9.js:14:10)\n    at Object.<anonymous> (/tmp/tmp9pezu8z9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].substring(1);\n    }\n    return newWord.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp42_a6pkr.js:15:10)\n    at Object.<anonymous> (/tmp/tmp42_a6pkr.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.replace(/_/g, \" \");\n    newWord = newWord.split(\" \");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    newWord = newWord.join(\"\");\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmplzbiqozs.js:16:10)\n    at Object.<anonymous> (/tmp/tmplzbiqozs.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpqmknfycb.js:10:10)\n    at Object.<anonymous> (/tmp/tmpqmknfycb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newWord = arr[0];\n    for(var i = 1; i < arr.length; i++){\n        newWord += arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpt085kor7.js:15:10)\n    at Object.<anonymous> (/tmp/tmpt085kor7.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python_program'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpb1e8xcfe.js:11:10)\n    at Object.<anonymous> (/tmp/tmpb1e8xcfe.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python_program',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i === 0){\n            newArr.push(arr[i]);\n        }else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp3m2ncoxl.js:19:10)\n    at Object.<anonymous> (/tmp/tmp3m2ncoxl.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python_program'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpb1e8xcfe.js:11:10)\n    at Object.<anonymous> (/tmp/tmpb1e8xcfe.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python_program',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    var newWord2 = newWord.map(function(word, index){\n        if(index > 0){\n            return word.charAt(0).toUpperCase() + word.slice(1);\n        }\n        return word;\n    });\n    return newWord2.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmplypk1si5.js:17:10)\n    at Object.<anonymous> (/tmp/tmplypk1si5.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    var newWord = word[0];\n    for(var i = 1; i < word.length; i++){\n        newWord += word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpsxzs894o.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsxzs894o.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp1dnmvig5.js:11:10)\n    at Object.<anonymous> (/tmp/tmp1dnmvig5.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python_program'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0hb45txt.js:10:10)\n    at Object.<anonymous> (/tmp/tmp0hb45txt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python_program',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    for(var i = 1; i < arr.length; i++){\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].substring(1);\n    }\n    return arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpo2we17xr.js:14:10)\n    at Object.<anonymous> (/tmp/tmpo2we17xr.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpzdh96sh6.js:20:10)\n    at Object.<anonymous> (/tmp/tmpzdh96sh6.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpzdh96sh6.js:20:10)\n    at Object.<anonymous> (/tmp/tmpzdh96sh6.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n  var newWord = word.split(\"_\");\n  var newWord2 = newWord.map(function(word, index){\n    if(index > 0){\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    return word;\n  });\n  return newWord2.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp7i6brypb.js:18:10)\n    at Object.<anonymous> (/tmp/tmp7i6brypb.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpnfjsba0l.js:15:10)\n    at Object.<anonymous> (/tmp/tmpnfjsba0l.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n  return word.replace(/_\\w/g, function(match){\n    return match[1].toUpperCase();\n  });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpseba6vk0.js:13:10)\n    at Object.<anonymous> (/tmp/tmpseba6vk0.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpx20cr792.js:11:10)\n    at Object.<anonymous> (/tmp/tmpx20cr792.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python_program'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0hb45txt.js:10:10)\n    at Object.<anonymous> (/tmp/tmp0hb45txt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python_program',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpqmknfycb.js:10:10)\n    at Object.<anonymous> (/tmp/tmpqmknfycb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i != 0){\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n        else{\n            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpwvrubh29.js:20:10)\n    at Object.<anonymous> (/tmp/tmpwvrubh29.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = word.split(\"_\");\n    let camelWord = newWord[0];\n    for(let i = 1; i < newWord.length; i++){\n        camelWord += newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return camelWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp_977somv.js:16:10)\n    at Object.<anonymous> (/tmp/tmp_977somv.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.replace(/_\\w/g, function(m){return m[1].toUpperCase();});\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp6th9vohj.js:12:10)\n    at Object.<anonymous> (/tmp/tmp6th9vohj.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/_\\w/g, function(match){\n        return match[1].toUpperCase();\n    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpa5frzf3w.js:13:10)\n    at Object.<anonymous> (/tmp/tmpa5frzf3w.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpnfjsba0l.js:15:10)\n    at Object.<anonymous> (/tmp/tmpnfjsba0l.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        } else {\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp22g230j8.js:20:10)\n    at Object.<anonymous> (/tmp/tmp22g230j8.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.replace(/_\\w/g, function(m){return m[1].toUpperCase();});\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp6th9vohj.js:12:10)\n    at Object.<anonymous> (/tmp/tmp6th9vohj.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python_program'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpb1e8xcfe.js:11:10)\n    at Object.<anonymous> (/tmp/tmpb1e8xcfe.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python_program',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpqmknfycb.js:10:10)\n    at Object.<anonymous> (/tmp/tmpqmknfycb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp1dnmvig5.js:11:10)\n    at Object.<anonymous> (/tmp/tmp1dnmvig5.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpbz4nwzzr.js:11:10)\n    at Object.<anonymous> (/tmp/tmpbz4nwzzr.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word_array = word.split(\"_\");\n    var new_word = \"\";\n    for(var i = 0; i < word_array.length; i++){\n        new_word += word_array[i].charAt(0).toUpperCase() + word_array[i].slice(1);\n    }\n    return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    for (var i = 1; i < arr.length; i++) {\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return arr.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpb9wb90zs.js:15:10)\n    at Object.<anonymous> (/tmp/tmpb9wb90zs.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var new_word = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] == \"_\"){\n            new_word += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            new_word += word[i];\n        }\n    }\n    return new_word;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp_yeywxgv.js:20:10)\n    at Object.<anonymous> (/tmp/tmp_yeywxgv.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i > 0){\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        } else {\n            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpfml4ltw1.js:19:10)\n    at Object.<anonymous> (/tmp/tmpfml4ltw1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/_\\w/g, function(match){\n        return match[1].toUpperCase();\n    });\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpqn9xlyk2.js:12:10)\n    at Object.<anonymous> (/tmp/tmpqn9xlyk2.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.split(\"_\");\n    for (var i = 1; i < result.length; i++) {\n        result[i] = result[i].charAt(0).toUpperCase() + result[i].slice(1);\n    }\n    return result.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpr0n5q10j.js:15:10)\n    at Object.<anonymous> (/tmp/tmpr0n5q10j.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp9pezu8z9.js:14:10)\n    at Object.<anonymous> (/tmp/tmp9pezu8z9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        }else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp6zlghvmb.js:19:10)\n    at Object.<anonymous> (/tmp/tmp6zlghvmb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = \"\";\n    for(let i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpvgfoi06y.js:19:10)\n    at Object.<anonymous> (/tmp/tmpvgfoi06y.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpsjcxt70o.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsjcxt70o.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpsjcxt70o.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsjcxt70o.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpnfjsba0l.js:15:10)\n    at Object.<anonymous> (/tmp/tmpnfjsba0l.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = word.split('_');\n    for(let i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpyknqxl4v.js:14:10)\n    at Object.<anonymous> (/tmp/tmpyknqxl4v.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word_array = word.split(\"_\");\n    var new_word = \"\";\n    for(var i = 0; i < word_array.length; i++){\n        if(i == 0){\n            new_word += word_array[i];\n        }\n        else{\n            new_word += word_array[i].charAt(0).toUpperCase() + word_array[i].slice(1);\n        }\n    }\n    return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpoep8qyst.js:21:10)\n    at Object.<anonymous> (/tmp/tmpoep8qyst.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word_array = word.split('_');\n    var new_word = word_array[0];\n    for(var i = 1; i < word_array.length; i++){\n        new_word += word_array[i].charAt(0).toUpperCase() + word_array[i].slice(1);\n    }\n    return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp8epcxkg8.js:16:10)\n    at Object.<anonymous> (/tmp/tmp8epcxkg8.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i === 0){\n            newArr.push(arr[i]);\n        }else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp6veffkpc.js:20:10)\n    at Object.<anonymous> (/tmp/tmp6veffkpc.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpqmknfycb.js:10:10)\n    at Object.<anonymous> (/tmp/tmpqmknfycb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0giav184.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0giav184.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split('_');\n    for(var i = 1; i < arr.length; i++){\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return arr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpzfcvrl5n.js:14:10)\n    at Object.<anonymous> (/tmp/tmpzfcvrl5n.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.replace(/_\\w/g, function(m){return m[1].toUpperCase();});\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp6th9vohj.js:12:10)\n    at Object.<anonymous> (/tmp/tmp6th9vohj.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpqmknfycb.js:10:10)\n    at Object.<anonymous> (/tmp/tmpqmknfycb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var wordArray = word.split(\"_\");\n    var newWord = \"\";\n    for(var i = 0; i < wordArray.length; i++){\n        if(i === 0){\n            newWord += wordArray[i];\n        }else{\n            newWord += wordArray[i].charAt(0).toUpperCase() + wordArray[i].slice(1);\n        }\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmptwkk7z5x.js:19:10)\n    at Object.<anonymous> (/tmp/tmptwkk7z5x.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i === 0){\n            newArr.push(arr[i]);\n        } else {\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpg65z_zh_.js:19:10)\n    at Object.<anonymous> (/tmp/tmpg65z_zh_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    for(var i = 1; i < arr.length; i++){\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpwakq_5w1.js:14:10)\n    at Object.<anonymous> (/tmp/tmpwakq_5w1.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = '';\n    for(let i = 0; i < word.length; i++){\n        if(word[i] === '_'){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp8thq3tlm.js:20:10)\n    at Object.<anonymous> (/tmp/tmp8thq3tlm.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = '';\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === '_'){\n            result += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            result += word[i];\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpet5sa569.js:20:10)\n    at Object.<anonymous> (/tmp/tmpet5sa569.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(\\-\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python_program'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpm01ggmnf.js:11:10)\n    at Object.<anonymous> (/tmp/tmpm01ggmnf.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python_program',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.split(\"_\");\n    for(var i = 1; i < result.length; i++){\n        result[i] = result[i].charAt(0).toUpperCase() + result[i].substring(1);\n    }\n    return result.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpiwtmz7mv.js:14:10)\n    at Object.<anonymous> (/tmp/tmpiwtmz7mv.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i === 0){\n            newArr.push(arr[i]);\n        }else{\n            var newWord = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n            newArr.push(newWord);\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmpywdool3p.js:20:10)\n    at Object.<anonymous> (/tmp/tmpywdool3p.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = '';\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === '_'){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123228,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pythonProgram'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp8mepxkjc.js:20:10)\n    at Object.<anonymous> (/tmp/tmp8mepxkjc.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pythonProgram',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
      "timestamp": 1666123227,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python_program'\n\nshould loosely deep-equal\n\n'PythonProgram'\n    at test (/tmp/tmp0hb45txt.js:10:10)\n    at Object.<anonymous> (/tmp/tmp0hb45txt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python_program',\n  expected: 'PythonProgram',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
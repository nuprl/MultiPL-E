{
  "name": "mbpp_224_count_Set_Bits",
  "language": "js",
  "prompt": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_224_count_Set_Bits.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count=0;\n    while(n>0){\n        count+=n&1;\n        n>>=1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n > 0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nvar n = 12;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n > 0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count=0;\n    while(n>0){\n        count+=n&1;\n        n>>=1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\nvar n = 12;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n &= (n-1);\n        count++;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n &= (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nvar n = 12;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n &= (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n &= (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n > 0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nvar n = 12;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nvar n = 12;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nvar n = 12;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\nvar n = 12;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n &= (n-1);\n        count++;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n > 0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while (n > 0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nvar n = 12;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nvar n = 12;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n > 0){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        if(n&1){\n            count++;\n        }\n        n = n>>1;\n    }\n    return count;\n}\nvar n = 12;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count=0;\n    while(n>0){\n        count+=n&1;\n        n>>=1;\n    }\n    return count;\n}\nvar n=12;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    let count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n > 0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    let count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nvar n = 12;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count=0;\n    while(n>0){\n        count+=n&1;\n        n>>=1;\n    }\n    return count;\n}\nvar n=parseInt(prompt(\"Enter the number\"));\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "/tmp/tmpnuegmgde.js:10\nvar n=parseInt(prompt(\"Enter the number\"));\n      ^\n\nReferenceError: prompt is not defined\n    at Object.<anonymous> (/tmp/tmpnuegmgde.js:10:7)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nvar n = 12;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    let count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n &= (n-1);\n        count++;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n > 0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count=0;\n    while(n>0){\n        count+=n&1;\n        n>>=1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count=0;\n    while(n>0){\n        n=n&(n-1);\n        count++;\n    }\n    return count;\n}\nvar n=12;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n > 0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    let count = 0;\n    while(n){\n        count++;\n        n = n & (n-1);\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\nvar n = 12;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n > 0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    let count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n > 0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n &= (n-1);\n        count++;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n = n & (n-1);\n        count++;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n &= (n-1);\n        count++;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n>0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count=0;\n    while(n>0){\n        count+=n&1;\n        n>>=1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count=0;\n    while(n>0){\n        count+=n&1;\n        n>>=1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n > 0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n > 0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        n &= (n-1);\n        count++;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n > 0){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of set bits (binary digits with value 1) in a given number.\nfunction count_Set_Bits(n){\n    var count = 0;\n    while(n){\n        count += n & 1;\n        n >>= 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Set_Bits;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(4),1);\n  assert.deepEqual(candidate(6),2);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
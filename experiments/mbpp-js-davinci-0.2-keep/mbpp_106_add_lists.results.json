{
  "name": "mbpp_106_add_lists",
  "language": "js",
  "prompt": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_106_add_lists.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nvar test_list = [1, 2, 3, 4, 5];\nvar test_tup = (1, 2, 3, 4, 5);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list)\n    return result\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list)\n    return result\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var new_tup = test_tup.concat(test_list);\n    return new_tup;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var list = [];\n    for (var i = 0; i < test_tup.length; i++){\n        list.push(test_tup[i]);\n    }\n    for (var i = 0; i < test_list.length; i++){\n        list.push(test_list[i]);\n    }\n    return list;\n}\nvar test_list = [1, 2, 3, 4, 5];\nvar test_tup = [6, 7, 8, 9, 10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nvar test_list = [1, 2, 3, 4, 5];\nvar test_tup = [(\"geeks\", 10), (\"for\", 20)];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var result = test_tup.concat(test_list);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to append the given list to the given tuples.\nfunction add_lists(test_list, test_tup){\n    var res = test_tup.concat(test_list);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_lists;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[9, 10, 5, 6, 7]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[10, 11, 6, 7, 8]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[11, 12, 7, 8, 9]);\n}\n\ntest();",
      "timestamp": 1665517474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
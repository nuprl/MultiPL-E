{
  "name": "mbpp_392_get_max_sum",
  "language": "js",
  "prompt": "//Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfunction get_max_sum(n){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_392_get_max_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_sum;\n  assert.deepEqual(candidate(60),106);\n  assert.deepEqual(candidate(10),12);\n  assert.deepEqual(candidate(2),2);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let max_sum = n;\n    let sum = 0;\n    for(let i=2;i<=5;i++){\n        sum = get_max_sum(Math.floor(n/i));\n        if(sum>max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}",
    "\tif(n<=0)\n\t\treturn 0;\n\telse\n\t\treturn Math.max(n, get_max_sum(Math.floor(n/2))+get_max_sum(Math.floor(n/3))+get_max_sum(Math.floor(n/4))+get_max_sum(Math.floor(n/5)));\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let max = Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n    return max;\n}\n",
    "\tif(n<=0)\n\t\treturn 0;\n\telse if(n<=5)\n\t\treturn n;\n\telse\n\t\treturn Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return Math.max(sum, n);\n}\n",
    "    if(n<=0)\n        return 0;\n    else if(n<=5)\n        return n;\n    else\n        return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    let sum = 0;\n    for(let i=2;i<=5;i++){\n        sum += get_max_sum(n/i);\n    }\n    return Math.max(sum,n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    let max_sum = 0;\n    for(let i=1; i<=5; i++){\n        max_sum = Math.max(max_sum, get_max_sum(n-i));\n    }\n    return max_sum;\n}",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let max_sum = n;\n    let sum = 0;\n    for(let i=1;i<=5;i++){\n        sum = get_max_sum(Math.floor(n/i));\n        if(sum>max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(n, get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n}\n",
    "    if(n < 0){\n        return 0;\n    }\n    if(n == 0){\n        return 0;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "  if(n<=0) return 0;\n  if(n<=5) return n;\n  return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n < 0)\n        return 0;\n    if(n == 0)\n        return 0;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "  if(n<=0){\n    return 0;\n  }\n  return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n == 0 || n == 1){\n        return n;\n    }\n    let a = get_max_sum(Math.floor(n/2));\n    let b = get_max_sum(Math.floor(n/3));\n    let c = get_max_sum(Math.floor(n/4));\n    let d = get_max_sum(Math.floor(n/5));\n    let e = a+b+c+d;\n    if(e > n){\n        return e;\n    }\n    else{\n        return n;\n    }\n}\n",
    "    if(n <= 0){\n        return 0;\n    }\n    if(n == 1){\n        return 1;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0)\n        return 0;\n    else if(n<=5)\n        return n;\n    else{\n        var max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n        if(max_sum > n)\n            return max_sum;\n        else\n            return n;\n    }\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "\tif(n<=0)\n\t\treturn 0;\n\telse if(n<=5)\n\t\treturn n;\n\telse{\n\t\tvar max_sum = 0;\n\t\tfor(var i=2;i<=5;i++){\n\t\t\tmax_sum = Math.max(max_sum, get_max_sum(n/i));\n\t\t}\n\t\treturn max_sum + n;\n\t}\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n <= 0){\n        return 0;\n    }\n    let max_sum = n;\n    let sum = 0;\n    for(let i = 2; i <= 5; i++){\n        sum = get_max_sum(Math.floor(n/i));\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let max_sum = n;\n    for(let i=2;i<=5;i++){\n        let temp = get_max_sum(Math.floor(n/i));\n        if(temp>max_sum){\n            max_sum = temp;\n        }\n    }\n    return max_sum;\n}\n",
    "  if(n<=0){\n    return 0;\n  }\n  return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let max_sum = n;\n    for(let i=2;i<=5;i++){\n        let temp = get_max_sum(n/i);\n        if(temp>max_sum){\n            max_sum = temp;\n        }\n    }\n    return max_sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    var max_sum = 0;\n    for(var i=1;i<=5;i++){\n        max_sum = Math.max(max_sum, get_max_sum(n-i));\n    }\n    return max_sum;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var max = 0;\n    for(var i=1; i<=5; i++){\n        max = Math.max(max, get_max_sum(n/i));\n    }\n    return max;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "\tif(n <= 0){\n\t\treturn 0;\n\t}\n\tif(n <= 5){\n\t\treturn n;\n\t}\n\treturn Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "\tif(n<=0) return 0;\n\tif(n<=5) return n;\n\tvar max = 0;\n\tfor(var i=2;i<=5;i++){\n\t\tmax = Math.max(max, get_max_sum(n/i));\n\t}\n\treturn max+n;\n}\n",
    "    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0){\n        return 0;\n    }\n    let sum = get_max_sum(parseInt(n/2)) + get_max_sum(parseInt(n/3)) + get_max_sum(parseInt(n/4)) + get_max_sum(parseInt(n/5));\n    if(sum>n){\n        return sum;\n    }\n    else{\n        return n;\n    }\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n==0 || n==1){\n        return n;\n    }\n    return Math.max(n, get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(n, get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)), n);\n}\n",
    "    if(n <= 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n <= 0) return 0;\n    if(n <= 5) return n;\n    return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    let max_sum = 0;\n    for(let i=2;i<=5;i++){\n        max_sum = Math.max(max_sum, get_max_sum(n/i));\n    }\n    return max_sum + n;\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    let sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return sum>n?sum:n;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(n, get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n}\n",
    "    if(n==0){\n        return 0;\n    }\n    if(n==1){\n        return 1;\n    }\n    if(n==2){\n        return 2;\n    }\n    if(n==3){\n        return 3;\n    }\n    if(n==4){\n        return 4;\n    }\n    if(n==5){\n        return 5;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "\tif(n<=0)\n\t\treturn 0;\n\tif(n<=5)\n\t\treturn n;\n\treturn Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    let sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return (sum>n)?sum:n;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return Math.max(sum, n);\n}\n",
    "  if(n<=0)\n    return 0;\n  if(n<=5)\n    return n;\n  var max_sum = 0;\n  for(var i=1;i<=5;i++){\n    max_sum = Math.max(max_sum, get_max_sum(n/i));\n  }\n  return max_sum;\n}\n",
    "\tif(n<=0){\n\t\treturn 0;\n\t}\n\tif(n<=5){\n\t\treturn n;\n\t}\n\treturn Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5), n);\n}",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    var max_sum = 0;\n    for(var i=1;i<=5;i++){\n        max_sum = Math.max(max_sum, get_max_sum(n/i));\n    }\n    return max_sum;\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n==0){\n        return 0;\n    }\n    if(n==1){\n        return 1;\n    }\n    if(n==2){\n        return 2;\n    }\n    if(n==3){\n        return 3;\n    }\n    if(n==4){\n        return 4;\n    }\n    if(n==5){\n        return 5;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}",
    "\tif(n<=0)\n\t\treturn 0;\n\telse\n\t\treturn Math.max(n, get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n}\n",
    "\tif(n<=0)\n\t\treturn 0;\n\telse\n\t\treturn Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    var sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return Math.max(sum, n);\n}\n",
    "\tif(n<=0){\n\t\treturn 0;\n\t}\n\tvar sum = 0;\n\tvar sum1 = get_max_sum(n/2);\n\tvar sum2 = get_max_sum(n/3);\n\tvar sum3 = get_max_sum(n/4);\n\tvar sum4 = get_max_sum(n/5);\n\tsum = Math.max(sum1+sum2+sum3+sum4, n);\n\treturn sum;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(n, get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let sum = n;\n    let temp = 0;\n    if(n>=2){\n        temp = get_max_sum(n/2);\n        if(temp>sum){\n            sum = temp;\n        }\n    }\n    if(n>=3){\n        temp = get_max_sum(n/3);\n        if(temp>sum){\n            sum = temp;\n        }\n    }\n    if(n>=4){\n        temp = get_max_sum(n/4);\n        if(temp>sum){\n            sum = temp;\n        }\n    }\n    if(n>=5){\n        temp = get_max_sum(n/5);\n        if(temp>sum){\n            sum = temp;\n        }\n    }\n    return sum;\n}\n",
    "    if(n<=5) return n;\n    return Math.max(get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)), n);\n}\n",
    "    if(n<=0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    var max_sum = 0;\n    for(var i=1; i<=5; i++){\n        max_sum = Math.max(max_sum, get_max_sum(n/i));\n    }\n    return max_sum;\n}\n",
    "\tif(n<=0)\n\t\treturn 0;\n\telse\n\t\treturn Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(Math.floor(n/2))+get_max_sum(Math.floor(n/3))+get_max_sum(Math.floor(n/4))+get_max_sum(Math.floor(n/5)),n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}",
    "    if(n<=0){\n        return 0;\n    }\n    return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}",
    "    if(n < 0){\n        return 0;\n    }\n    if(n == 0){\n        return 0;\n    }\n    if(n == 1){\n        return 1;\n    }\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "\tif(n<=0){\n\t\treturn 0;\n\t}\n\tvar max_sum = n;\n\tvar sum = 0;\n\tfor(var i=2;i<=5;i++){\n\t\tsum = get_max_sum(Math.floor(n/i));\n\t\tif(sum>max_sum){\n\t\t\tmax_sum = sum;\n\t\t}\n\t}\n\treturn max_sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let max_sum = n;\n    let sum = 0;\n    for(let i=2;i<=5;i++){\n        sum = get_max_sum(Math.floor(n/i));\n        if(sum>max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let sum = 0;\n    sum = Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n    return sum;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0)\n        return 0;\n    else if(n<=5)\n        return n;\n    else{\n        var sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n        return Math.max(sum, n);\n    }\n}\n",
    "\tif(n === 0) return 0;\n\tif(n === 1) return 1;\n\tif(n === 2) return 2;\n\tif(n === 3) return 3;\n\tif(n === 4) return 4;\n\tif(n === 5) return 5;\n\t\n\tvar max = 0;\n\tvar temp = 0;\n\t\n\ttemp = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n\tif(temp > n){\n\t\tmax = temp;\n\t}else{\n\t\tmax = n;\n\t}\n\treturn max;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    return Math.max(n, get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    var max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(max_sum > n){\n        return max_sum;\n    }\n    return n;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    let max_sum = 0;\n    for(let i=1;i<=5;i++){\n        max_sum = Math.max(max_sum, get_max_sum(n-i));\n    }\n    return max_sum;\n}\n",
    "    if(n <= 0) return 0;\n    if(n <= 5) return n;\n    return Math.max(get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}\n",
    "    if(n<=0) return 0;\n    var max_sum = n;\n    var sum = 0;\n    for(var i=2; i<=5; i++){\n        sum = get_max_sum(Math.floor(n/i));\n        if(sum > max_sum) max_sum = sum;\n    }\n    return max_sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    var max = 0;\n    for(var i=1;i<=5;i++){\n        max = Math.max(max, get_max_sum(n/i));\n    }\n    return max;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}\n",
    "    var max_sum = 0;\n    var max_sum_arr = [];\n    for(var i=1; i<=n; i++){\n        max_sum_arr[i] = i;\n    }\n    for(var i=1; i<=n; i++){\n        var sum = 0;\n        for(var j=1; j<=i; j++){\n            sum = sum + max_sum_arr[j];\n        }\n        max_sum_arr[i] = sum;\n    }\n    for(var i=1; i<=n; i++){\n        if(max_sum_arr[i] > max_sum){\n            max_sum = max_sum_arr[i];\n        }\n    }\n    return max_sum;\n}",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    let max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(max_sum<n)\n        return n;\n    return max_sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let sum = n;\n    let sum1 = get_max_sum(Math.floor(n/2));\n    let sum2 = get_max_sum(Math.floor(n/3));\n    let sum3 = get_max_sum(Math.floor(n/4));\n    let sum4 = get_max_sum(Math.floor(n/5));\n    let sum5 = sum1 + sum2 + sum3 + sum4;\n    if(sum5>sum){\n        sum = sum5;\n    }\n    return sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let max = n;\n    let sum = 0;\n    for(let i=2;i<=5;i++){\n        sum = get_max_sum(n/i);\n        if(sum>max){\n            max = sum;\n        }\n    }\n    return max;\n}\n",
    "    if(n == 0){\n        return 0;\n    }\n    if(n == 1){\n        return 1;\n    }\n    var sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(sum > n){\n        return sum;\n    }\n    return n;\n}\n",
    "    if(n == 0)\n        return 0;\n    if(n == 1)\n        return 1;\n    if(n == 2)\n        return 2;\n    if(n == 3)\n        return 3;\n    if(n == 4)\n        return 4;\n    if(n == 5)\n        return 5;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n < 0){\n        return 0;\n    }\n    if(n == 0){\n        return 0;\n    }\n    if(n == 1){\n        return 1;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "  var sum = 0;\n  if(n > 0){\n    sum = Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n  }\n  return sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(get_max_sum(Math.floor(n/2))+get_max_sum(Math.floor(n/3))+get_max_sum(Math.floor(n/4))+get_max_sum(Math.floor(n/5)),n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    var sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return sum>n?sum:n;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let sum = n;\n    let sum2 = get_max_sum(n/2);\n    let sum3 = get_max_sum(n/3);\n    let sum4 = get_max_sum(n/4);\n    let sum5 = get_max_sum(n/5);\n    let sum_of_all = sum2+sum3+sum4+sum5;\n    if(sum_of_all>sum){\n        return sum_of_all;\n    }\n    return sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    var max_sum = 0;\n    for(var i=1;i<=5;i++){\n        max_sum = Math.max(max_sum, get_max_sum(n/i));\n    }\n    return max_sum;\n}",
    "    if(n < 0){\n        return 0;\n    }\n    if(n == 0){\n        return 0;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n <= 0){\n        return 0;\n    }\n    if(n <= 5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var max = n;\n    for(var i=1;i<=n/5;i++){\n        var temp = get_max_sum(n/5*i) + get_max_sum(n-n/5*i);\n        if(temp>max) max = temp;\n    }\n    for(var i=1;i<=n/4;i++){\n        var temp = get_max_sum(n/4*i) + get_max_sum(n-n/4*i);\n        if(temp>max) max = temp;\n    }\n    for(var i=1;i<=n/3;i++){\n        var temp = get_max_sum(n/3*i) + get_max_sum(n-n/3*i);\n        if(temp>max) max = temp;\n    }\n    for(var i=1;i<=n/2;i++){\n        var temp = get_max_sum(n/2*i) + get_max_sum(n-n/2*i);\n        if(temp>max) max = temp;\n    }\n    return max;\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var max = 0;\n    for(var i=1;i<=5;i++){\n        max = Math.max(max, get_max_sum(n/i));\n    }\n    return max;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var max = n;\n    for(var i=1; i<=5; i++){\n        var temp = get_max_sum(Math.floor(n/i));\n        if(temp > max) max = temp;\n    }\n    return max;\n}\n",
    "    if(n <= 0){\n        return 0;\n    }\n    if(n <= 5){\n        return n;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0)\n        return 0;\n    else if(n<=5)\n        return n;\n    else{\n        var max_sum = Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5), n);\n        return max_sum;\n    }\n}\n",
    "  if(n<=0){\n    return 0;\n  }\n  return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    let max_sum = 0;\n    for(let i=2;i<=5;i++){\n        max_sum = Math.max(max_sum, get_max_sum(n/i));\n    }\n    return max_sum+n;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var max_sum = 0;\n    for(var i=2;i<=5;i++){\n        max_sum = Math.max(max_sum, get_max_sum(n/i));\n    }\n    return max_sum + n;\n}\n",
    "    if(n == 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    let sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(sum>n){\n        return sum;\n    }\n    return n;\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(n, get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n == 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let max_sum = n;\n    let temp_sum = 0;\n    for(let i=2;i<=5;i++){\n        temp_sum = get_max_sum(Math.floor(n/i));\n        if(temp_sum > max_sum){\n            max_sum = temp_sum;\n        }\n    }\n    return max_sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    let sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return Math.max(sum, n);\n}",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5), n);\n}\n",
    "\tif(n<=0) return 0;\n\tvar max = n;\n\tvar sum = 0;\n\tfor(var i=2; i<=5; i++){\n\t\tsum = get_max_sum(Math.floor(n/i));\n\t\tif(sum>max) max = sum;\n\t}\n\treturn max;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let sum = get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5));\n    return Math.max(sum, n);\n}\n",
    "\tif(n<=0)\n\t\treturn 0;\n\telse if(n==1)\n\t\treturn 1;\n\telse if(n==2)\n\t\treturn 2;\n\telse if(n==3)\n\t\treturn 3;\n\telse if(n==4)\n\t\treturn 4;\n\telse if(n==5)\n\t\treturn 5;\n\telse\n\t\treturn Math.max(n, get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5), n);\n}\n",
    "\tif(n <= 0)\n\t\treturn 0;\n\telse if(n == 1)\n\t\treturn 1;\n\telse if(n == 2)\n\t\treturn 2;\n\telse if(n == 3)\n\t\treturn 3;\n\telse if(n == 4)\n\t\treturn 4;\n\telse if(n == 5)\n\t\treturn 5;\n\telse\n\t\treturn Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let max_sum = n;\n    let temp = 0;\n    for(let i=2;i<=5;i++){\n        temp = get_max_sum(Math.floor(n/i));\n        if(temp>max_sum){\n            max_sum = temp;\n        }\n    }\n    return max_sum;\n}\n",
    "\tif(n <= 0){\n\t\treturn 0;\n\t}\n\tif(n <= 5){\n\t\treturn n;\n\t}\n\tvar max_sum = 0;\n\tfor(var i = 2; i <= 5; i++){\n\t\tmax_sum = Math.max(max_sum, get_max_sum(n/i));\n\t}\n\treturn max_sum + n;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}",
    "    if(n < 0){\n        return 0;\n    }\n    if(n == 0){\n        return 0;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var max_sum = n;\n    for(var i=1; i<=5; i++){\n        max_sum = Math.max(max_sum, get_max_sum(n-i));\n    }\n    return max_sum;\n}\n",
    "\tif(n<=0) return 0;\n\tif(n<=5) return n;\n\treturn Math.max(get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "\tif(n<=0) return 0;\n\tif(n<=5) return n;\n\tvar max = 0;\n\tfor(var i=1; i<=5; i++){\n\t\tmax = Math.max(max, get_max_sum(n/i));\n\t}\n\treturn max;\n}\n",
    "\tif(n<=0)\n\t\treturn 0;\n\tif(n<=5)\n\t\treturn n;\n\treturn Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    var max_sum = n;\n    var sum = 0;\n    for(var i=2;i<=5;i++){\n        sum = get_max_sum(Math.floor(n/i));\n        if(sum>max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n",
    "    if(n < 0)\n        return 0;\n    if(n == 0)\n        return 0;\n    if(n == 1)\n        return 1;\n    if(n == 2)\n        return 2;\n    if(n == 3)\n        return 3;\n    if(n == 4)\n        return 4;\n    if(n == 5)\n        return 5;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    let sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return Math.max(n, sum);\n}\n",
    "    if(n == 0 || n == 1){\n        return n;\n    }\n    let max_sum = 0;\n    for(let i = 2; i <= 5; i++){\n        max_sum = Math.max(max_sum, get_max_sum(n/i));\n    }\n    return max_sum + n;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5), n);\n}\n",
    "\tif(n<=0) return 0;\n\tif(n<=5) return n;\n\tvar max = 0;\n\tfor(var i=1;i<=5;i++){\n\t\tvar temp = get_max_sum(n/i);\n\t\tif(temp>max) max = temp;\n\t}\n\treturn max;\n}\n",
    "    if(n < 12){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var max = 0;\n    for(var i=1; i<=5; i++){\n        max = Math.max(max, get_max_sum(n/i));\n    }\n    return max;\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var max_sum = n;\n    var sum = 0;\n    for(var i=2;i<=5;i++){\n        sum = get_max_sum(n/i);\n        if(sum>max_sum) max_sum = sum;\n    }\n    return max_sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let sum1 = get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5));\n    let sum2 = n;\n    return Math.max(sum1, sum2);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)), n);\n}",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    let sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(sum>n){\n        return sum;\n    }\n    return n;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var sum = 0;\n    for(var i=2;i<=5;i++){\n        sum += get_max_sum(n/i);\n    }\n    return Math.max(sum,n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    else{\n        return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n    }\n}\n",
    "\tif(n<=0) return 0;\n\tvar max_sum = n;\n\tvar sum = 0;\n\tfor(var i=2;i<=5;i++){\n\t\tsum = get_max_sum(n/i);\n\t\tif(max_sum<sum) max_sum = sum;\n\t}\n\treturn max_sum;\n}\n",
    "    if(n == 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n < 0)\n        return 0;\n    if(n == 0)\n        return 0;\n    if(n == 1)\n        return 1;\n    if(n == 2)\n        return 2;\n    if(n == 3)\n        return 3;\n    if(n == 4)\n        return 4;\n    if(n == 5)\n        return 5;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n < 2) return n;\n    var max_sum = n;\n    var max_sum_arr = [];\n    max_sum_arr[0] = 0;\n    max_sum_arr[1] = 1;\n    for(var i = 2; i <= n; i++){\n        max_sum_arr[i] = Math.max(max_sum_arr[Math.floor(i/2)] + max_sum_arr[Math.floor(i/3)] + max_sum_arr[Math.floor(i/4)] + max_sum_arr[Math.floor(i/5)], i);\n    }\n    return max_sum_arr[n];\n}\n",
    "    if(n<=0)\n        return 0;\n    else{\n        return Math.max(n, get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n    }\n}\n",
    "    if(n<=0) return 0;\n    let max_sum = n;\n    let sum = 0;\n    for(let i=2;i<=5;i++){\n        sum = get_max_sum(Math.floor(n/i));\n        if(sum>max_sum) max_sum = sum;\n    }\n    return max_sum;\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(n, get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n}\n",
    "    if(n<=0)\n        return 0;\n    else if(n<=5)\n        return n;\n    else\n        return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}\n",
    "    if(n == 0 || n == 1){\n        return n;\n    }\n    let sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return Math.max(sum, n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    let sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return sum>n?sum:n;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    var max = 0;\n    for(var i=1;i<=5;i++){\n        max = Math.max(max, get_max_sum(n-i));\n    }\n    return max;\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}",
    "    if(n <= 0) return 0;\n    if(n <= 5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}",
    "\tif(n<=0) return 0;\n\tvar sum = get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5));\n\treturn Math.max(sum, n);\n}\n",
    "    if(n<=0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var max = 0;\n    for(var i=1; i<=5; i++){\n        max = Math.max(max, get_max_sum(n-i));\n    }\n    return max;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    let max = Math.max(get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)), n);\n    return max;\n}\n",
    "\tif(n<=0) return 0;\n\tif(n<=5) return n;\n\tvar max = 0;\n\tfor(var i=2; i<=5; i++){\n\t\tvar temp = get_max_sum(n/i);\n\t\tif(temp > max) max = temp;\n\t}\n\treturn max+n;\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n"
  ]
}
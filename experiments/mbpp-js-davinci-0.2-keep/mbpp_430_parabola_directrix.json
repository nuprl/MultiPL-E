{
  "name": "mbpp_430_parabola_directrix",
  "language": "js",
  "prompt": "//Write a function to find the directrix of a parabola.\nfunction parabola_directrix(a, b, c){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_430_parabola_directrix.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = parabola_directrix;\n  assert.deepEqual(candidate(5, 3, 2),-198);\n  assert.deepEqual(candidate(9, 8, 4),-2336);\n  assert.deepEqual(candidate(2, 4, 6),-130);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "  return -(b/(2*a));\n}\n",
    "  return -(b/(2*a));\n}\n",
    "\treturn -(b/a);\n}\n",
    "\treturn -(c - b*b/(4*a));\n}\n",
    "    return -(b / (2 * a));\n}\n",
    "\treturn -a/b;\n}\n",
    "\treturn -(b / (2 * a));\n}\n",
    "\treturn -(b / (2 * a));\n}\n",
    "\treturn -(b / (2 * a));\n}\n",
    "\treturn -(b/(2*a));\n}\n",
    "\treturn -c/b;\n}\n",
    "\treturn -c/b;\n}\n",
    "\treturn -c/b;\n}\n",
    "\treturn -a/b;\n}\n",
    "    return -(b/(2*a));\n}\n",
    "  return -b/(2*a);\n}\n",
    "\treturn -(b / (2 * a))\n}\n",
    "\treturn -(b / (2 * a))\n}\n",
    "\treturn -(b / (2 * a));\n}\n",
    "\treturn -b/(2*a);\n}\n"
  ]
}
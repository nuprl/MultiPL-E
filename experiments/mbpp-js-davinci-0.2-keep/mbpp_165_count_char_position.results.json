{
  "name": "mbpp_165_count_char_position",
  "language": "js",
  "prompt": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_165_count_char_position.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n\tvar count = 0;\n\tstr1 = str1.toLowerCase();\n\tfor(var i = 0; i < str1.length; i++){\n\t\tif(str1.charCodeAt(i) == i+97){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() === String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) == i+97){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] === String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i=0; i<str.length; i++){\n        if(str[i] == String.fromCharCode(i+97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i=0; i<str.length; i++){\n        if(str.charCodeAt(i) == i+97){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str1 = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(i+97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(i + 97) || str1[i] == String.fromCharCode(i + 65)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(97 + i) || str1[i] == String.fromCharCode(65 + i)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(i + 97) || str1[i] == String.fromCharCode(i + 65)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) == i+97){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(i+97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for (var i = 0; i < str.length; i++){\n        if (str[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(i + 97) || str1[i] == String.fromCharCode(i + 65)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for (var i = 0; i < str1.length; i++){\n        if (str1[i] == String.fromCharCode(i + 97) || str1[i] == String.fromCharCode(i + 65)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for (var i = 0; i < str.length; i++){\n        if (str[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] === String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmp7p0m8kwc.js:17:10)\n    at Object.<anonymous> (/tmp/tmp7p0m8kwc.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) == i + 97){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for (var i = 0; i < str1.length; i++){\n        if (str1[i] == i+1){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp0okococj.js:16:10)\n    at Object.<anonymous> (/tmp/tmp0okococj.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmpy4_v7whs.js:17:10)\n    at Object.<anonymous> (/tmp/tmpy4_v7whs.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) == i+97){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i=0; i<str.length; i++){\n        if(str[i] == String.fromCharCode(97+i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for (var i = 0; i < str.length; i++){\n        if (str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(i+97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) == i + 97){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(i + 97) || str1[i] == String.fromCharCode(i + 65)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] === String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        var ch = str.charCodeAt(i);\n        if(ch - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(i + 97) || str1[i] == String.fromCharCode(i + 65)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(i+97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for (var i = 0; i < str.length; i++){\n        if (str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(i + 97) || str1[i] == String.fromCharCode(i + 65)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i<str.length; i++){\n        if(str.charCodeAt(i) == i+97){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(97 + i) || str1[i] == String.fromCharCode(65 + i)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) == 97 + i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) === (i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for (var i = 0; i < str1.length; i++) {\n        if (str1[i] == i + 1) {\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmphqnpsv6a.js:16:10)\n    at Object.<anonymous> (/tmp/tmphqnpsv6a.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97+i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) == i+97){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(i + 97) || str1[i] == String.fromCharCode(i + 65)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) == i+97){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for (var i = 0; i < str1.length; i++) {\n        if (str1[i] == str1[i].toLowerCase()) {\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpnir7a34m.js:16:10)\n    at Object.<anonymous> (/tmp/tmpnir7a34m.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var alpha = \"abcdefghijklmnopqrstuvwxyz\";\n    var count = 0;\n    str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == alpha[i]){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) == i+97){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(i+97)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(i + 97) || str1[i] == String.fromCharCode(i + 65)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var numChars = 0;\n    for (var i = 0; i < str1.length; i++) {\n        if (str1.charCodeAt(i) >= 97 && str1.charCodeAt(i) <= 122) {\n            if (str1.charCodeAt(i) == i + 97) {\n                numChars++;\n            }\n        }\n    }\n    return numChars;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmp6rmkytf9.js:20:10)\n    at Object.<anonymous> (/tmp/tmp6rmkytf9.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) == i+97){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97+i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for (var i = 0; i < str.length; i++) {\n        if (str[i] == String.fromCharCode(i + 97)) {\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for (var i = 0; i < str1.length; i++){\n        if (str1[i] == str1[i].toLowerCase() && str1[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmpl3zp7_qs.js:17:10)\n    at Object.<anonymous> (/tmp/tmpl3zp7_qs.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n\tvar str = str1.toLowerCase();\n\tvar count = 0;\n\tfor (var i = 0; i < str.length; i++) {\n\t\tif (str.charCodeAt(i) == i+97) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for (var i = 0; i < str1.length; i++){\n        if (str1[i] == String.fromCharCode(i + 97) || str1[i] == String.fromCharCode(i + 65)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var arr1 = str1.split('');\n    var count = 0;\n    for(var i = 0; i < arr1.length; i++){\n        if(arr1[i] == arr1[i].toLowerCase() && arr1[i].charCodeAt(0) == i+97){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmp8b7_fcse.js:18:10)\n    at Object.<anonymous> (/tmp/tmp8b7_fcse.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var arr1 = str1.split(\"\");\n    var count = 0;\n    for(var i = 0; i < arr1.length; i++){\n        if(arr1[i] == arr1[i].toUpperCase() && arr1[i].charCodeAt(0) == i + 65){\n            count++;\n        }\n        else if(arr1[i] == arr1[i].toLowerCase() && arr1[i].charCodeAt(0) == i + 97){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) == i + 97){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == alphabet[i]){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str1 = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for (var i = 0; i < str1.length; i++){\n        if (str1[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmpndda2no4.js:18:10)\n    at Object.<anonymous> (/tmp/tmpndda2no4.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == String.fromCharCode(i+97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmp26gpccbl.js:17:10)\n    at Object.<anonymous> (/tmp/tmp26gpccbl.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) == i+97){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) == i + 97){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for (var i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) == (i + 97)) {\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmplcdqm1o9.js:16:10)\n    at Object.<anonymous> (/tmp/tmplcdqm1o9.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for (var i = 0; i < str.length; i++){\n        if (str.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) == i+97){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97+i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str1 = str1.toLowerCase();\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(97 + i) || str1[i] == String.fromCharCode(65 + i)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(i+97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str1 = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].toLowerCase() == String.fromCharCode(i+97)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(i + 97) || str1[i] == String.fromCharCode(i + 65)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(i + 97)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) - 97 === i){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var str = str1.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charCodeAt(i) == i + 97){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == String.fromCharCode(97 + i) || str1[i] == String.fromCharCode(65 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunction count_char_position(str1){\n    var count = 0;\n    var str = str1.toLowerCase();\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == String.fromCharCode(97 + i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_char_position;\n  assert.deepEqual(candidate(\"xbcefg\"),2);\n  assert.deepEqual(candidate(\"ABcED\"),3);\n  assert.deepEqual(candidate(\"AbgdeF\"),5);\n}\n\ntest();",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
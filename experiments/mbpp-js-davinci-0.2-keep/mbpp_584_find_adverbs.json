{
  "name": "mbpp_584_find_adverbs",
  "language": "js",
  "prompt": "//Write a function to find the first adverb ending with ly and its positions in a given string.\nfunction find_adverbs(text){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_584_find_adverbs.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_adverbs;\n  assert.deepEqual(candidate(\"Clearly, he has no excuse for such behavior.\"),\"0-7: Clearly\");\n  assert.deepEqual(candidate(\"Please handle the situation carefuly\"),\"28-36: carefuly\");\n  assert.deepEqual(candidate(\"Complete the task quickly\"),\"18-25: quickly\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var words = text.split(\" \");\n    var adverbs = [];\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var words = text.split(' ');\n    for (var i = 0; i < words.length; i++){\n        if (words[i].endsWith('ly')){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = text.match(/\\w+ly/g);\n    var positions = [];\n    for(var i = 0; i < adverbs.length; i++){\n        positions.push(text.indexOf(adverbs[i]));\n    }\n    return [adverbs, positions];\n}\n",
    "    var words = text.split(\" \");\n    var adverbs = [];\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "\tvar adverbs = text.match(/\\w+ly/g);\n\tvar positions = [];\n\tfor(var i = 0; i < adverbs.length; i++){\n\t\tpositions.push(text.indexOf(adverbs[i]));\n\t}\n\treturn [adverbs[0], positions[0]];\n}\n",
    "    var adverb_regex = /\\w+ly/g;\n    var adverbs = text.match(adverb_regex);\n    var adverb_positions = [];\n    for(var i = 0; i < adverbs.length; i++){\n        adverb_positions.push(text.indexOf(adverbs[i]));\n    }\n    return adverbs + \" \" + adverb_positions;\n}\n",
    "    let adverbs = [];\n    let words = text.split(\" \");\n    for(let i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n"
  ]
}
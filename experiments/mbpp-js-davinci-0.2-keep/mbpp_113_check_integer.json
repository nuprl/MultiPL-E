{
  "name": "mbpp_113_check_integer",
  "language": "js",
  "prompt": "//Write a function to check if a string represents an integer or not.\nfunction check_integer(text){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_113_check_integer.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_integer;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"1\"),true);\n  assert.deepEqual(candidate(\"12345\"),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    if(text.length == 0){\n        return false;\n    }\n    for(var i = 0; i < text.length; i++){\n        if(text[i] < '0' || text[i] > '9'){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    if(text.match(/^-?\\d+$/)){\n        return true;\n    }\n    return false;\n}\n",
    "    if(text.match(/^[0-9]+$/)){\n        return true;\n    }\n    return false;\n}\n",
    "    if(text.match(/^[0-9]+$/)){\n        return true;\n    }\n    return false;\n}\n",
    "    if(text.length == 0){\n        return false;\n    }\n    for(var i = 0; i < text.length; i++){\n        if(text[i] < '0' || text[i] > '9'){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    if(text.match(/^[0-9]+$/)){\n        return true;\n    }\n    return false;\n}\n",
    "    if(text.match(/^\\d+$/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    if(text.length == 0){\n        return false;\n    }\n    for(var i = 0; i < text.length; i++){\n        if(text[i] < '0' || text[i] > '9'){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    if(text.match(/^[0-9]+$/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    if(text.length == 0){\n        return false;\n    }\n    for(var i = 0; i < text.length; i++){\n        if(text[i] < '0' || text[i] > '9'){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    if(text.length == 0){\n        return false;\n    }\n    for(var i = 0; i < text.length; i++){\n        if(text[i] < '0' || text[i] > '9'){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    if(text.match(/^-?\\d+$/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n",
    "    if(text.match(/^-?\\d+$/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.length == 0){\n        return false;\n    }\n    for(var i = 0; i < text.length; i++){\n        if(text[i] < '0' || text[i] > '9'){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    if(text.match(/^[0-9]+$/)){\n        return true;\n    }\n    return false;\n}\n",
    "    if(text.match(/^[0-9]+$/)){\n        return true;\n    }\n    return false;\n}\n",
    "    if(text.length == 0){\n        return false;\n    }\n    for(var i = 0; i < text.length; i++){\n        if(isNaN(text[i])){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    if (text.match(/^[0-9]+$/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    if(text.match(/^[0-9]+$/)){\n        return true;\n    }\n    return false;\n}\n",
    "    if(text.match(/^\\d+$/)){\n        return true;\n    }\n    return false;\n}\n"
  ]
}
{
  "name": "mbpp_4_heap_queue_largest",
  "language": "js",
  "prompt": "//Write a function to find the n largest integers from a given list of numbers, returned in descending order.\nfunction heap_queue_largest(nums, n){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_4_heap_queue_largest.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new BinaryHeap(function(x){return x;});\n    for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n    var ret = new Array(n);\n    for(var j=0; j<n; j++){ret[j] = heap.pop();}\n    return ret;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    let heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(let i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    let result = [];\n    for(let i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "  var heap = new Heap(function(a,b){return a-b});\n  for(var i=0; i<nums.length; i++){\n    heap.push(nums[i]);\n  }\n  var result = [];\n  for(var i=0; i<n; i++){\n    result.push(heap.pop());\n  }\n  return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    var largest = [];\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    while(heap.size() > 0){\n        largest.push(heap.pop());\n    }\n    return largest;\n}\n",
    "  var heap = new Heap(function(a,b){return a-b;});\n  for(var i = 0; i < nums.length; i++){\n    heap.push(nums[i]);\n  }\n  var result = [];\n  for(var i = 0; i < n; i++){\n    result.push(heap.pop());\n  }\n  return result;\n}\n",
    "  var heap = new BinaryHeap(function(x){return x;});\n  for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n  var ret = new Array(n);\n  for(var j=0; j<n; j++){ret[j] = heap.pop();}\n  return ret;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new BinaryHeap(function(x){return x;});\n    for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n    var ret = new Array(n);\n    for(var j=0; j<n; j++){ret[j] = heap.pop();}\n    return ret;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return b - a;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(nums);\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "  var heap = new BinaryHeap(function(x){return x;});\n  for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n  var ret = new Array(n);\n  for(var j=0; j<n; j++){ret[j] = heap.pop();}\n  return ret;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "  var heap = new heap_queue();\n  for(var i = 0; i < nums.length; i++){\n    heap.push(nums[i]);\n  }\n  var result = [];\n  for(var i = 0; i < n; i++){\n    result.push(heap.pop());\n  }\n  return result;\n}\n",
    "    var heap = new Heap();\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "  var heap = new Heap(function(a,b){return a-b;});\n  for(var i = 0; i < nums.length; i++){\n    heap.push(nums[i]);\n  }\n  var result = [];\n  for(var j = 0; j < n; j++){\n    result.push(heap.pop());\n  }\n  return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new MaxHeap();\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "  var heap = new Heap(function(a,b){return a-b});\n  for(var i=0;i<nums.length;i++){\n    heap.push(nums[i]);\n  }\n  var result = [];\n  for(var i=0;i<n;i++){\n    result.push(heap.pop());\n  }\n  return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "    var heap = new Heap(nums);\n    var largest = [];\n    for(var i = 0; i < n; i++){\n        largest.push(heap.pop());\n    }\n    return largest;\n}\n",
    "    var heap = new BinaryHeap(function(x){return x;});\n    for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n    var ret = new Array(n);\n    for(var j=0; j<n; j++){ret[j] = heap.pop();}\n    return ret;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    var largest = [];\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    while(heap.size() > 0){\n        largest.push(heap.pop());\n    }\n    return largest.reverse();\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new BinaryHeap(function(x){return x;});\n    for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n    var ret = new Array(n);\n    for(var j=0; j<n; j++){ret[j] = heap.pop();}\n    return ret;\n}\n",
    "    var heap = new Heap(nums);\n    var largest = [];\n    for(var i = 0; i < n; i++){\n        largest.push(heap.pop());\n    }\n    return largest;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b;});\n    for(var i=0;i<nums.length;i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0;i<n;i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "  var heap = new Heap(function(a,b){\n    return a-b;\n  });\n  for(var i = 0; i < nums.length; i++){\n    heap.push(nums[i]);\n  }\n  var result = [];\n  for(var i = 0; i < n; i++){\n    result.push(heap.pop());\n  }\n  return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for (var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for (var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap();\n    for(var i = 0; i < nums.length; i++){\n        heap.insert(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "  var heap = new Heap(function(a, b){\n    return a - b;\n  });\n  for(var i = 0; i < nums.length; i++){\n    heap.push(nums[i]);\n  }\n  var result = [];\n  for(var i = 0; i < n; i++){\n    result.push(heap.pop());\n  }\n  return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b;});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(nums);\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap();\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(nums);\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new BinaryHeap(function(x){return x;});\n    for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n    var ret = new Array(n);\n    for(var j=0; j<n; j++){ret[j] = heap.pop();}\n    return ret;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n\n    var result = [];\n    while(heap.size() > 0){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    var largest = [];\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    while(heap.size() > 0){\n        largest.push(heap.pop());\n    }\n    return largest;\n}\n",
    "    var heap = new Heap(function(a,b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    var largest_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    while(heap.size() > 0){\n        largest_nums.push(heap.pop());\n    }\n    return largest_nums;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    let heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(let i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    let result = [];\n    for(let i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "\tvar heap = new Heap(nums);\n\tvar largest = [];\n\tfor(var i = 0; i < n; i++){\n\t\tlargest.push(heap.pop());\n\t}\n\treturn largest;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){\n        return a-b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0;i<nums.length;i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0;i<n;i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "  var heap = new BinaryHeap(function(x){return x;});\n  for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n  var ret = [];\n  for(var j=0; j<n; j++){ret.push(heap.pop());}\n  return ret;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    var result = [];\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    while(heap.size() > 0){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(nums, function(a, b){\n        return a - b;\n    });\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "  var heap = new Heap(function(a,b){return a-b});\n  for(var i = 0; i < nums.length; i++){\n    heap.push(nums[i]);\n  }\n  var result = [];\n  for(var i = 0; i < n; i++){\n    result.push(heap.pop());\n  }\n  return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    var largest = [];\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    while(heap.size() > 0){\n        largest.push(heap.pop());\n    }\n    return largest.reverse();\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    var largest = [];\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    while(heap.size() > 0){\n        largest.push(heap.pop());\n    }\n    return largest;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var largest = [];\n    for(var i=0; i<n; i++){\n        largest.push(heap.pop());\n    }\n    return largest;\n}\n",
    "  var heap = new Heap(function(a,b){return a-b});\n  for (var i = 0; i < nums.length; i++) {\n    heap.push(nums[i]);\n  }\n  var result = [];\n  for (var i = 0; i < n; i++) {\n    result.push(heap.pop());\n  }\n  return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b;});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "  let heap = new Heap(nums);\n  let result = [];\n  for(let i = 0; i < n; i++){\n    result.push(heap.pop());\n  }\n  return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var j = 0; j < n; j++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "  var heap = new Heap(function(a, b){\n    return a - b;\n  });\n  for(var i = 0; i < nums.length; i++){\n    heap.push(nums[i]);\n  }\n  var result = [];\n  for(var i = 0; i < n; i++){\n    result.push(heap.pop());\n  }\n  return result;\n}\n",
    "    var heap = new Heap(function(a,b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var largest = [];\n    for(var i = 0; i < n; i++){\n        largest.push(heap.pop());\n    }\n\n    return largest;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b;});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "    var heap = new Heap(nums, function(a, b){\n        return a > b;\n    });\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){\n        return a-b;\n    });\n\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var ret = [];\n    for(var i=0; i<n; i++){\n        ret.push(heap.pop());\n    }\n\n    return ret;\n}\n",
    "    var heap = new Heap(nums);\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "  var heap = new Heap(function(a, b){\n    return a - b;\n  });\n  for(var i = 0; i < nums.length; i++){\n    heap.push(nums[i]);\n  }\n  var result = [];\n  for(var i = 0; i < n; i++){\n    result.push(heap.pop());\n  }\n  return result;\n}\n",
    "    var heap = new BinaryHeap(function(x){return x;});\n    for(var i=0; i<nums.length; i++){ heap.push(nums[i]); }\n    var ret = [];\n    for(var j=0; j<n; j++){ ret.push(heap.pop()); }\n    return ret;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    var largest = [];\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    while(heap.size() > 0){\n        largest.push(heap.pop());\n    }\n    return largest;\n}\n",
    "  var heap = new Heap(function(a,b){return a-b});\n  for(var i=0; i<nums.length; i++){\n    heap.push(nums[i]);\n  }\n  var result = [];\n  for(var i=0; i<n; i++){\n    result.push(heap.pop());\n  }\n  return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "    var heap = new Heap(nums);\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new BinaryHeap(function(x){return x;});\n    for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n    var ret = new Array(n);\n    for(var j=0; j<n; j++){ret[j] = heap.pop();}\n    return ret;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var largest = [];\n    for(var i = 0; i < n; i++){\n        largest.push(heap.pop());\n    }\n\n    return largest;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(nums, function(a,b){\n        return a > b;\n    });\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    var result = [];\n    while(heap.size() > 0){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(nums);\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b;});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    var largest_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    while(heap.size() > 0){\n        largest_nums.push(heap.pop());\n    }\n    return largest_nums;\n}\n",
    "    var heap = new BinaryHeap(function(x){return x;});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size()>n){\n            heap.pop();\n        }\n    }\n    var result = [];\n    while(heap.size()>0){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "  var heap = new Heap();\n  for(var i = 0; i < nums.length; i++){\n    heap.insert(nums[i]);\n  }\n  var result = [];\n  for(var i = 0; i < n; i++){\n    result.push(heap.pop());\n  }\n  return result;\n}\n",
    "    var heap = new Heap();\n    for(var i = 0; i < nums.length; i++){\n        heap.insert(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new BinaryHeap(function(x){return x;});\n    for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n    var ret = new Array(n);\n    for(var j=0; j<n; j++){ret[j] = heap.pop();}\n    return ret;\n}\n",
    "    var heap = new BinaryHeap(function(x){return x;});\n    for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n    var ret = new Array(n);\n    for(var j=0; j<n; j++){ret[j] = heap.pop();}\n    return ret;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b;});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n\n    var result = [];\n    while(heap.size() > 0){\n        result.push(heap.pop());\n    }\n    return result;\n}\n\nvar nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    var largest = [];\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    while(heap.size() > 0){\n        largest.push(heap.pop());\n    }\n    return largest;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0;i<nums.length;i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0;i<n;i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return b - a;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var ret = [];\n    for(var i = 0; i < n; i++){\n        ret.push(heap.pop());\n    }\n    return ret;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new MaxHeap();\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "  var heap = new Heap(function(a, b){\n    return a - b;\n  });\n\n  for(var i = 0; i < nums.length; i++){\n    heap.push(nums[i]);\n  }\n\n  var result = [];\n  for(var i = 0; i < n; i++){\n    result.push(heap.pop());\n  }\n  return result;\n}\n",
    "  var heap = new Heap(function(a,b){return b-a});\n  for(var i=0; i<nums.length; i++){\n    heap.push(nums[i]);\n  }\n  var result = [];\n  for(var i=0; i<n; i++){\n    result.push(heap.pop());\n  }\n  return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "  var heap = new BinaryHeap(function(x){return x;});\n  for(var i=0; i<nums.length; i++){\n    heap.push(nums[i]);\n  }\n  var ret = [];\n  for(var j=0; j<n; j++){\n    ret.push(heap.pop());\n  }\n  return ret;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for (var i = 0; i < nums.length; i++) {\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for (var i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    let heap = new Heap(nums);\n    let result = [];\n    for(let i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new BinaryHeap(function(x){return x;});\n    for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n    var ret = new Array(n);\n    for(var j=0; j<n; j++){ret[j] = heap.pop();}\n    return ret;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    var ret = [];\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    while(heap.size() > 0){\n        ret.push(heap.pop());\n    }\n    return ret;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0;i<nums.length;i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0;i<n;i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "  var heap = new BinaryHeap(function(x){return x;});\n  for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n  var ret = [];\n  for(var i=0; i<n; i++){ret.push(heap.pop());}\n  return ret;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0;i<nums.length;i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0;i<n;i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "  var heap = new Heap(function(a,b){return a-b});\n  for(var i = 0; i < nums.length; i++){\n    heap.push(nums[i]);\n  }\n  var result = [];\n  for(var i = 0; i < n; i++){\n    result.push(heap.pop());\n  }\n  return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new MinHeap();\n    for(var i = 0; i < nums.length; i++){\n        heap.insert(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.extractMin());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    var largest_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    while(heap.size() > 0){\n        largest_nums.push(heap.pop());\n    }\n    return largest_nums;\n}\n",
    "    var heap = new Heap();\n    for(var i = 0; i < nums.length; i++){\n        heap.insert(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new BinaryHeap(function(x){return x;});\n    for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n    var ret = new Array(n);\n    for(var j=0; j<n; j++){ret[j] = heap.pop();}\n    return ret;\n}\n",
    "  var heap = new BinaryHeap(function(x){return x;});\n  for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n  var ret = new Array(n);\n  for(var j=0; j<n; j++){ret[j] = heap.pop();}\n  return ret;\n}\n",
    "    var heap = new BinaryHeap(function(x){return x;});\n    for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n    var ret = new Array(n);\n    for(var j=0; j<n; j++){ret[j] = heap.pop();}\n    return ret;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    var largest = [];\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    while(heap.size() > 0){\n        largest.push(heap.pop());\n    }\n    return largest.reverse();\n}\n",
    "    var heap = new BinaryHeap(function(x){return x;});\n    for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n    var ret = new Array(n);\n    for(var j=0; j<n; j++){ret[j] = heap.pop();}\n    return ret;\n}\n",
    "  var heap = new BinaryHeap(function(x){return x;});\n  for(var i=0; i<nums.length; i++){ heap.push(nums[i]); }\n  var ret = new Array(n);\n  for(var j=0; j<n; j++){ ret[j] = heap.pop(); }\n  return ret;\n}\n",
    "    var heap = new Heap(function(a,b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    var largest = [];\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    while(heap.size() > 0){\n        largest.push(heap.pop());\n    }\n    return largest.reverse();\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for (var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for (var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(nums);\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    var largest = [];\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    while(heap.size() > 0){\n        largest.push(heap.pop());\n    }\n    return largest.reverse();\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    var largest = [];\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    while(heap.size() > 0){\n        largest.push(heap.pop());\n    }\n    return largest.reverse();\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    var largest = [];\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n        if(heap.size() > n){\n            heap.pop();\n        }\n    }\n    while(heap.size() > 0){\n        largest.push(heap.pop());\n    }\n    return largest.reverse();\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var j=0; j<n; j++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new BinaryHeap(function(x){return x;});\n    for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n    var ret = new Array(n);\n    for(var j=0; j<n; j++){ret[j] = heap.pop();}\n    return ret;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var j=0; j<n; j++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0;i<nums.length;i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0;i<n;i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap();\n    for(var i = 0; i < nums.length; i++){\n        heap.insert(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new BinaryHeap(function(x){return x;});\n    for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n    var ret = new Array(n);\n    for(var j=0; j<n; j++){ret[j] = heap.pop();}\n    return ret;\n}\n",
    "    var heap = new BinaryHeap(function(x){return x;});\n    for(var i=0; i<nums.length; i++){heap.push(nums[i]);}\n    var ret = new Array(n);\n    for(var j=0; j<n; j++){ret[j] = heap.pop();}\n    return ret;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b;});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b});\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n",
    "    var heap = new Heap(function(a, b){\n        return a - b;\n    });\n\n    for(var i = 0; i < nums.length; i++){\n        heap.push(nums[i]);\n    }\n\n    var result = [];\n    for(var i = 0; i < n; i++){\n        result.push(heap.pop());\n    }\n\n    return result;\n}\n",
    "    var heap = new Heap(function(a,b){return a-b;});\n    for(var i=0; i<nums.length; i++){\n        heap.push(nums[i]);\n    }\n    var result = [];\n    for(var i=0; i<n; i++){\n        result.push(heap.pop());\n    }\n    return result;\n}\n"
  ]
}
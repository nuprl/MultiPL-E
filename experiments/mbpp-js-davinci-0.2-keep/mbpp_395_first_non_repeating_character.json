{
  "name": "mbpp_395_first_non_repeating_character",
  "language": "js",
  "prompt": "//Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character(str1){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_395_first_non_repeating_character.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_non_repeating_character;\n  assert.deepEqual(candidate(\"abcabc\"),undefined);\n  assert.deepEqual(candidate(\"abc\"),\"a\");\n  assert.deepEqual(candidate(\"ababc\"),\"c\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var str = str1;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n        if (str.indexOf(c) == i && str.indexOf(c, i + 1) == -1) {\n            return c;\n        }\n    }\n    return null;\n}",
    "    var str = str1;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n        if (str.indexOf(c) == i && str.indexOf(c, i + 1) == -1) {\n            return c;\n        }\n    }\n    return null;\n}",
    "    var str = str1;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n        if (str.indexOf(c) == i && str.indexOf(c, i + 1) == -1) {\n            return c;\n        }\n    }\n    return null;\n}",
    "    var str = str1.split('');\n    var ctr = 0;\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        ctr = 0;\n        for(var j=0;j<str.length;j++){\n            if(str[i] == str[j]){\n                ctr += 1;\n            }\n        }\n        if(ctr < 2){\n            return str[i];\n        }\n    }\n    return null;\n}",
    "    var str = str1;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n        if (str.indexOf(c) == i && str.indexOf(c, i + 1) == -1) {\n            return c;\n        }\n    }\n    return null;\n}",
    "    var str = str1;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n        if (str.indexOf(c) == i && str.indexOf(c, i + 1) == -1) {\n            return c;\n        }\n    }\n    return null;\n}",
    "    var arr = str1.split('');\n    var result = '';\n    var ctr = 0;\n    for(var x = 0; x < arr.length; x++){\n        ctr = 0;\n        for(var y = 0; y < arr.length; y++){\n            if(arr[x] === arr[y]){\n                ctr+= 1;\n            }\n        }\n        if(ctr < 2){\n            result = arr[x];\n            break;\n        }\n    }\n    return result;\n}",
    "    var str = str1;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n        if (str.indexOf(c) == i && str.indexOf(c, i + 1) == -1) {\n            return c;\n        }\n    }\n    return null;\n}",
    "    var str = str1;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n        if (str.indexOf(c) == i && str.indexOf(c, i + 1) == -1) {\n            return c;\n        }\n    }\n    return null;\n}",
    "    var str = str1;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n        if (str.indexOf(c) == i && str.indexOf(c, i + 1) == -1) {\n            return c;\n        }\n    }\n    return null;\n}",
    "    var str = str1;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n        if (str.indexOf(c) == i && str.indexOf(c, i + 1) == -1) {\n            return c;\n        }\n    }\n    return null;\n}",
    "    var arr = str1.split('');\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count == 1){\n            return arr[i];\n        }\n        count = 0;\n    }\n    return null;\n}",
    "    var str = str1;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n        if (str.indexOf(c) == i && str.indexOf(c, i + 1) == -1) {\n            return c;\n        }\n    }\n    return null;\n}",
    "    var str = str1.split(\"\");\n    for(var i=0;i<str.length;i++){\n        if(str.indexOf(str[i]) == str.lastIndexOf(str[i])){\n            return str[i];\n        }\n    }\n}",
    "    var str = str1;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n        if (str.indexOf(c) == i && str.indexOf(c, i + 1) == -1) {\n            return c;\n        }\n    }\n    return null;\n}",
    "    var str = str1;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n        if (str.indexOf(c) == i && str.indexOf(c, i + 1) == -1) {\n            return c;\n        }\n    }\n    return null;\n}",
    "    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str.indexOf(str[i]) == str.lastIndexOf(str[i])){\n            return str[i];\n        }\n    }\n}\n",
    "    var str = str1;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n        if (str.indexOf(c) == i && str.indexOf(c, i + 1) == -1) {\n            return c;\n        }\n    }\n    return null;\n}",
    "    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str.indexOf(str[i]) == str.lastIndexOf(str[i])){\n            return str[i];\n        }\n    }\n}",
    "    var count = 0;\n    var index;\n    for(var i = 0; i < str1.length; i++){\n        for(var j = 0; j < str1.length; j++){\n            if(str1[i] == str1[j]){\n                count++;\n            }\n        }\n        if(count == 1){\n            index = i;\n            break;\n        }\n        count = 0;\n    }\n    return str1[index];\n}"
  ]
}
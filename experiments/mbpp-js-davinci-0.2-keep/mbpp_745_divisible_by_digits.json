{
  "name": "mbpp_745_divisible_by_digits",
  "language": "js",
  "prompt": "//Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits(startnum, endnum){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisible_by_digits;\n  assert.deepEqual(candidate(1, 22),[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]);\n  assert.deepEqual(candidate(1, 15),[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]);\n  assert.deepEqual(candidate(20, 25),[22, 24]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var arr = [];\n    for(var i = startnum; i <= endnum; i++){\n        var num = i.toString();\n        var flag = true;\n        for(var j = 0; j < num.length; j++){\n            if(i % parseInt(num[j]) != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            arr.push(i);\n        }\n    }\n    return arr;\n}",
    "    var arr = [];\n    for(var i = startnum; i <= endnum; i++){\n        var str = i.toString();\n        var flag = true;\n        for(var j = 0; j < str.length; j++){\n            if(i % parseInt(str[j]) !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            arr.push(i);\n        }\n    }\n    return arr;\n}\n",
    "    var arr = [];\n    for(var i = startnum; i <= endnum; i++){\n        var num = i.toString();\n        var divisible = true;\n        for(var j = 0; j < num.length; j++){\n            if(i % num[j] != 0){\n                divisible = false;\n                break;\n            }\n        }\n        if(divisible){\n            arr.push(i);\n        }\n    }\n    return arr;\n}\n",
    "    return [...Array(endnum-startnum+1).keys()].map(x=>x+startnum).filter(x=>x.toString().split('').every(y=>x%y==0));\n}",
    "\tvar arr = [];\n\tfor(var i = startnum; i <= endnum; i++){\n\t\tvar num = i.toString().split('');\n\t\tvar flag = true;\n\t\tfor(var j = 0; j < num.length; j++){\n\t\t\tif(i % num[j] != 0){\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t\tif(flag){\n\t\t\tarr.push(i);\n\t\t}\n\t}\n\treturn arr;\n}\n",
    "    var result = [];\n    for(var i = startnum; i <= endnum; i++){\n        var num = i.toString();\n        var divisible = true;\n        for(var j = 0; j < num.length; j++){\n            if(i % parseInt(num[j]) !== 0){\n                divisible = false;\n                break;\n            }\n        }\n        if(divisible){\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    var arr = [];\n    for(var i = startnum; i <= endnum; i++){\n        var num = i.toString();\n        var digits = num.split('');\n        var flag = true;\n        for(var j = 0; j < digits.length; j++){\n            if(i % digits[j] != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            arr.push(i);\n        }\n    }\n    return arr;\n}",
    "    var result = [];\n    for(var i = startnum; i <= endnum; i++){\n        var num = i.toString();\n        var divisible = true;\n        for(var j = 0; j < num.length; j++){\n            if(num[j] != 0 && i % num[j] != 0){\n                divisible = false;\n                break;\n            }\n        }\n        if(divisible){\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = startnum; i <= endnum; i++){\n        var num = i.toString().split('');\n        var flag = true;\n        for(var j = 0; j < num.length; j++){\n            if(i % num[j] != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = startnum; i <= endnum; i++){\n        var digits = i.toString().split('');\n        var is_divisible = true;\n        for(var j = 0; j < digits.length; j++){\n            if(i % parseInt(digits[j]) != 0){\n                is_divisible = false;\n                break;\n            }\n        }\n        if(is_divisible){\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = startnum; i <= endnum; i++){\n        var digits = i.toString().split('');\n        var divisible = true;\n        for(var j = 0; j < digits.length; j++){\n            if(i % digits[j] != 0){\n                divisible = false;\n                break;\n            }\n        }\n        if(divisible){\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = startnum; i <= endnum; i++){\n        var digits = i.toString().split(\"\");\n        var is_divisible = true;\n        for(var j = 0; j < digits.length; j++){\n            if(i % digits[j] != 0){\n                is_divisible = false;\n                break;\n            }\n        }\n        if(is_divisible){\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = startnum; i <= endnum; i++){\n        var digits = i.toString().split('');\n        var isDivisible = digits.every(function(digit){\n            return i % digit == 0;\n        });\n        if(isDivisible){\n            result.push(i);\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    for(var i = startnum; i <= endnum; i++){\n        var num = i.toString();\n        var is_divisible = true;\n        for(var j = 0; j < num.length; j++){\n            if(i % num[j] != 0){\n                is_divisible = false;\n                break;\n            }\n        }\n        if(is_divisible){\n            result.push(i);\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    for(var i = startnum; i <= endnum; i++){\n        var digits = i.toString().split('');\n        var divisible = true;\n        for(var j = 0; j < digits.length; j++){\n            if(i % parseInt(digits[j]) != 0){\n                divisible = false;\n                break;\n            }\n        }\n        if(divisible){\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = startnum; i <= endnum; i++){\n        var digits = i.toString().split('');\n        var isDivisible = digits.every(function(digit){\n            return i % parseInt(digit) == 0;\n        });\n        if(isDivisible){\n            result.push(i);\n        }\n    }\n    return result;\n}",
    "    var arr = [];\n    for(var i = startnum; i <= endnum; i++){\n        if(i.toString().split('').every(x => i % x == 0)){\n            arr.push(i);\n        }\n    }\n    return arr;\n}",
    "    var arr = [];\n    for(var i = startnum; i <= endnum; i++){\n        var divisible = true;\n        var num = i;\n        while(num > 0){\n            var digit = num % 10;\n            if(i % digit !== 0){\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if(divisible){\n            arr.push(i);\n        }\n    }\n    return arr;\n}\n",
    "    var result = [];\n    for(var i = startnum; i <= endnum; i++){\n        var num = i.toString().split(\"\");\n        var flag = true;\n        for(var j = 0; j < num.length; j++){\n            if(i % num[j] != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(i);\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    for(var i=startnum; i<=endnum; i++){\n        var num = i.toString();\n        var divisible = true;\n        for(var j=0; j<num.length; j++){\n            if(i%num[j]!=0){\n                divisible = false;\n                break;\n            }\n        }\n        if(divisible){\n            result.push(i);\n        }\n    }\n    return result;\n}"
  ]
}
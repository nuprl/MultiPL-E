{
  "name": "mbpp_75_find_tuples",
  "language": "js",
  "prompt": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_75_find_tuples.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var x = 0; x < test_list.length; x++){\n        if (test_list[x][0] % K === 0 && test_list[x][1] % K === 0){\n            result.push(test_list[x]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    6,\n    24,\n    12\n  ],\n  [\n    12,\n    18,\n    21\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp7s9fjy5d.js:16:10)\n    at Object.<anonymous> (/tmp/tmp7s9fjy5d.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 6, 24, 12 ], [ 12, 18, 21 ] ],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    6,\n    24,\n    12\n  ],\n  [\n    12,\n    18,\n    21\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp1nqdsqt6.js:17:10)\n    at Object.<anonymous> (/tmp/tmp1nqdsqt6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 6, 24, 12 ], [ 12, 18, 21 ] ],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    6,\n    24,\n    12\n  ],\n  [\n    12,\n    18,\n    21\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp1nqdsqt6.js:17:10)\n    at Object.<anonymous> (/tmp/tmp1nqdsqt6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 6, 24, 12 ], [ 12, 18, 21 ] ],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                break;\n            }\n        }\n        if(j == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 12, 24], [7, 8, 9]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = 0;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j]%K!=0){\n                flag = 1;\n                break;\n            }\n        }\n        if(flag==0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    6,\n    24,\n    12\n  ],\n  [\n    12,\n    18,\n    21\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp0emr4c6r.js:16:10)\n    at Object.<anonymous> (/tmp/tmp0emr4c6r.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 6, 24, 12 ], [ 12, 18, 21 ] ],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count += 1;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    let result = []\n    for(let i=0; i<test_list.length; i++){\n        let count = 0\n        for(let j=0; j<test_list[i].length; j++){\n            if(test_list[i][j]%K == 0){\n                count += 1\n            }\n        }\n        if(count == test_list[i].length){\n            result.push(test_list[i])\n        }\n    }\n    return result\n}\n\ntest_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18], [20, 22, 24]]\nK = 4\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    let result = [];\n    for(let i = 0; i < test_list.length; i++){\n        let flag = 0;\n        for(let j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nlet test_list = [[(2, 4), (6, 8), (10, 12)], [(2, 4), (6, 8), (10, 12)], [(2, 4), (6, 8), (10, 12)], [(2, 4), (6, 8), (10, 12)]];\nlet K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = []\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false\n                break\n            }\n        }\n        if(flag){\n            result.push(test_list[i])\n        }\n    }\n    return result\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18], [20, 22, 24]]\nvar K = 2\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var x = 0; x < test_list.length; x++){\n        for (var y = 0; y < test_list[x].length; y++){\n            if (test_list[x][y] % K != 0){\n                break;\n            }\n            if (y == test_list[x].length - 1){\n                result.push(test_list[x]);\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18], [20, 22, 24]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[5, 8, 10], [1, 6, 24], [7, 4, 6], [1, 2, 3]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if(count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                break;\n            }\n            if (j == test_list[i].length - 1){\n                result.push(test_list[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18], [20, 22, 24]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K === 0 && test_list[i][1] % K === 0 && test_list[i][2] % K === 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = []\n    for(var i=0; i<test_list.length; i++){\n        var flag = true\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false\n            }\n        }\n        if(flag == true){\n            result.push(test_list[i])\n        }\n    }\n    return result\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18]]\nvar K = 2\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 16, 24], [12, 24, 36]];\nvar K = 4;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var x = 0; x < test_list.length; x++){\n        if (test_list[x][0] % K === 0 && test_list[x][1] % K === 0 && test_list[x][2] % K === 0){\n            result.push(test_list[x]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = []\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count += 1;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[5, 4, 7, 6], [2, 4, 8, 10], [1, 3, 5, 7]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 16, 24], [12, 18, 24]];\nvar K = 4;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[3, 6, 9], [10, 15, 3], [7, 21, 7]];\nvar K = 3;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = 0;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18], [20, 22, 24]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18], [20, 22, 24]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var x = 0; x < test_list.length; x++){\n        if (test_list[x][0] % K === 0 && test_list[x][1] % K === 0 && test_list[x][2] % K === 0){\n            result.push(test_list[x]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++) {\n            if (test_list[i][j] % K != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    6,\n    24,\n    12\n  ],\n  [\n    12,\n    18,\n    21\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmpzx8qs3if.js:17:10)\n    at Object.<anonymous> (/tmp/tmpzx8qs3if.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 6, 24, 12 ], [ 12, 18, 21 ] ],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var count = 0;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if(count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18], [20, 22, 24]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 12, 24], [7, 8, 9]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = []\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count += 1\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i])\n        }\n    }\n    return result\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18], [20, 22, 24]]\nvar K = 2\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 12, 24], [7, 8, 9]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[3, 4, 5], [6, 7, 8], [9, 10, 11], [12, 13, 14]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[3, 4, 5], [6, 7, 8], [9, 10, 11], [12, 13, 14]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    6,\n    24,\n    12\n  ],\n  [\n    12,\n    18,\n    21\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp0emr4c6r.js:16:10)\n    at Object.<anonymous> (/tmp/tmp0emr4c6r.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 6, 24, 12 ], [ 12, 18, 21 ] ],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18], [20, 22, 24]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2,4,6], [4,8,12], [12,16,20]];\nvar K = 4;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18], [20, 22, 24]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count += 1;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[3, 4, 5], [6, 7, 8], [9, 10, 11], [12, 13, 14]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var x = 0; x < test_list.length; x++){\n        for (var y = 0; y < test_list[x].length; y++){\n            if (test_list[x][y] % K !== 0){\n                break;\n            }\n            if (y == test_list[x].length - 1){\n                result.push(test_list[x]);\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[3, 4, 5], [6, 7, 8], [9, 10, 11], [12, 13, 14]];\nvar K = 3;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                break;\n            }\n        }\n        if(j == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18], [20, 22, 24]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\ntest_list = [[4, 5, 6], [7, 8, 9], [10, 11, 12], [13, 14, 15], [16, 17, 18]];\nK = 4;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[3, 4, 5], [6, 7, 8], [9, 10, 11], [12, 13, 14]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var x = 0; x < test_list.length; x++){\n        if (test_list[x][0] % K === 0 && test_list[x][1] % K === 0 && test_list[x][2] % K === 0){\n            result.push(test_list[x]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var x = 0; x < test_list.length; x++){\n        if (test_list[x][0] % K === 0 && test_list[x][1] % K === 0){\n            result.push(test_list[x]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    6,\n    24,\n    12\n  ],\n  [\n    12,\n    18,\n    21\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp7s9fjy5d.js:16:10)\n    at Object.<anonymous> (/tmp/tmp7s9fjy5d.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 6, 24, 12 ], [ 12, 18, 21 ] ],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0 && test_list[i][3] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmpdykuif4x.js:17:10)\n    at Object.<anonymous> (/tmp/tmpdykuif4x.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++) {\n            if (test_list[i][j] % K != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        if(test_list[i][0]%K==0 && test_list[i][1]%K==0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4], [4, 6], [6, 8], [8, 10], [10, 12]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    6,\n    24,\n    12\n  ],\n  [\n    12,\n    18,\n    21\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp_yydd009.js:19:10)\n    at Object.<anonymous> (/tmp/tmp_yydd009.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 6, 24, 12 ], [ 12, 18, 21 ] ],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var x = 0; x < test_list.length; x++){\n        if (test_list[x][0] % K === 0 && test_list[x][1] % K === 0){\n            result.push(test_list[x]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    6,\n    24,\n    12\n  ],\n  [\n    12,\n    18,\n    21\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmpskxdfynt.js:17:10)\n    at Object.<anonymous> (/tmp/tmpskxdfynt.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 6, 24, 12 ], [ 12, 18, 21 ] ],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var x = 0; x < test_list.length; x++) {\n        if (test_list[x][0] % K === 0 && test_list[x][1] % K === 0 && test_list[x][2] % K === 0) {\n            result.push(test_list[x]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 12, 24], [7, 8, 9]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++) {\n            if (test_list[i][j] % K != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 16, 24], [12, 18, 24]];\nvar K = 4;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    6,\n    24,\n    12\n  ],\n  [\n    12,\n    18,\n    21\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmpzx8qs3if.js:17:10)\n    at Object.<anonymous> (/tmp/tmpzx8qs3if.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 6, 24, 12 ], [ 12, 18, 21 ] ],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    test_list.forEach(function(tuple){\n        var flag = true;\n        tuple.forEach(function(element){\n            if(element % K != 0){\n                flag = false;\n            }\n        });\n        if(flag){\n            result.push(tuple);\n        }\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 16, 24], [12, 18, 24]];\nvar K = 4;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K === 0 && test_list[i][1] % K === 0 && test_list[i][2] % K === 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var x = 0; x < test_list.length; x++){\n        if (test_list[x][0] % K === 0 && test_list[x][1] % K === 0){\n            result.push(test_list[x]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    6,\n    24,\n    12\n  ],\n  [\n    12,\n    18,\n    21\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmpskxdfynt.js:17:10)\n    at Object.<anonymous> (/tmp/tmpskxdfynt.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 6, 24, 12 ], [ 12, 18, 21 ] ],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\ntest_list = [[2, 4, 6], [8, 12, 24], [7, 8, 9]];\nK = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K === 0 && test_list[i][1] % K === 0 && test_list[i][2] % K === 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0 && test_list[i][3] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[(12, 13, 14, 15), (21, 22, 23, 24), (31, 32, 33, 34), (41, 42, 43, 44)], [1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]];\nvar K = 3;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmpjp5ht0sj.js:19:10)\n    at Object.<anonymous> (/tmp/tmpjp5ht0sj.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18], [20, 22, 24]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nvar test_list = [[2, 4, 6], [8, 12, 24], [7, 8, 9]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[3, 4, 5], [6, 7, 8], [9, 10, 11], [12, 13, 14]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[4, 5, 6], [7, 8, 9], [10, 11, 12], [13, 14, 15], [16, 17, 18]];\nvar K = 3;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nvar test_list = [[3, 4, 5], [6, 7, 8], [9, 10, 11], [12, 13, 14]];\nvar K = 3;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++) {\n            if (test_list[i][j] % K != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18], [20, 22, 24]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 12, 24], [7, 8, 9]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[3, 4, 5], [6, 7, 8], [9, 10, 11], [12, 13, 14]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nvar test_list = [[3, 4, 5], [6, 7, 8], [9, 10, 11], [12, 13, 14]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18], [20, 22, 24]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\ntest_list = [[2, 4, 6], [8, 12, 24], [7, 8, 9]];\nK = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][0] % K === 0 && test_list[i][1] % K === 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    6,\n    24,\n    12\n  ],\n  [\n    12,\n    18,\n    21\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmpxpwqtusn.js:16:10)\n    at Object.<anonymous> (/tmp/tmpxpwqtusn.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 6, 24, 12 ], [ 12, 18, 21 ] ],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var x = 0; x < test_list.length; x++){\n        for (var y = 0; y < test_list[x].length; y++){\n            if (test_list[x][y] % K == 0){\n                result.push(test_list[x]);\n                break\n            }\n        }\n    }\n    return result\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124179,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    6,\n    24,\n    12\n  ],\n  [\n    7,\n    9,\n    6\n  ],\n  [\n    12,\n    18,\n    21\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmpszh4v37a.js:20:10)\n    at Object.<anonymous> (/tmp/tmpszh4v37a.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 6, 24, 12 ], [ 7, 9, 6 ], [ 12, 18, 21 ] ],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
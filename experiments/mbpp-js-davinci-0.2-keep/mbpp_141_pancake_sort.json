{
  "name": "mbpp_141_pancake_sort",
  "language": "js",
  "prompt": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_141_pancake_sort.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    for(let i = nums.length-1; i > 0; i--){\n        let max = 0;\n        for(let j = 0; j <= i; j++){\n            if(nums[j] > nums[max]){\n                max = j;\n            }\n        }\n        flip(nums, max);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for(var i = nums.length-1; i >= 0; i--){\n        var max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for(var i = nums.length - 1; i > 0; i--){\n        var max = nums[0];\n        var maxIndex = 0;\n        for(var j = 0; j <= i; j++){\n            if(nums[j] > max){\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        flip(nums, maxIndex);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "  for(var i = nums.length; i > 1; i--){\n    var max = nums[0], max_index = 0;\n    for(var j = 1; j < i; j++){\n      if(nums[j] > max){\n        max = nums[j];\n        max_index = j;\n      }\n    }\n    flip(nums, max_index);\n    flip(nums, i - 1);\n  }\n  return nums;\n}\n",
    "    for(let i = nums.length - 1; i > 0; i--){\n        let max_index = 0;\n        for(let j = 0; j <= i; j++){\n            if(nums[j] > nums[max_index]){\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    var i, j, temp;\n    for(i = nums.length - 1; i > 0; i--){\n        for(j = 0; j < i; j++){\n            if(nums[j] > nums[j + 1]){\n                temp = nums[j];\n                nums[j] = nums[j + 1];\n                nums[j + 1] = temp;\n            }\n        }\n    }\n    return nums;\n}\n",
    "    for(let i = nums.length; i > 1; i--){\n        let max_index = 0;\n        for(let j = 0; j < i; j++){\n            if(nums[j] > nums[max_index]){\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n",
    "\tvar i, j, k, temp;\n\tfor(i = 0; i < nums.length; i++){\n\t\tfor(j = 0; j < nums.length - i; j++){\n\t\t\tif(nums[j] > nums[j + 1]){\n\t\t\t\ttemp = nums[j];\n\t\t\t\tnums[j] = nums[j + 1];\n\t\t\t\tnums[j + 1] = temp;\n\t\t\t}\n\t\t}\n\t}\n\treturn nums;\n}\n",
    "    var len = nums.length;\n    for(var i=len;i>=0;i--){\n        var max_index = findMax(nums,i);\n        if(max_index != i){\n            flip(nums,max_index);\n            flip(nums,i);\n        }\n    }\n    return nums;\n}\n",
    "\tvar n = nums.length;\n\tfor(var i = 0; i < n; i++){\n\t\tvar max = nums[0];\n\t\tvar max_index = 0;\n\t\tfor(var j = 0; j < n-i; j++){\n\t\t\tif(nums[j] > max){\n\t\t\t\tmax = nums[j];\n\t\t\t\tmax_index = j;\n\t\t\t}\n\t\t}\n\t\tnums = flip(nums, max_index);\n\t\tnums = flip(nums, n-i-1);\n\t}\n\treturn nums;\n}\n",
    "\tvar n = nums.length;\n\tfor(var i = n; i > 1; i--){\n\t\tvar max_index = find_max(nums, i);\n\t\tif(max_index != i - 1){\n\t\t\tflip(nums, max_index);\n\t\t\tflip(nums, i - 1);\n\t\t}\n\t}\n\treturn nums;\n}\n",
    "    for(var i = nums.length - 1; i >= 0; i--){\n        var max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for(var i = nums.length - 1; i > 0; i--){\n        var max = 0;\n        for(var j = 0; j <= i; j++){\n            if(nums[j] > nums[max]){\n                max = j;\n            }\n        }\n        flip(nums, max);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for(var i = nums.length; i > 0; i--){\n        var max = nums[0];\n        var max_index = 0;\n        for(var j = 0; j < i; j++){\n            if(nums[j] > max){\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i-1);\n    }\n    return nums;\n}\n",
    "    for(var i = nums.length - 1; i > 0; i--){\n        var max = 0;\n        for(var j = 0; j <= i; j++){\n            if(nums[j] > nums[max]){\n                max = j;\n            }\n        }\n        if(max != i){\n            flip(nums, max);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for(var i = nums.length - 1; i > 0; i--){\n        var max_index = find_max(nums, i);\n        if(max_index != i){\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for(let i = nums.length; i > 1; i--){\n        let max = nums[0];\n        let max_index = 0;\n        for(let j = 0; j < i; j++){\n            if(nums[j] > max){\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        if(max_index != i - 1){\n            flip(nums, max_index);\n            flip(nums, i - 1);\n        }\n    }\n    return nums;\n}\n",
    "    var len = nums.length;\n    for(var i = 0; i < len; i++){\n        var max = nums[0];\n        var maxIndex = 0;\n        for(var j = 0; j < len - i; j++){\n            if(nums[j] > max){\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        flip(nums, maxIndex);\n        flip(nums, len - i - 1);\n    }\n    return nums;\n}\n",
    "    for(let i = nums.length - 1; i > 0; i--){\n        let max_index = find_max(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for(var i = nums.length - 1; i >= 1; i--){\n        var max_idx = find_max(nums, i);\n        if(max_idx != i){\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n}\n"
  ]
}
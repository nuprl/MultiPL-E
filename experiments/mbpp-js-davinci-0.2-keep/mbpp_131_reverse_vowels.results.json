{
  "name": "mbpp_131_reverse_vowels",
  "language": "js",
  "prompt": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_131_reverse_vowels.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.toLowerCase();\n    var vowels = \"aeiou\";\n    var str_arr = str.split(\"\");\n    var i = 0;\n    var j = str_arr.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str_arr[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str_arr[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str_arr[i];\n        str_arr[i] = str_arr[j];\n        str_arr[j] = temp;\n        i++;\n        j--;\n    }\n    return str_arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpu29otq7n.js:30:10)\n    at Object.<anonymous> (/tmp/tmpu29otq7n.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1 && vowels.indexOf(str1[j])!=-1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i])!=-1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j])!=-1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.split(\"\");\n    var vowels = \"aeiouAEIOU\";\n    var temp;\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) == -1){\n            i++;\n        }\n        else if(vowels.indexOf(str[j]) == -1){\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str_list = str1.split(\"\");\n    var temp;\n    var i = 0;\n    var j = str_list.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str_list[i]) != -1 && vowels.indexOf(str_list[j]) != -1){\n            temp = str_list[i];\n            str_list[i] = str_list[j];\n            str_list[j] = temp;\n            i += 1;\n            j -= 1;\n        }\n        else if(vowels.indexOf(str_list[i]) != -1){\n            j -= 1;\n        }\n        else if(vowels.indexOf(str_list[j]) != -1){\n            i += 1;\n        }\n        else{\n            i += 1;\n            j -= 1;\n        }\n    }\n    return str_list.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    var rev_vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    var result = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            result += rev_vowels[j];\n            j++;\n        }\n        else{\n            result += str1[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpycfm4m2i.js:29:10)\n    at Object.<anonymous> (/tmp/tmpycfm4m2i.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str = str1.split('');\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u'){\n            vowels += str1[i];\n        }\n    }\n    vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u'){\n            str2 += vowels[j];\n            j++;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpyyy_ts1z.js:29:10)\n    at Object.<anonymous> (/tmp/tmpyyy_ts1z.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) == -1){\n            i++;\n        }\n        else if(vowels.indexOf(str[j]) == -1){\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            str2 += vowels[j];\n            j++;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmp8n3ygs41.js:29:10)\n    at Object.<anonymous> (/tmp/tmp8n3ygs41.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str1 = str1.split('');\n    var i = 0;\n    var j = str1.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str1[i]) !== -1) {\n            if (vowels.indexOf(str1[j]) !== -1) {\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str = str1.split('');\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var strArr = str1.split('');\n    var i = 0;\n    var j = strArr.length - 1;\n    while(i < j){\n        if(vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1){\n            var temp = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(strArr[i]) !== -1){\n            j--;\n        }\n        else if(vowels.indexOf(strArr[j]) !== -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nreverse_vowels('hello');\nreverse_vowels('leetcode');\nreverse_vowels('aeiou');\nreverse_vowels('aA');\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var temp;\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    var rev_vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    var result = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            result += rev_vowels[j];\n            j++;\n        }\n        else{\n            result += str1[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpycfm4m2i.js:29:10)\n    at Object.<anonymous> (/tmp/tmpycfm4m2i.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])==-1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j])==-1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!==-1){\n            if(vowels.indexOf(str1[j])!==-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            str2 += vowels[j];\n            j++;\n        }else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpc26k9fb1.js:28:10)\n    at Object.<anonymous> (/tmp/tmpc26k9fb1.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])===-1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j])===-1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str1[i]) != -1) {\n            if (vowels.indexOf(str1[j]) != -1) {\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1 && vowels.indexOf(str1[j])!=-1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i])!=-1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j])!=-1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    var vowels_list = \"aeiouAEIOU\";\n    for(var i=0; i<str1.length; i++){\n        if(vowels_list.indexOf(str1[i]) != -1){\n            vowels += str1[i];\n        }\n    }\n    vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(vowels_list.indexOf(str1[i]) != -1){\n            str2 += vowels[j];\n            j++;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) != -1 && vowels.indexOf(str1[j]) != -1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.toLowerCase();\n    var vowels = \"aeiou\";\n    var str_array = str.split(\"\");\n    var i = 0;\n    var j = str_array.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str_array[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str_array[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str_array[i];\n        str_array[i] = str_array[j];\n        str_array[j] = temp;\n        i++;\n        j--;\n    }\n    return str_array.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpfj620yac.js:30:10)\n    at Object.<anonymous> (/tmp/tmpfj620yac.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) != -1 && vowels.indexOf(str1[j]) != -1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i]) == -1){\n            i++;\n        }\n        else if(vowels.indexOf(str1[j]) == -1){\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\"\n    var str = str1.split(\"\")\n    var i = 0\n    var j = str.length - 1\n    while(i < j){\n        if(vowels.indexOf(str[i]) == -1){\n            i += 1\n        }\n        else if(vowels.indexOf(str[j]) == -1){\n            j -= 1\n        }\n        else{\n            var temp = str[i]\n            str[i] = str[j]\n            str[j] = temp\n            i += 1\n            j -= 1\n        }\n    }\n    return str.join(\"\")\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) != -1 && vowels.indexOf(str1[j]) != -1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str = str1.split('');\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    var rev_vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    var result = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            result += rev_vowels[j];\n            j++;\n        }\n        else{\n            result += str1[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpycfm4m2i.js:29:10)\n    at Object.<anonymous> (/tmp/tmpycfm4m2i.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.split(\"\");\n    var vowels = \"\";\n    var consonants = \"\";\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\"){\n            vowels += str[i];\n        }\n        else{\n            consonants += str[i];\n        }\n    }\n    vowels = vowels.split(\"\").reverse().join(\"\");\n    var result = \"\";\n    var j = 0;\n    var k = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\"){\n            result += vowels[j];\n            j++;\n        }\n        else{\n            result += consonants[k];\n            k++;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmp7god9r39.js:36:10)\n    at Object.<anonymous> (/tmp/tmp7god9r39.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var temp;\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    console.log(str.join(\"\"));\n}\nreverse_vowels(\"aeiou\");\nreverse_vowels(\"hello\");\nreverse_vowels(\"python\");\nreverse_vowels(\"aeiouy\");\nreverse_vowels(\"aeiouyaeiou\");\nreverse_vowels(\"aeiouyaeiouy\");\nreverse_vowels(\"aeiouyaeiouyaeiou\");\nreverse_vowels(\"aeiouyaeiouyaeiouy\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "uoiea\nholle\npython\nuoieay\nuoieayuoiea\nuoieayuoieay\nuoieayuoieayuoiea\nuoieayuoieayuoieay\nPython\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmp0lx6ko2e.js:43:10)\n    at Object.<anonymous> (/tmp/tmp0lx6ko2e.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var temp;\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var strArr = str1.split('');\n    var i = 0;\n    var j = strArr.length - 1;\n    while(i < j){\n        if(vowels.indexOf(strArr[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(strArr[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!==-1){\n            if(vowels.indexOf(str1[j])!==-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str[i]) != -1) {\n            if (vowels.indexOf(str[j]) != -1) {\n                var temp = str[i];\n                str[i] = str[j];\n                str[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.split(\"\");\n    var vowel = \"\";\n    var temp = \"\";\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(isVowel(str[i]) && isVowel(str[j])){\n            temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(isVowel(str[i])){\n            j--;\n        }\n        else if(isVowel(str[j])){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "/tmp/tmpcms36xy4.js:9\n        if(isVowel(str[i]) && isVowel(str[j])){\n        ^\n\nReferenceError: isVowel is not defined\n    at reverse_vowels (/tmp/tmpcms36xy4.js:9:9)\n    at test (/tmp/tmpcms36xy4.js:34:20)\n    at Object.<anonymous> (/tmp/tmpcms36xy4.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) != -1 && vowels.indexOf(str1[j]) != -1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) != -1 && vowels.indexOf(str1[j]) != -1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str1 = str1.split('');\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) === -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j]) === -1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nstr1 = \"python\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.toLowerCase();\n    var vowels = \"aeiou\";\n    var str_array = str.split(\"\");\n    var i = 0;\n    var j = str_array.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str_array[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str_array[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str_array[i];\n        str_array[i] = str_array[j];\n        str_array[j] = temp;\n        i++;\n        j--;\n    }\n    return str_array.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpfj620yac.js:30:10)\n    at Object.<anonymous> (/tmp/tmpfj620yac.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])===-1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j])===-1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1 && vowels.indexOf(str1[j])!=-1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i])!=-1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j])!=-1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u'){\n            vowels += str1[i];\n        }\n    }\n    var j = vowels.length - 1;\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u'){\n            str2 += vowels[j];\n            j--;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpj017s8oj.js:28:10)\n    at Object.<anonymous> (/tmp/tmpj017s8oj.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!==-1){\n            if(vowels.indexOf(str1[j])!==-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var temp;\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length-1;\n    while(i<j){\n        if(vowels.indexOf(str[i])!=-1 && vowels.indexOf(str[j])!=-1){\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i])!=-1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j])!=-1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var temp = \"\";\n    for(var i=0;i<str1.length;i++){\n        if(vowels.indexOf(str1[i])!=-1){\n            temp += str1[i];\n        }\n    }\n    temp = temp.split(\"\").reverse().join(\"\");\n    var j=0;\n    var res = \"\";\n    for(var i=0;i<str1.length;i++){\n        if(vowels.indexOf(str1[i])!=-1){\n            res += temp[j];\n            j++;\n        }\n        else{\n            res += str1[i];\n        }\n    }\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length-1;\n    while(i<j){\n        if(vowels.indexOf(str[i])!=-1 && vowels.indexOf(str[j])!=-1){\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i])!=-1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j])!=-1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str_list = str1.split(\"\");\n    var temp;\n    var i = 0;\n    var j = str_list.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str_list[i]) != -1){\n            if(vowels.indexOf(str_list[j]) != -1){\n                temp = str_list[i];\n                str_list[i] = str_list[j];\n                str_list[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str_list.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.toLowerCase();\n    var vowels = \"aeiou\";\n    var str_arr = str.split(\"\");\n    var i = 0;\n    var j = str_arr.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str_arr[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str_arr[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str_arr[i];\n        str_arr[i] = str_arr[j];\n        str_arr[j] = temp;\n        i++;\n        j--;\n    }\n    return str_arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpu29otq7n.js:30:10)\n    at Object.<anonymous> (/tmp/tmpu29otq7n.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            str2 += vowels[j];\n            j++;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nstr1 = \"hello\"\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpif5z7_2v.js:30:10)\n    at Object.<anonymous> (/tmp/tmpif5z7_2v.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str = str1.split('');\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1 && vowels.indexOf(str1[j])!=-1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i])!=-1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j])!=-1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.toLowerCase();\n    var vowels = \"aeiou\";\n    var str_arr = str.split(\"\");\n    var i = 0;\n    var j = str_arr.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str_arr[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str_arr[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str_arr[i];\n        str_arr[i] = str_arr[j];\n        str_arr[j] = temp;\n        i++;\n        j--;\n    }\n    return str_arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpu29otq7n.js:30:10)\n    at Object.<anonymous> (/tmp/tmpu29otq7n.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.toLowerCase();\n    var vowels = \"aeiou\";\n    var temp = \"\";\n    for(var i = 0; i < str.length; i++){\n        if(vowels.indexOf(str[i]) !== -1){\n            temp += str[i];\n        }\n    }\n    var result = \"\";\n    for(var i = 0; i < str.length; i++){\n        if(vowels.indexOf(str[i]) !== -1){\n            result += temp[temp.length - 1];\n            temp = temp.slice(0, temp.length - 1);\n        }\n        else{\n            result += str[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmp3ivs1cpx.js:28:10)\n    at Object.<anonymous> (/tmp/tmp3ivs1cpx.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var strArr = str1.split('');\n    var i = 0;\n    var j = strArr.length - 1;\n    while(i < j){\n        if(vowels.indexOf(strArr[i]) === -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(strArr[j]) === -1){\n            j--;\n            continue;\n        }\n        var temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i]) != -1 && vowels.indexOf(str1[j]) != -1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    var j = vowels.length - 1;\n    var result = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            result += vowels[j];\n            j--;\n        }\n        else{\n            result += str1[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpnzqwftrx.js:28:10)\n    at Object.<anonymous> (/tmp/tmpnzqwftrx.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])==-1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j])==-1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.split(\"\");\n    var vowels = \"aeiouAEIOU\";\n    var temp;\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str = str1.split('');\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.toLowerCase();\n    var vowels = \"aeiou\";\n    var str_arr = str.split(\"\");\n    var i = 0;\n    var j = str_arr.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str_arr[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str_arr[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str_arr[i];\n        str_arr[i] = str_arr[j];\n        str_arr[j] = temp;\n        i++;\n        j--;\n    }\n    return str_arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpu29otq7n.js:30:10)\n    at Object.<anonymous> (/tmp/tmpu29otq7n.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    var j = vowels.length - 1;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            str2 += vowels[j];\n            j--;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpypw0wvrk.js:28:10)\n    at Object.<anonymous> (/tmp/tmpypw0wvrk.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.split(\"\");\n    var vowels = \"\";\n    var vowels_index = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\"){\n            vowels += str[i];\n            vowels_index.push(i);\n        }\n    }\n    vowels = vowels.split(\"\").reverse().join(\"\");\n    for(var i = 0; i < vowels_index.length; i++){\n        str[vowels_index[i]] = vowels[i];\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpt03bsi5k.js:24:10)\n    at Object.<anonymous> (/tmp/tmpt03bsi5k.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str2 = '';\n    for(var x = str1.length - 1; x >= 0; x--){\n        if(vowels.indexOf(str1[x]) !== -1){\n            str2 += str1[x];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmphchf43a3.js:17:10)\n    at Object.<anonymous> (/tmp/tmphchf43a3.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1 && vowels.indexOf(str1[j])!=-1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i])!=-1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j])!=-1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])==-1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j])==-1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.split(\"\");\n    var vowels = \"\";\n    var vowels_index = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\"){\n            vowels += str[i];\n            vowels_index.push(i);\n        }\n    }\n    vowels = vowels.split(\"\").reverse();\n    for(var i = 0; i < vowels_index.length; i++){\n        str[vowels_index[i]] = vowels[i];\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmp5y2bph40.js:24:10)\n    at Object.<anonymous> (/tmp/tmp5y2bph40.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.toLowerCase();\n    var vowels = \"aeiou\";\n    var str_arr = str.split(\"\");\n    var i = 0;\n    var j = str_arr.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str_arr[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str_arr[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str_arr[i];\n        str_arr[i] = str_arr[j];\n        str_arr[j] = temp;\n        i++;\n        j--;\n    }\n    return str_arr.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpkln0saor.js:31:10)\n    at Object.<anonymous> (/tmp/tmpkln0saor.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str = str1.split('');\n    var i = 0;\n    var j = str.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str[i]) !== -1) {\n            if (vowels.indexOf(str[j]) !== -1) {\n                var temp = str[i];\n                str[i] = str[j];\n                str[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var strArr = str1.split('');\n    var i = 0;\n    var j = strArr.length - 1;\n    while(i < j){\n        if(vowels.indexOf(strArr[i]) === -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(strArr[j]) === -1){\n            j--;\n            continue;\n        }\n        var temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length-1;\n    while(i<j){\n        if(vowels.indexOf(str[i])!=-1 && vowels.indexOf(str[j])!=-1){\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i])!=-1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j])!=-1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])===-1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j])===-1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) !== -1 && vowels.indexOf(str1[j]) !== -1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i]) !== -1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j]) !== -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])==-1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j])==-1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nstr1 = \"python\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) != -1 && vowels.indexOf(str1[j]) != -1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            str2 += vowels[j];\n            j++;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpgihvrnhv.js:29:10)\n    at Object.<anonymous> (/tmp/tmpgihvrnhv.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])==-1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j])==-1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.split(\"\");\n    var vowels = \"\";\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\"){\n            vowels += str[i];\n        }\n    }\n    vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\"){\n            str[i] = vowels[j];\n            j++;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmp0t21c5ii.js:26:10)\n    at Object.<anonymous> (/tmp/tmp0t21c5ii.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str1 = str1.split('');\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) > -1 && vowels.indexOf(str1[j]) > -1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i]) > -1){\n            j--;\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!==-1){\n            if(vowels.indexOf(str1[j])!==-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str1 = str1.split('');\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        while(i < j && vowels.indexOf(str1[i]) == -1){\n            i++;\n        }\n        while(i < j && vowels.indexOf(str1[j]) == -1){\n            j--;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.split(\"\");\n    var vowels = \"\";\n    var vowels_index = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\"){\n            vowels += str[i];\n            vowels_index.push(i);\n        }\n    }\n    vowels = vowels.split(\"\").reverse();\n    for(var i = 0; i < vowels.length; i++){\n        str[vowels_index[i]] = vowels[i];\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpnq62yo22.js:24:10)\n    at Object.<anonymous> (/tmp/tmpnq62yo22.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.toLowerCase();\n    var vowels = \"aeiou\";\n    var str_list = str.split(\"\");\n    var i = 0;\n    var j = str_list.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str_list[i]) != -1 && vowels.indexOf(str_list[j]) != -1){\n            var temp = str_list[i];\n            str_list[i] = str_list[j];\n            str_list[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str_list[i]) == -1){\n            i++;\n        }\n        else if(vowels.indexOf(str_list[j]) == -1){\n            j--;\n        }\n    }\n    return str_list.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpy8u1piax.js:30:10)\n    at Object.<anonymous> (/tmp/tmpy8u1piax.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str = str1.split('');\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.toLowerCase();\n    var vowels = \"aeiou\";\n    var str_arr = str.split(\"\");\n    var i = 0;\n    var j = str_arr.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str_arr[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str_arr[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str_arr[i];\n        str_arr[i] = str_arr[j];\n        str_arr[j] = temp;\n        i++;\n        j--;\n    }\n    return str_arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpu29otq7n.js:30:10)\n    at Object.<anonymous> (/tmp/tmpu29otq7n.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1 && vowels.indexOf(str1[j])!=-1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i])!=-1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j])!=-1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!==-1){\n            if(vowels.indexOf(str1[j])!==-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str = str1.split('');\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) !== -1 && vowels.indexOf(str[j]) !== -1){\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) !== -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) !== -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) != -1 && vowels.indexOf(str1[j]) != -1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) != -1 && vowels.indexOf(str1[j]) != -1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) !== -1 && vowels.indexOf(str[j]) !== -1){\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) !== -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) !== -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i]) !== -1 && vowels.indexOf(str1[j]) !== -1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i]) !== -1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j]) !== -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.split(\"\");\n    var vowels = \"aeiouAEIOU\";\n    var temp;\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var strArr = str1.split(\"\");\n    var i = 0;\n    var j = strArr.length - 1;\n    while(i < j){\n        if(vowels.indexOf(strArr[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(strArr[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1 && vowels.indexOf(str1[j])!=-1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i])!=-1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j])!=-1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.split(\"\");\n    var vowels = \"aeiouAEIOU\";\n    var temp;\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels = vowels + str1[i];\n        }\n    }\n    vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            str2 = str2 + vowels[j];\n            j++;\n        }\n        else{\n            str2 = str2 + str1[i];\n        }\n    }\n    return str2;\n}\nstr1 = \"hello\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpbrnx_r7w.js:30:10)\n    at Object.<anonymous> (/tmp/tmpbrnx_r7w.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str = str1.split('');\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) !== -1 && vowels.indexOf(str[j]) !== -1){\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) === -1){\n            i++;\n        }\n        else if(vowels.indexOf(str[j]) === -1){\n            j--;\n        }\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length-1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) !== -1 && vowels.indexOf(str[j]) !== -1){\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) !== -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) !== -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1 && vowels.indexOf(str1[j])!=-1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i])!=-1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j])!=-1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var strArr = str1.split('');\n    var i = 0;\n    var j = strArr.length - 1;\n    while(i < j){\n        if(vowels.indexOf(strArr[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(strArr[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    var rev_vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    var result = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            result += rev_vowels[j];\n            j++;\n        }\n        else{\n            result += str1[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpycfm4m2i.js:29:10)\n    at Object.<anonymous> (/tmp/tmpycfm4m2i.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])==-1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j])==-1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!==-1){\n            if(vowels.indexOf(str1[j])!==-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            str2 += vowels[j];\n            j++;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmprouqcwl1.js:29:10)\n    at Object.<anonymous> (/tmp/tmprouqcwl1.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])==-1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j])==-1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var temp;\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.split(\"\");\n    var vowels = \"aeiouAEIOU\";\n    var temp;\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) == -1){\n            i++;\n        }\n        else if(vowels.indexOf(str[j]) == -1){\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str = str1.split('');\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) != -1 && vowels.indexOf(str[j]) != -1){\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])===-1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j])===-1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            str2 += vowels[j];\n            j++;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpgihvrnhv.js:29:10)\n    at Object.<anonymous> (/tmp/tmpgihvrnhv.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.toLowerCase();\n    var vowels = \"aeiou\";\n    var str_array = str.split(\"\");\n    var i = 0;\n    var j = str_array.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str_array[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str_array[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str_array[i];\n        str_array[i] = str_array[j];\n        str_array[j] = temp;\n        i++;\n        j--;\n    }\n    return str_array.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpfj620yac.js:30:10)\n    at Object.<anonymous> (/tmp/tmpfj620yac.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1 && vowels.indexOf(str1[j])!=-1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i])!=-1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j])!=-1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.split(\"\");\n    var vowels = \"\";\n    var vowels_index = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\"){\n            vowels += str[i];\n            vowels_index.push(i);\n        }\n    }\n    vowels = vowels.split(\"\").reverse();\n    for(var i = 0; i < vowels_index.length; i++){\n        str[vowels_index[i]] = vowels[i];\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmp5y2bph40.js:24:10)\n    at Object.<anonymous> (/tmp/tmp5y2bph40.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            str2 += vowels[j];\n            j++;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpgihvrnhv.js:29:10)\n    at Object.<anonymous> (/tmp/tmpgihvrnhv.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    var rev_vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    var new_str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            new_str += rev_vowels[j];\n            j++;\n        }\n        else{\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nreverse_vowels(\"aeiou\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmp7x9d_6j2.js:31:10)\n    at Object.<anonymous> (/tmp/tmp7x9d_6j2.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str1 = str1.split(\"\");\n    var vowels = \"aeiouAEIOU\";\n    var temp;\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length-1;\n    while(i<j){\n        if(vowels.indexOf(str[i])==-1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str[j])==-1){\n            j--;\n            continue;\n        }\n        var temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.toLowerCase();\n    var vowels = \"aeiou\";\n    var str_list = str.split(\"\");\n    var i = 0;\n    var j = str_list.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str_list[i]) != -1 && vowels.indexOf(str_list[j]) != -1){\n            var temp = str_list[i];\n            str_list[i] = str_list[j];\n            str_list[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str_list[i]) != -1 && vowels.indexOf(str_list[j]) == -1){\n            j--;\n        }\n        else if(vowels.indexOf(str_list[i]) == -1 && vowels.indexOf(str_list[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str_list.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpg4j998dn.js:34:10)\n    at Object.<anonymous> (/tmp/tmpg4j998dn.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(vowels.indexOf(str1[i]) !== -1){\n            str2 += str1[i];\n        }\n    }\n    str2 = str2.split(\"\").reverse().join(\"\");\n    var j = 0;\n    var str3 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(vowels.indexOf(str1[i]) !== -1){\n            str3 += str2[j];\n            j++;\n        }\n        else{\n            str3 += str1[i];\n        }\n    }\n    return str3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length-1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) == -1){\n            i += 1;\n        }\n        else if(vowels.indexOf(str[j]) == -1){\n            j -= 1;\n        }\n        else{\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i += 1;\n            j -= 1;\n        }\n    }\n    return str.join(\"\");\n}\nstr1 = \"hello\"\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str = str1.split('');\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) !== -1 && vowels.indexOf(str[j]) !== -1){\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i]) !== -1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j]) !== -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var strArr = str1.split('');\n    var i = 0;\n    var j = strArr.length - 1;\n    while(i < j){\n        if(vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1){\n            var temp = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(strArr[i]) !== -1){\n            j--;\n        }\n        else if(vowels.indexOf(strArr[j]) !== -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!==-1){\n            if(vowels.indexOf(str1[j])!==-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            str2 += vowels[j];\n            j++;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpgihvrnhv.js:29:10)\n    at Object.<anonymous> (/tmp/tmpgihvrnhv.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var strArr = str1.split('');\n    var i = 0;\n    var j = strArr.length - 1;\n    while(i < j){\n        if(vowels.indexOf(strArr[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(strArr[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    var j = vowels.length - 1;\n    var result = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            result += vowels[j];\n            j--;\n        }\n        else{\n            result += str1[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpnzqwftrx.js:28:10)\n    at Object.<anonymous> (/tmp/tmpnzqwftrx.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var strArr = str1.split(\"\");\n    var i = 0;\n    var j = strArr.length - 1;\n    while(i < j){\n        if(vowels.indexOf(strArr[i]) != -1 && vowels.indexOf(strArr[j]) != -1){\n            var temp = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(strArr[i]) != -1){\n            j--;\n        }\n        else if(vowels.indexOf(strArr[j]) != -1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return strArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nreverse_vowels(\"Hello\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nstr1 = \"hello\"\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            str2 += vowels[vowels.length - 1];\n            vowels = vowels.slice(0, -1);\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmp091_hlga.js:27:10)\n    at Object.<anonymous> (/tmp/tmp091_hlga.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str = str1.split(\"\");\n    var i = 0;\n    var j = str.length-1;\n    while(i<j){\n        if(vowels.indexOf(str[i])!=-1 && vowels.indexOf(str[j])!=-1){\n            var temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str[i])!=-1){\n            j--;\n        }\n        else if(vowels.indexOf(str[j])!=-1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str.join(\"\");\n}\n\nreverse_vowels(\"hello\");\nreverse_vowels(\"leetcode\");\nreverse_vowels(\"aeiou\");\nreverse_vowels(\"why\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1 && vowels.indexOf(str1[j])!=-1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i])!=-1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j])!=-1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nreverse_vowels(\"Hello\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    var rev_vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    var result = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            result += rev_vowels[j];\n            j++;\n        }\n        else{\n            result += str1[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpycfm4m2i.js:29:10)\n    at Object.<anonymous> (/tmp/tmpycfm4m2i.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])==-1){\n            i++;\n        }\n        else if(vowels.indexOf(str1[j])==-1){\n            j--;\n        }\n        else{\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = 'aeiouAEIOU';\n    var str1 = str1.split('');\n    var i = 0;\n    var j = str1.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str1[i]) > -1) {\n            if (vowels.indexOf(str1[j]) > -1) {\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length - 1;\n    while(i < j){\n        if(vowels.indexOf(str1[i]) == -1){\n            i++;\n            continue;\n        }\n        if(vowels.indexOf(str1[j]) == -1){\n            j--;\n            continue;\n        }\n        var temp = str1[i];\n        str1[i] = str1[j];\n        str1[j] = temp;\n        i++;\n        j--;\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1){\n            if(vowels.indexOf(str1[j])!=-1){\n                var temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var str = str1.split(\"\");\n    var vowels = \"\";\n    var vowels_index = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\"){\n            vowels += str[i];\n            vowels_index.push(i);\n        }\n    }\n    vowels = vowels.split(\"\").reverse();\n    for(var i = 0; i < vowels_index.length; i++){\n        str[vowels_index[i]] = vowels[i];\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmp5y2bph40.js:24:10)\n    at Object.<anonymous> (/tmp/tmp5y2bph40.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"\";\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            vowels += str1[i];\n        }\n    }\n    vowels = vowels.split(\"\").reverse().join(\"\");\n    var j = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"){\n            str2 += vowels[j];\n            j++;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpgihvrnhv.js:29:10)\n    at Object.<anonymous> (/tmp/tmpgihvrnhv.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1){\n    var vowels = \"aeiouAEIOU\";\n    var str1 = str1.split(\"\");\n    var i = 0;\n    var j = str1.length-1;\n    while(i<j){\n        if(vowels.indexOf(str1[i])!=-1 && vowels.indexOf(str1[j])!=-1){\n            var temp = str1[i];\n            str1[i] = str1[j];\n            str1[j] = temp;\n            i++;\n            j--;\n        }\n        else if(vowels.indexOf(str1[i])!=-1){\n            j--;\n        }\n        else if(vowels.indexOf(str1[j])!=-1){\n            i++;\n        }\n        else{\n            i++;\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_262_split_two_parts",
  "language": "js",
  "prompt": "//Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\nfunction split_two_parts(list1, L){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_262_split_two_parts.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = split_two_parts;\n  assert.deepEqual(candidate([1, 1, 2, 3, 4, 4, 5, 1], 3),[[1, 1, 2], [3, 4, 4, 5, 1]]);\n  assert.deepEqual(candidate([\"a\", \"b\", \"c\", \"d\"], 2),[[\"a\", \"b\"], [\"c\", \"d\"]]);\n  assert.deepEqual(candidate([\"p\", \"y\", \"t\", \"h\", \"o\", \"n\"], 4),[[\"p\", \"y\", \"t\", \"h\"], [\"o\", \"n\"]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var list2 = list1.slice(L);\n    var list3 = list1.slice(0, L);\n    return [list3, list2];\n}\n",
    "    var list2 = list1.slice(L);\n    var list3 = list1.slice(0, L);\n    return [list3, list2];\n}",
    "    var list2 = list1.slice(L);\n    var list3 = list1.slice(0,L);\n    return [list3, list2];\n}\n",
    "    var list2 = list1.slice(L);\n    var list3 = list1.slice(0, L);\n    return [list3, list2];\n}\n",
    "    var list2 = list1.slice(L);\n    var list3 = list1.slice(0, L);\n    return [list3, list2];\n}\n",
    "    var list2 = list1.slice(L);\n    var list3 = list1.slice(0, L);\n    return [list3, list2];\n}\n",
    "    return [list1.slice(0, L), list1.slice(L)]\n}\n",
    "    var list2 = list1.slice(L);\n    var list3 = list1.slice(0, L);\n    return [list3, list2];\n}\n",
    "  var list2 = list1.slice(L);\n  var list3 = list1.slice(0, L);\n  return [list3, list2];\n}\n",
    "    var list2 = list1.slice(L);\n    var list3 = list1.slice(0, L);\n    return [list3, list2];\n}\n",
    "    var list2 = list1.slice(L);\n    var list3 = list1.slice(0, L);\n    return [list3, list2];\n}",
    "    var list2 = list1.slice(L);\n    var list3 = list1.slice(0, L);\n    return [list3, list2];\n}\n",
    "    var list2 = list1.slice(L);\n    var list3 = list1.slice(0, L);\n    return [list3, list2];\n}\n",
    "    var list2 = list1.slice(L);\n    var list3 = list1.slice(0, L);\n    return [list3, list2];\n}\n",
    "    var list2 = [];\n    var list3 = [];\n    for (var i = 0; i < list1.length; i++){\n        if (i < L){\n            list2.push(list1[i]);\n        }\n        else{\n            list3.push(list1[i]);\n        }\n    }\n    return [list2, list3];\n}\n",
    "    var list2 = [];\n    var list3 = [];\n    for(var i = 0; i < L; i++){\n        list2.push(list1[i]);\n    }\n    for(var i = L; i < list1.length; i++){\n        list3.push(list1[i]);\n    }\n    return [list2, list3];\n}\n",
    "    var list2 = list1.slice(L);\n    var list3 = list1.slice(0, L);\n    return [list3, list2];\n}",
    "    var list2 = list1.slice(L);\n    var list3 = list1.slice(0, L);\n    return [list3, list2];\n}\n",
    "    var list2 = list1.slice(L);\n    list1 = list1.slice(0,L);\n    return [list1, list2];\n}\n",
    "    var list2 = list1.slice(0, L);\n    var list3 = list1.slice(L);\n    return [list2, list3];\n}\n"
  ]
}
{
  "name": "mbpp_639_sample_nam",
  "language": "js",
  "prompt": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_639_sample_nam.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()){\n            sum = sum + sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n17\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpt2co_u_b.js:16:10)\n    at Object.<anonymous> (/tmp/tmpt2co_u_b.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 17,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nvar sample_names = [\"John\", \"john\", \"Mary\", \"mary\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nvar sample_names = [\"Aakash\", \"Akshay\", \"Kumar\", \"aakash\", \"akshay\", \"kumar\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for (var i = 0; i < sample_names.length; i++){\n        if (sample_names[i][0] != sample_names[i][0].toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i=0; i<sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nvar sample_names = [\"John\", \"Doe\", \"jane\", \"Doe\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sample_names = [\"John\", \"Doe\", \"Sam\"];\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpi6l63m8_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpi6l63m8_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum=0;\n    for(var i=0;i<sample_names.length;i++){\n        if(sample_names[i][0]==sample_names[i][0].toUpperCase()){\n            sum+=sample_names[i].length;\n        }\n    }\n    return sum;\n}\nvar sample_names=[\"Geek\",\"Geeks\",\"GeeksforGeeks\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] != sample_names[i][0].toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nvar sample_names = [\"Rajesh\", \"Kumar\", \"raj\", \"kumar\", \"rajesh\", \"kumar\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] != sample_names[i][0].toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) != sample_names[i].charAt(0).toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i=0; i<sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i=0; i<sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    let sum = 0;\n    for(let i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nvar sample_names = [\"Harsh\", \"Beria\", \"Varun\", \"Kakunami\", \"Vikas\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for (var i = 0; i < sample_names.length; i++){\n        if (sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i=0; i<sample_names.length; i++){\n        if(sample_names[i][0] === sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for (var i = 0; i < sample_names.length; i++){\n        var name = sample_names[i];\n        if (name[0] != name[0].toLowerCase()){\n            sum += name.length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charCodeAt(0) >= 97 && sample_names[i].charCodeAt(0) <= 122){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n17\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpnow6yv85.js:17:10)\n    at Object.<anonymous> (/tmp/tmpnow6yv85.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 17,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum=0;\n    for(var i=0;i<sample_names.length;i++){\n        if(sample_names[i].charCodeAt(0)>=65 && sample_names[i].charCodeAt(0)<=90){\n            sum+=sample_names[i].length;\n        }\n    }\n    return sum;\n}\nvar sample_names=[\"Raj\",\"Raju\",\"Ravi\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "/tmp/tmpbjf0zz06.js:11\nvar sample_names=[\"Raj\",\"Raju\",\"Ravi\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\",\"Rajesh\",\"Raju\nn\nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:interna",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sample_names = [\"john\", \"david\", \"omar\", \"fred\", \"idris\", \"angela\"];\n    var sum = 0;\n    for (var i = 0; i < sample_names.length; i++) {\n        if (sample_names[i][0] === sample_names[i][0].toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nsample_nam();\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmphv9w28wp.js:19:10)\n    at Object.<anonymous> (/tmp/tmphv9w28wp.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nvar sample_names = [\"John\", \"James\", \"Jack\", \"jill\", \"jane\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] != sample_names[i][0].toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum=0;\n    for(var i=0;i<sample_names.length;i++){\n        if(sample_names[i].charCodeAt(0)>=65 && sample_names[i].charCodeAt(0)<=90){\n            sum+=sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] === sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for (var i = 0; i < sample_names.length; i++) {\n        if (sample_names[i][0] == sample_names[i][0].toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] === sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nvar sample_names = [\"John\", \"Sam\", \"Raj\", \"Rohan\", \"Rajesh\", \"Raju\", \"Rajiv\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i=0;i<sample_names.length;i++){\n        if(sample_names[i].charAt(0)>='A' && sample_names[i].charAt(0)<='Z'){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nvar sample_names = [\"Raj\",\"Raju\",\"Rajesh\",\"rajesh\",\"raju\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for (var i = 0; i < sample_names.length; i++) {\n        if (sample_names[i][0] == sample_names[i][0].toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum=0;\n    for(var i=0;i<sample_names.length;i++){\n        if(sample_names[i].charCodeAt(0)>=65 && sample_names[i].charCodeAt(0)<=90){\n            sum+=sample_names[i].length;\n        }\n    }\n    return sum;\n}\nvar sample_names=[\"Raj\",\"Kumar\",\"Rajesh\",\"Ramesh\",\"Raju\",\"Rajan\",\"Rajeshwari\",\"Rajeshwar\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for (var i = 0; i < sample_names.length; i++){\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i=0; i<sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for (var i = 0; i < sample_names.length; i++){\n        if (sample_names[i].charAt(0) != sample_names[i].charAt(0).toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] != sample_names[i][0].toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charCodeAt(0) < 97){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sample_names_new = [];\n    for(var i=0; i<sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sample_names_new.push(sample_names[i]);\n        }\n    }\n    var sum = 0;\n    for(var j=0; j<sample_names_new.length; j++){\n        sum += sample_names_new[j].length;\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sample_names = [\"John\", \"Doe\", \"john\", \"doe\"];\n    var sample_names_length = sample_names.length;\n    var sum = 0;\n    for(var i = 0; i < sample_names_length; i++){\n        if(sample_names[i][0] === sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpyb1l51yo.js:18:10)\n    at Object.<anonymous> (/tmp/tmpyb1l51yo.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] != sample_names[i][0].toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i=0; i<sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum=0;\n    for(var i=0;i<sample_names.length;i++){\n        if(sample_names[i].charAt(0)==sample_names[i].charAt(0).toUpperCase()){\n            sum+=sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n17\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpoklwg1q2.js:17:10)\n    at Object.<anonymous> (/tmp/tmpoklwg1q2.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 17,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sample_names = [\"John\", \"Doe\", \"jane\", \"doe\"];\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp9tpqnxal.js:17:10)\n    at Object.<anonymous> (/tmp/tmp9tpqnxal.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for (var i = 0; i < sample_names.length; i++){\n        if (sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum = sum + sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] != sample_names[i][0].toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sample_names = [\"John\", \"Doe\", \"john\", \"doe\"];\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nsample_nam();\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpq5jt3fqc.js:19:10)\n    at Object.<anonymous> (/tmp/tmpq5jt3fqc.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()){\n            sample_names.splice(i, 1);\n            i--;\n        }\n        else{\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n  var sum = 0;\n  for(var i = 0; i < sample_names.length; i++){\n    if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n  var sum = 0;\n  for(var i = 0; i < sample_names.length; i++){\n    if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum=0;\n    for(var i=0;i<sample_names.length;i++){\n        if(sample_names[i].charAt(0)==sample_names[i].charAt(0).toUpperCase()){\n            sum+=sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) >= 'A' && sample_names[i].charAt(0) <= 'Z'){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n  var sum = 0;\n  for(var i = 0; i < sample_names.length; i++){\n    if(sample_names[i][0] === sample_names[i][0].toUpperCase()){\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum = sum + sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] === sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] === sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i=0; i<sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nvar sample_names = [\"Mike\", \"John\", \"bob\", \"Sam\", \"Sara\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] >= 'A' && sample_names[i][0] <= 'Z'){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    let sum = 0;\n    for(let i=0; i<sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) != sample_names[i].charAt(0).toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sample_name_length = 0;\n    for(var i=0; i<sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sample_name_length += sample_names[i].length;\n        }\n    }\n    return sample_name_length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) != sample_names[i].charAt(0).toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nvar sample_names = [\"John\", \"Doe\", \"Ashley\", \"Kirsten\", \"Lara\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i=0; i<sample_names.length; i++){\n        if(sample_names[i][0] != sample_names[i][0].toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nvar sample_names = [\"john\",\"james\",\"jim\",\"jill\",\"joe\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i=0; i<sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nvar sample_names = [\"John\", \"Sam\", \"Alex\", \"Mary\", \"James\", \"james\", \"jim\", \"jimmy\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) != sample_names[i].charAt(0).toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] != sample_names[i][0].toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] === sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] === sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i=0;i<sample_names.length;i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n17\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpjcsto39g.js:17:10)\n    at Object.<anonymous> (/tmp/tmpjcsto39g.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 17,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sample_names = [\"John\", \"Doe\", \"Sam\", \"Sammy\", \"Samuel\", \"Sammy\"];\n    var sum_length = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum_length += sample_names[i].length;\n        }\n    }\n    return sum_length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n26\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpwid3gxt8.js:17:10)\n    at Object.<anonymous> (/tmp/tmpwid3gxt8.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 26,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i=0; i<sample_names.length; i++){\n        if(sample_names[i][0]>='A' && sample_names[i][0]<='Z'){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()){\n            sample_names.splice(i,1);\n            i--;\n        }\n        else{\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] >= 'A' && sample_names[i][0] <= 'Z'){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] != sample_names[i][0].toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] != sample_names[i][0].toLowerCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()){\n            sample_names.splice(i,1);\n            i--;\n        }\n        else{\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] === sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] === sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nvar sample_names = [\"John\", \"Alex\", \"Mary\", \"Steve\", \"Mary\", \"John\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nvar sample_names = [\"Ajay\", \"ajay\", \"Vijay\", \"vijay\", \"Raj\", \"raj\", \"Rajesh\", \"rajesh\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for (var i = 0; i < sample_names.length; i++){\n        if (sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for (var i = 0; i < sample_names.length; i++){\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i][0] == sample_names[i][0].toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names){\n    var sum = 0;\n    for(var i = 0; i < sample_names.length; i++){\n        if(sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()){\n            sum = sum + sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
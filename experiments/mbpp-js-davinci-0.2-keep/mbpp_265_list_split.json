{
  "name": "mbpp_265_list_split",
  "language": "js",
  "prompt": "//Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\nfunction list_split(S, step){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_265_list_split.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = list_split;\n  assert.deepEqual(candidate([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"], 3),[[\"a\", \"d\", \"g\", \"j\", \"m\"], [\"b\", \"e\", \"h\", \"k\", \"n\"], [\"c\", \"f\", \"i\", \"l\"]]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], 3),[[1, 4, 7, 10, 13], [2, 5, 8, 11, 14], [3, 6, 9, 12]]);\n  assert.deepEqual(candidate([\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"], 2),[[\"python\", \"C\", \"DBMS\"], [\"java\", \"C++\", \"SQL\"]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var result = [];\n    for (var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for (var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    for(var i = 0; i < S.length; i++){\n        temp.push(S[i]);\n        if((i+1) % step === 0){\n            result.push(temp);\n            temp = [];\n        }\n    }\n    if(temp.length > 0){\n        result.push(temp);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var list = [];\n    var i = 0;\n    while(i < S.length){\n        list.push(S.slice(i, i+step));\n        i += step;\n    }\n    return list;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    for(var i = 0; i < S.length; i++){\n        temp.push(S[i]);\n        if((i+1) % step == 0){\n            result.push(temp);\n            temp = [];\n        }\n    }\n    if(temp.length > 0){\n        result.push(temp);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i+=step){\n    result.push(S.slice(i, i+step));\n  }\n  return result;\n}\n",
    "\tvar result = [];\n\tvar i = 0;\n\twhile(i < S.length){\n\t\tresult.push(S.slice(i, i + step));\n\t\ti += step;\n\t}\n\treturn result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    for (var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar temp = [];\n\tfor(var i = 0; i < S.length; i++){\n\t\tif(i % step == 0 && i != 0){\n\t\t\tresult.push(temp);\n\t\t\ttemp = [];\n\t\t}\n\t\ttemp.push(S[i]);\n\t}\n\tresult.push(temp);\n\treturn result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < S.length){\n        result.push(S.slice(i, i + step));\n        i += step;\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for (var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < S.length){\n        result.push(S.slice(i, i + step));\n        i += step;\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  var temp = [];\n  for(var i = 0; i < S.length; i++){\n    if(i % step == 0 && i != 0){\n      result.push(temp);\n      temp = [];\n    }\n    temp.push(S[i]);\n  }\n  result.push(temp);\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "  var result = [];\n  var i = 0;\n  while(i < S.length){\n    result.push(S.slice(i, i+step));\n    i += step;\n  }\n  return result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < S.length){\n        result.push(S.slice(i, i+step));\n        i += step;\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "  var result = [];\n  var i = 0;\n  while (i < S.length){\n    result.push(S.slice(i, i + step));\n    i += step;\n  }\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i+=step){\n        result.push(S.slice(i, i+step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while (i < S.length){\n        result.push(S.slice(i, i + step));\n        i += step;\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  for (var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < S.length; i+=step){\n        result.push(S.slice(i, i+step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar i = 0;\n\twhile(i < S.length){\n\t\tresult.push(S.slice(i, i + step));\n\t\ti += step;\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    for (var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar i = 0;\n\twhile(i < S.length){\n\t\tresult.push(S.slice(i, i + step));\n\t\ti += step;\n\t}\n\treturn result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i+=step){\n        result.push(S.slice(i, i+step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar i = 0;\n\twhile(i < S.length){\n\t\tresult.push(S.slice(i, i+step));\n\t\ti += step;\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar temp = [];\n\tfor(var i = 0; i < S.length; i++){\n\t\tif(i % step == 0 && i != 0){\n\t\t\tresult.push(temp);\n\t\t\ttemp = [];\n\t\t}\n\t\ttemp.push(S[i]);\n\t}\n\tresult.push(temp);\n\treturn result;\n}\n",
    "    var result = [];\n    for (var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for (var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  for (var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "\tvar result = [];\n\tvar temp = [];\n\tfor(var i = 0; i < S.length; i++){\n\t\ttemp.push(S[i]);\n\t\tif((i+1) % step == 0){\n\t\t\tresult.push(temp);\n\t\t\ttemp = [];\n\t\t}\n\t}\n\tif(temp.length != 0){\n\t\tresult.push(temp);\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  var temp = [];\n  for(var i = 0; i < S.length; i++){\n    if(i % step === 0 && i !== 0){\n      result.push(temp);\n      temp = [];\n    }\n    temp.push(S[i]);\n  }\n  result.push(temp);\n  return result;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < S.length; i += step){\n        new_list.push(S.slice(i, i + step));\n    }\n    return new_list;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i+=step){\n    result.push(S.slice(i, i+step));\n  }\n  return result;\n}\n",
    "    var result = [];\n    for (var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var new_list = [];\n  var i = 0;\n  while (i < S.length){\n    new_list.push(S.slice(i, i + step));\n    i += step;\n  }\n  return new_list;\n}\n",
    "    var result = [];\n    for (var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  var i = 0;\n  while(i < S.length){\n    result.push(S.slice(i, i+step));\n    i += step;\n  }\n  return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "  var result = [];\n  var temp = [];\n  for(var i = 0; i < S.length; i++){\n    temp.push(S[i]);\n    if(i % step == step - 1){\n      result.push(temp);\n      temp = [];\n    }\n  }\n  if(temp.length > 0)\n    result.push(temp);\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i+=step){\n        result.push(S.slice(i, i+step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for (var i = 0; i < S.length; i += step) {\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    var len = S.length;\n    while(i < len){\n        result.push(S.slice(i, i + step));\n        i += step;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    for(var i = 0; i < S.length; i++){\n        temp.push(S[i]);\n        if((i+1)%step == 0){\n            result.push(temp);\n            temp = [];\n        }\n    }\n    if(temp.length != 0){\n        result.push(temp);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "\tvar result = [];\n\tvar i = 0;\n\twhile(i < S.length){\n\t\tresult.push(S.slice(i, i + step));\n\t\ti += step;\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i+=step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar i = 0;\n\twhile(i < S.length){\n\t\tresult.push(S.slice(i, i+step));\n\t\ti += step;\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i+=step){\n        result.push(S.slice(i, i+step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for (var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "    var res = [];\n    for(var i = 0; i < S.length; i += step){\n        res.push(S.slice(i, i + step));\n    }\n    return res;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    for(var i = 0; i < S.length; i++){\n        if(i % step == 0 && i != 0){\n            result.push(temp);\n            temp = [];\n        }\n        temp.push(S[i]);\n    }\n    result.push(temp);\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  var temp = [];\n  for(var i = 0; i < S.length; i++){\n    if(i % step == 0 && i != 0){\n      result.push(temp);\n      temp = [];\n    }\n    temp.push(S[i]);\n  }\n  result.push(temp);\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    var temp = [];\n    for(var i = 0; i < S.length; i++){\n        temp.push(S[i]);\n        if((i+1) % step == 0){\n            result.push(temp);\n            temp = [];\n        }\n    }\n    if(temp.length > 0){\n        result.push(temp);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tfor (var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "\tvar result = [];\n\tvar temp = [];\n\tfor(var i = 0; i < S.length; i++){\n\t\ttemp.push(S[i]);\n\t\tif((i+1)%step == 0){\n\t\t\tresult.push(temp);\n\t\t\ttemp = [];\n\t\t}\n\t}\n\tif(temp.length > 0)\n\t\tresult.push(temp);\n\treturn result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  for (var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar i = 0;\n\twhile(i < S.length){\n\t\tresult.push(S.slice(i, i+step));\n\t\ti += step;\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    var i = 0;\n    var j = 0;\n    while(i < S.length){\n        result[j] = [];\n        for(var k = 0; k < step; k++){\n            result[j][k] = S[i];\n            i++;\n        }\n        j++;\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for (var i = 0; i < S.length; i += step) {\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < S.length){\n        result.push(S.slice(i, i+step));\n        i += step;\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    for(var i = 0; i < S.length; i++){\n        if(i % step == 0 && i != 0){\n            result.push(temp);\n            temp = [];\n        }\n        temp.push(S[i]);\n    }\n    result.push(temp);\n    return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  var temp = [];\n  for(var i = 0; i < S.length; i++){\n    temp.push(S[i]);\n    if((i+1) % step == 0){\n      result.push(temp);\n      temp = [];\n    }\n  }\n  if(temp.length > 0){\n    result.push(temp);\n  }\n  return result;\n}\n",
    "  var result = [];\n  var temp = [];\n  for(var i = 0; i < S.length; i++){\n    if(i % step === 0 && i !== 0){\n      result.push(temp);\n      temp = [];\n    }\n    temp.push(S[i]);\n  }\n  result.push(temp);\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar temp = [];\n\tfor(var i = 0; i < S.length; i++){\n\t\tif(i % step == 0 && i != 0){\n\t\t\tresult.push(temp);\n\t\t\ttemp = [];\n\t\t}\n\t\ttemp.push(S[i]);\n\t}\n\tresult.push(temp);\n\treturn result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "\tvar result = [];\n\tvar temp = [];\n\tfor(var i = 0; i < S.length; i++){\n\t\tif(i % step == 0 && i != 0){\n\t\t\tresult.push(temp);\n\t\t\ttemp = [];\n\t\t}\n\t\ttemp.push(S[i]);\n\t}\n\tresult.push(temp);\n\treturn result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i+=step){\n        result.push(S.slice(i, i+step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "  var result = [];\n  var temp = [];\n  for(var i = 0; i < S.length; i++){\n    temp.push(S[i]);\n    if((i+1) % step == 0){\n      result.push(temp);\n      temp = [];\n    }\n  }\n  if(temp.length > 0){\n    result.push(temp);\n  }\n  return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "  var result = [];\n  var temp = [];\n  for(var i = 0; i < S.length; i++){\n    if(i % step == 0 && i != 0){\n      result.push(temp);\n      temp = [];\n    }\n    temp.push(S[i]);\n  }\n  result.push(temp);\n  return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "  var result = [];\n  for(var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "  var result = [];\n  for (var i = 0; i < S.length; i += step){\n    result.push(S.slice(i, i + step));\n  }\n  return result;\n}\n",
    "\tvar result = [];\n\tvar i = 0;\n\twhile(i < S.length){\n\t\tresult.push(S.slice(i, i+step));\n\t\ti += step;\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "\tvar result = [];\n\tfor(var i = 0; i < S.length; i += step){\n\t\tresult.push(S.slice(i, i + step));\n\t}\n\treturn result;\n}\n",
    "\tvar result = [];\n\tvar temp = [];\n\tfor(var i = 0; i < S.length; i++){\n\t\tif(i % step == 0 && i != 0){\n\t\t\tresult.push(temp);\n\t\t\ttemp = [];\n\t\t}\n\t\ttemp.push(S[i]);\n\t}\n\tresult.push(temp);\n\treturn result;\n}\n",
    "\tvar result = [];\n\tvar temp = [];\n\tfor(var i = 0; i < S.length; i++){\n\t\tif(i % step == 0 && i != 0){\n\t\t\tresult.push(temp);\n\t\t\ttemp = [];\n\t\t}\n\t\ttemp.push(S[i]);\n\t}\n\tresult.push(temp);\n\treturn result;\n}\n",
    "    var result = [];\n    for (var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    for(var i = 0; i < S.length; i++){\n        if(i % step == 0 && i != 0){\n            result.push(temp);\n            temp = [];\n        }\n        temp.push(S[i]);\n    }\n    result.push(temp);\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < S.length; i += step){\n        result.push(S.slice(i, i + step));\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar i = 0;\n\twhile(i < S.length){\n\t\tresult.push(S.slice(i, i + step));\n\t\ti += step;\n\t}\n\treturn result;\n}\n"
  ]
}
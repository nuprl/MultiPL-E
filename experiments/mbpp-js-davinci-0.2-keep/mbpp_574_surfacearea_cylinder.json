{
  "name": "mbpp_574_surfacearea_cylinder",
  "language": "js",
  "prompt": "//Write a function to find the surface area of a cylinder.\nfunction surfacearea_cylinder(r, h){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_574_surfacearea_cylinder.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = surfacearea_cylinder;\n  assert.deepEqual(candidate(10, 5),942.45);\n  assert.deepEqual(candidate(4, 5),226.18800000000002);\n  assert.deepEqual(candidate(4, 10),351.848);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    return 2*Math.PI*r*(r+h);\n}\n",
    "    var area = 2 * Math.PI * r * (r + h);\n    return area;\n}\n",
    "    let area = 2 * Math.PI * r * (r + h);\n    return area;\n}",
    "    return 2*Math.PI*r*(r+h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    var area = 2 * Math.PI * r * (r + h);\n    return area;\n}",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    var area = 2 * Math.PI * r * (r + h);\n    return area;\n}\nvar s = surfacearea_cylinder(5, 7);",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return (2*Math.PI*r*h)+(2*Math.PI*Math.pow(r,2));\n}",
    "    return 2*Math.PI*r*(r+h);\n}\n",
    "    var area = 2 * Math.PI * r * (r + h);\n    return area;\n}\n",
    "    return 2*Math.PI*r*(r+h);\n}\n",
    "    var area = 2 * Math.PI * r * (r + h);\n    return area;\n}\n",
    "    return 2*Math.PI*r*(r+h);\n}\n",
    "    var area = 2 * Math.PI * r * (r + h);\n    return area;\n}\n",
    "    return 2*Math.PI*r*(r+h);\n}",
    "    return 2*Math.PI*r*(r+h);\n}\n",
    "    return 2*Math.PI*r*(r+h);\n}\n",
    "    return 2*Math.PI*r*(r+h);\n}\n"
  ]
}
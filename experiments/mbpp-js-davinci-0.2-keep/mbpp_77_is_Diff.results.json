{
  "name": "mbpp_77_is_Diff",
  "language": "js",
  "prompt": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var diff = n.toString().split('');\n    var sum1 = 0;\n    var sum2 = 0;\n    for(var i=0;i<diff.length;i++){\n        if(i%2==0){\n            sum1+=parseInt(diff[i]);\n        }\n        else{\n            sum2+=parseInt(diff[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1+=parseInt(str[i]);\n        }\n        else{\n            sum2+=parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var num = n.toString();\n    for(var i = 0; i < num.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(num[i]);\n        }\n        else{\n            sum2 += parseInt(num[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var num=n;\n    while(n>0){\n        sum1+=n%10;\n        n=parseInt(n/10);\n        sum2+=n%10;\n        n=parseInt(n/10);\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        console.log(num+\" is divisible by 11\");\n    }\n    else{\n        console.log(num+\" is not divisible by 11\");\n    }\n}\nis_Diff(121);\nis_Diff(12);\nis_Diff(123);\nis_Diff(12345);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "121 is divisible by 11\n12 is not divisible by 11\n123 is not divisible by 11\n12345 is not divisible by 11\n12345 is not divisible by 11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpame09w9h.js:29:10)\n    at Object.<anonymous> (/tmp/tmpame09w9h.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var i=0;\n    var j=1;\n    var str=n.toString();\n    while(i<str.length){\n        sum1=sum1+parseInt(str[i]);\n        i=i+2;\n    }\n    while(j<str.length){\n        sum2=sum2+parseInt(str[j]);\n        j=j+2;\n    }\n    var diff=sum1-sum2;\n    if(diff%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var sum = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    sum = sum1 - sum2;\n    if(sum % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    while(n>0){\n        if(i%2==0){\n            sum1 += n%10;\n        }\n        else{\n            sum2 += n%10;\n        }\n        n = Math.floor(n/10);\n        i++;\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var i=0;\n    var j=0;\n    var str=n.toString();\n    for(i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1=sum1+parseInt(str[i]);\n        }\n        else{\n            sum2=sum2+parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nis_Diff(1234);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum_even = 0;\n    var sum_odd = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum_even += parseInt(str[i]);\n        }\n        else{\n            sum_odd += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum_even - sum_odd) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var i=0;\n    while(n>0){\n        var rem=n%10;\n        if(i%2==0){\n            sum1=sum1+rem;\n        }\n        else{\n            sum2=sum2+rem;\n        }\n        n=Math.floor(n/10);\n        i++;\n    }\n    if(sum1-sum2==0 || sum1-sum2==11 || sum1-sum2==-11){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nvar res=is_Diff(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum_even = 0;\n    var sum_odd = 0;\n    var i = 0;\n    while(n > 0){\n        var rem = n % 10;\n        if(i % 2 == 0){\n            sum_even = sum_even + rem;\n        }\n        else{\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = parseInt(n / 10);\n    }\n    if(Math.abs(sum_even - sum_odd) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var num=n;\n    while(num>0){\n        var rem=num%10;\n        if(rem%2==0){\n            sum1=sum1+rem;\n        }\n        else{\n            sum2=sum2+rem;\n        }\n        num=parseInt(num/10);\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpaa522tcg.js:29:10)\n    at Object.<anonymous> (/tmp/tmpaa522tcg.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum = 0;\n    var sum1 = 0;\n    var num = n;\n    while(num > 0){\n        var rem = num % 10;\n        sum = sum + rem;\n        num = parseInt(num / 10);\n        var rem1 = num % 10;\n        sum1 = sum1 + rem1;\n        num = parseInt(num / 10);\n    }\n    if(sum - sum1 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nvar res = is_Diff(121);\nif(res == true){\n    console.log(\"The number is divisible by 11\");\n}\nelse{\n    console.log(\"The number is not divisible by 11\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "The number is divisible by 11\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var str = n.toString();\n    var sum1 = 0;\n    var sum2 = 0;\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var str = n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(sum1-sum2==0 || sum1-sum2==11 || sum1-sum2==-11){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var str = n.toString();\n    var sum1 = 0;\n    var sum2 = 0;\n    for(var i=0; i<str.length; i++){\n        if(i%2==0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nis_Diff(13579);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1+=parseInt(str[i]);\n        }\n        else{\n            sum2+=parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var n1 = n.toString();\n    var n2 = n1.split(\"\");\n    var sum1 = 0;\n    var sum2 = 0;\n    for(var i=0; i<n2.length; i++){\n        if(i%2 == 0){\n            sum1 = sum1 + parseInt(n2[i]);\n        }\n        else{\n            sum2 = sum2 + parseInt(n2[i]);\n        }\n    }\n    var diff = sum1 - sum2;\n    if(diff%11 == 0){\n        console.log(n + \" is divisible by 11\");\n    }\n    else{\n        console.log(n + \" is not divisible by 11\");\n    }\n}\nis_Diff(121);\nis_Diff(123);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "121 is divisible by 11\n123 is not divisible by 11\n12345 is not divisible by 11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp6viflmvt.js:31:10)\n    at Object.<anonymous> (/tmp/tmp6viflmvt.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var num = n;\n    while(n > 0){\n        sum1 = sum1 + n % 10;\n        n = parseInt(n / 10);\n        sum2 = sum2 + n % 10;\n        n = parseInt(n / 10);\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        console.log(num + \" is divisible by 11\");\n    }\n    else{\n        console.log(num + \" is not divisible by 11\");\n    }\n}\nis_Diff(121);\nis_Diff(123);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "121 is divisible by 11\n123 is not divisible by 11\n12345 is not divisible by 11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpo8umi314.js:27:10)\n    at Object.<anonymous> (/tmp/tmpo8umi314.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var diff = 0;\n    var num = n;\n    while(n > 0){\n        var rem = n % 10;\n        if(rem % 2 == 0){\n            sum1 = sum1 + rem;\n        }\n        else{\n            sum2 = sum2 + rem;\n        }\n        n = parseInt(n / 10);\n    }\n    diff = sum1 - sum2;\n    if(diff % 11 == 0){\n        console.log(num + \" is divisible by 11\");\n    }\n    else{\n        console.log(num + \" is not divisible by 11\");\n    }\n}\nis_Diff(121);\nis_Diff(123);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "121 is divisible by 11\n123 is not divisible by 11\n12345 is not divisible by 11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7zqs5nac.js:33:10)\n    at Object.<anonymous> (/tmp/tmp7zqs5nac.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for (var i = 0; i < str.length; i++) {\n        if (i % 2 == 0) {\n            sum1 += parseInt(str[i]);\n        }\n        else {\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if (Math.abs(sum1 - sum2) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var diff = 0;\n    for(var i = 0; i < n.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(n[i]);\n        }\n        else{\n            sum2 += parseInt(n[i]);\n        }\n    }\n    diff = sum1 - sum2;\n    if(diff % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpu1m_w3zd.js:27:10)\n    at Object.<anonymous> (/tmp/tmpu1m_w3zd.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var n=n.toString();\n    for(var i=0;i<n.length;i++){\n        if(i%2==0){\n            sum1+=parseInt(n[i]);\n        }\n        else{\n            sum2+=parseInt(n[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    var num = n;\n    while(num > 0){\n        if(i % 2 == 0){\n            sum1 += num % 10;\n        }\n        else{\n            sum2 += num % 10;\n        }\n        num = Math.floor(num / 10);\n        i++;\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nis_Diff(1234);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    var j = 0;\n    var str = n.toString();\n    for(i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var i=0;\n    var j=0;\n    var res=0;\n    var str=n.toString();\n    var len=str.length;\n    var arr=str.split(\"\");\n    for(i=0;i<len;i++){\n        if(i%2==0){\n            sum1=sum1+parseInt(arr[i]);\n        }\n        else{\n            sum2=sum2+parseInt(arr[i]);\n        }\n    }\n    res=sum1-sum2;\n    if(res%11==0){\n        console.log(\"The number is divisible by 11\");\n    }\n    else{\n        console.log(\"The number is not divisible by 11\");\n    }\n}\nis_Diff(121);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "The number is divisible by 11\nThe number is not divisible by 11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpfyr3fgy4.js:34:10)\n    at Object.<anonymous> (/tmp/tmpfyr3fgy4.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var i=0;\n    var j=0;\n    for(i=0;i<n.length;i+=2){\n        sum1+=parseInt(n[i]);\n    }\n    for(j=1;j<n.length;j+=2){\n        sum2+=parseInt(n[j]);\n    }\n    if((sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpixx07kz8.js:25:10)\n    at Object.<anonymous> (/tmp/tmpixx07kz8.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var a=n.toString();\n    var sum1=0;\n    var sum2=0;\n    for(var i=0;i<a.length;i++){\n        if(i%2==0){\n            sum1=sum1+parseInt(a[i]);\n        }\n        else{\n            sum2=sum2+parseInt(a[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1+=parseInt(str[i]);\n        }\n        else{\n            sum2+=parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1+=parseInt(str[i]);\n        }\n        else{\n            sum2+=parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var s = n.toString();\n    var l = s.length;\n    var sum1 = 0;\n    var sum2 = 0;\n    for(var i = 0; i < l; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(s[i]);\n        }\n        else{\n            sum2 += parseInt(s[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var sum=0;\n    var i=0;\n    while(n>0){\n        if(i%2==0){\n            sum1=sum1+n%10;\n        }\n        else{\n            sum2=sum2+n%10;\n        }\n        n=parseInt(n/10);\n        i++;\n    }\n    sum=sum1-sum2;\n    if(sum%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var num = n;\n    while(n > 0){\n        var rem = n % 10;\n        if(rem % 2 == 0){\n            sum1 = sum1 + rem;\n        }\n        else{\n            sum2 = sum2 + rem;\n        }\n        n = parseInt(n / 10);\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        console.log(num + \" is divisible by 11\");\n    }\n    else{\n        console.log(num + \" is not divisible by 11\");\n    }\n}\nis_Diff(121);\nis_Diff(12);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "121 is divisible by 11\n12 is not divisible by 11\n12345 is not divisible by 11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpopv7axnl.js:31:10)\n    at Object.<anonymous> (/tmp/tmpopv7axnl.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum_even = 0;\n    var sum_odd = 0;\n    var count = 0;\n    while(n > 0){\n        var rem = n % 10;\n        if(count % 2 == 0){\n            sum_even = sum_even + rem;\n        }\n        else{\n            sum_odd = sum_odd + rem;\n        }\n        count++;\n        n = parseInt(n / 10);\n    }\n    if(Math.abs(sum_even - sum_odd) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if (n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1=sum1+parseInt(str[i]);\n        }\n        else{\n            sum2=sum2+parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        console.log(\"Divisible by 11\");\n    }\n    else{\n        console.log(\"Not Divisible by 11\");\n    }\n}\nis_Diff(121);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "Divisible by 11\nNot Divisible by 11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp3d0yq390.js:17:10)\n    at Object.<anonymous> (/tmp/tmp3d0yq390.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum_even=0;\n    var sum_odd=0;\n    var n=n.toString();\n    for(var i=0;i<n.length;i++){\n        if(i%2==0){\n            sum_even+=parseInt(n[i]);\n        }\n        else{\n            sum_odd+=parseInt(n[i]);\n        }\n    }\n    if(Math.abs(sum_even-sum_odd)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0,sum2=0;\n    for(var i=0;i<n.length;i++){\n        if(i%2==0){\n            sum1+=parseInt(n[i]);\n        }\n        else{\n            sum2+=parseInt(n[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpu8ns9aqe.js:24:10)\n    at Object.<anonymous> (/tmp/tmpu8ns9aqe.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var num=n;\n    while(num>0){\n        sum1=sum1+num%10;\n        num=parseInt(num/10);\n        sum2=sum2+num%10;\n        num=parseInt(num/10);\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var num=n;\n    while(num>0){\n        sum1=sum1+num%10;\n        num=Math.floor(num/10);\n        sum2=sum2+num%10;\n        num=Math.floor(num/10);\n    }\n    if(sum1-sum2==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    while(n > 0){\n        var rem = n % 10;\n        if(i % 2 == 0){\n            sum1 = sum1 + rem;\n        }else{\n            sum2 = sum2 + rem;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    var j = 0;\n    var l = n.length;\n    for(i = 0; i < l; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(n[i]);\n        }\n        else{\n            sum2 += parseInt(n[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpp_u386yi.js:28:10)\n    at Object.<anonymous> (/tmp/tmpp_u386yi.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1+=parseInt(str[i]);\n        }\n        else{\n            sum2+=parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nis_Diff(1234);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var num = n.toString();\n    var sum1 = 0;\n    var sum2 = 0;\n    for(var i = 0; i < num.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(num[i]);\n        }\n        else{\n            sum2 += parseInt(num[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum_even = 0;\n    var sum_odd = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum_even += parseInt(str[i]);\n        }\n        else{\n            sum_odd += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum_even - sum_odd) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1+=parseInt(str[i]);\n        }\n        else{\n            sum2+=parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var i=0;\n    while(n>0){\n        if(i%2==0){\n            sum1=sum1+n%10;\n        }\n        else{\n            sum2=sum2+n%10;\n        }\n        n=parseInt(n/10);\n        i++;\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    var str = n.toString();\n    var len = str.length;\n    for(i = 0; i < len; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var num = n.toString();\n    var sum1 = 0;\n    var sum2 = 0;\n    for(var i=0;i<num.length;i++){\n        if(i%2==0){\n            sum1 += parseInt(num[i]);\n        }\n        else{\n            sum2 += parseInt(num[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var sum3=0;\n    var sum4=0;\n    var sum5=0;\n    var sum6=0;\n    var sum7=0;\n    var sum8=0;\n    var sum9=0;\n    var sum10=0;\n    var sum11=0;\n    var sum12=0;\n    var sum13=0;\n    var sum14=0;\n    var sum15=0;\n    var sum16=0;\n    var sum17=0;\n    var sum18=0;\n    var sum19=0;\n    var sum20=0;\n    var sum21=0;\n    var sum22=0;\n    var sum23=0;\n    var sum24=0;\n    var sum25=0;\n    var sum26=0;\n    var sum27=0;\n    var sum28=0;\n    var sum29=0;\n    var sum30=0;\n    var sum31=0;\n    var sum32=0;\n    var sum33=0;\n    var sum34=0;\n    var sum35=0;\n    var sum36=0;\n    var sum37=0;\n    var sum38=0;\n    var sum39=0;\n    var sum40=0;\n    var sum41=0;\n    var sum42=0;\n    var sum43=0;\n    var sum44=0;\n    var sum45=0;\n    var sum46=0;\n    var sum47=0;\n    var sum48=0;\n    var sum49=0;\n    var sum50=0;\n    var sum51=0;\n    var sum52=0;\n    var sum53=0;\n    var sum54=0;\n    var sum55=0;\n    var sum56=0;\n    var sum57=0;\n    var sum58=0;\n    var sum59=0;\n    var sum60=0;\n    var sum61=0;\n    var sum62=0;\n    var sum63=0;\n    var sum64=0;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "/tmp/tmpavyzdbi1.js:77\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var diff = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    diff = sum1 - sum2;\n    if(diff % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var diff=0;\n    var num=n;\n    while(n>0){\n        var rem=n%10;\n        if(rem%2==0){\n            sum1=sum1+rem;\n        }\n        else{\n            sum2=sum2+rem;\n        }\n        n=parseInt(n/10);\n    }\n    diff=sum1-sum2;\n    if(diff%11==0){\n        console.log(num+\" is divisible by 11\");\n    }\n    else{\n        console.log(num+\" is not divisible by 11\");\n    }\n}\nis_Diff(121);\nis_Diff(12);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "121 is divisible by 11\n12 is not divisible by 11\n12345 is not divisible by 11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpjaf66oz0.js:33:10)\n    at Object.<anonymous> (/tmp/tmpjaf66oz0.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var n1=n.toString();\n    var n2=n1.split(\"\");\n    var n3=n2.map(Number);\n    var n4=n3.reduce(function(a,b){\n        return a-b;\n    });\n    if(n4%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfj8wi3_q.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfj8wi3_q.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    var diff = sum1 - sum2;\n    if(diff % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nis_Diff(11);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var diff = 0;\n    var num = n;\n    while(num > 0){\n        var rem = num % 10;\n        if(rem % 2 == 0){\n            sum1 = sum1 + rem;\n        }\n        else{\n            sum2 = sum2 + rem;\n        }\n        num = parseInt(num / 10);\n    }\n    diff = sum1 - sum2;\n    if(diff % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nvar res = is_Diff(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdep1t7cj.js:32:10)\n    at Object.<anonymous> (/tmp/tmpdep1t7cj.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var n1=n.toString();\n    var n2=n1.split(\"\");\n    var sum1=0;\n    var sum2=0;\n    for(var i=0;i<n2.length;i++){\n        if(i%2==0){\n            sum1=sum1+parseInt(n2[i]);\n        }\n        else{\n            sum2=sum2+parseInt(n2[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        console.log(\"The number is divisible by 11\");\n    }\n    else{\n        console.log(\"The number is not divisible by 11\");\n    }\n}\nis_Diff(121);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "The number is divisible by 11\nThe number is not divisible by 11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp8mxl3y69.js:29:10)\n    at Object.<anonymous> (/tmp/tmp8mxl3y69.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    while(n > 0){\n        if(i % 2 == 0){\n            sum1 += n % 10;\n        }\n        else{\n            sum2 += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1+=parseInt(str[i]);\n        }\n        else{\n            sum2+=parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var sum=0;\n    var i=0;\n    var j=0;\n    var num=n;\n    while(n>0){\n        sum1=sum1+n%10;\n        n=parseInt(n/10);\n        i++;\n    }\n    while(num>0){\n        sum2=sum2+num%10;\n        num=parseInt(num/10);\n        j++;\n    }\n    sum=sum1-sum2;\n    if(sum%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpy6ild5rr.js:32:10)\n    at Object.<anonymous> (/tmp/tmpy6ild5rr.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var sum3 = 0;\n    var sum4 = 0;\n    var sum5 = 0;\n    var sum6 = 0;\n    var sum7 = 0;\n    var sum8 = 0;\n    var sum9 = 0;\n    var sum10 = 0;\n    var sum11 = 0;\n    var sum12 = 0;\n    var sum13 = 0;\n    var sum14 = 0;\n    var sum15 = 0;\n    var sum16 = 0;\n    var sum17 = 0;\n    var sum18 = 0;\n    var sum19 = 0;\n    var sum20 = 0;\n    var sum21 = 0;\n    var sum22 = 0;\n    var sum23 = 0;\n    var sum24 = 0;\n    var sum25 = 0;\n    var sum26 = 0;\n    var sum27 = 0;\n    var sum28 = 0;\n    var sum29 = 0;\n    var sum30 = 0;\n    var sum31 = 0;\n    var sum32 = 0;\n    var sum33 = 0;\n    var sum34 = 0;\n    var sum35 = 0;\n    var sum36 = 0;\n    var sum37 = 0;\n    var sum38 = 0;\n    var sum39 = 0;\n    var sum40 = 0;\n    var sum41 = 0;\n    var sum42 = 0;\n    var sum43 = 0;\n    var sum44 = 0;\n    var sum45 = 0;\n    var sum46 = 0;\n    var sum47 = 0;\n    var sum48 = 0;\n    var sum49 = 0;\n    var sum50 = 0;\n    var sum51 = 0;\n    var sum52 = 0;\n    var sum53 = 0;\n    var sum54 = 0;\n    var sum55 = 0;\n    var sum56 = 0;\n    var sum57 = 0;\n    var sum58 = 0;\n    var sum59 = 0;\n    var sum60 = 0;\n    var sum61 = 0;\n    var sum62 = 0;\n    var sum63 = 0;\n    var sum64 = 0;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "/tmp/tmpx6_qvkb4.js:77\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var temp=n;\n    while(n>0){\n        sum1=sum1+n%10;\n        n=parseInt(n/10);\n        sum2=sum2+n%10;\n        n=parseInt(n/10);\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    while(n>0){\n        var rem = n%10;\n        sum1 = sum1 + rem;\n        n = Math.floor(n/10);\n        rem = n%10;\n        sum2 = sum2 + rem;\n        n = Math.floor(n/10);\n    }\n    if(sum1-sum2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var str = n.toString();\n    var sum1 = 0;\n    var sum2 = 0;\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nis_Diff(1234);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum_even = 0;\n    var sum_odd = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum_even += parseInt(str[i]);\n        }\n        else{\n            sum_odd += parseInt(str[i]);\n        }\n    }\n    var diff = sum_even - sum_odd;\n    if(diff % 11 == 0){\n        console.log(n + \" is divisible by 11\");\n    }\n    else{\n        console.log(n + \" is not divisible by 11\");\n    }\n}\nis_Diff(121);\nis_Diff(123);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "121 is divisible by 11\n123 is not divisible by 11\n12345 is not divisible by 11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmtuam2t2.js:30:10)\n    at Object.<anonymous> (/tmp/tmpmtuam2t2.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var a = n.toString();\n    var b = a.split(\"\");\n    var c = 0;\n    var d = 0;\n    for (var i = 0; i < b.length; i++){\n        if (i % 2 == 0){\n            c = c + parseInt(b[i]);\n        }\n        else{\n            d = d + parseInt(b[i]);\n        }\n    }\n    var e = c - d;\n    if (e % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var i=0;\n    var j=1;\n    var num=n;\n    while(num>0){\n        sum1=sum1+num%10;\n        num=parseInt(num/10);\n        sum2=sum2+num%10;\n        num=parseInt(num/10);\n    }\n    if(sum1-sum2==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var i=0;\n    var j=0;\n    var num=n;\n    while(num!=0){\n        sum1=sum1+num%10;\n        num=parseInt(num/10);\n        i++;\n    }\n    num=n;\n    while(num!=0){\n        sum2=sum2+num%10;\n        num=parseInt(num/10);\n        j++;\n        if(j==2){\n            num=parseInt(num/10);\n            j=0;\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvb8t6qtn.js:36:10)\n    at Object.<anonymous> (/tmp/tmpvb8t6qtn.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var diff = 0;\n    var num = n;\n    while(num > 0){\n        diff = diff + (num % 10);\n        num = parseInt(num / 10);\n        diff = diff - (num % 10);\n        num = parseInt(num / 10);\n    }\n    if(diff % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1+=parseInt(str[i]);\n        }\n        else{\n            sum2+=parseInt(str[i]);\n        }\n    }\n    if(sum1-sum2==0 || sum1-sum2==11 || sum1-sum2==-11){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nis_Diff(121);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1+=parseInt(str[i]);\n        }\n        else{\n            sum2+=parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum_even = 0;\n    var sum_odd = 0;\n    var i = 0;\n    while(n>0){\n        var rem = n%10;\n        if(i%2==0){\n            sum_even = sum_even + rem;\n        }\n        else{\n            sum_odd = sum_odd + rem;\n        }\n        n = parseInt(n/10);\n        i++;\n    }\n    if(sum_even - sum_odd == 0 || sum_even - sum_odd == 11 || sum_even - sum_odd == -11){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var s = n.toString();\n    var l = s.length;\n    var sum1 = 0;\n    var sum2 = 0;\n    for(var i = 0; i < l; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(s[i]);\n        }\n        else{\n            sum2 += parseInt(s[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    while(n > 0){\n        if(i % 2 == 0){\n            sum1 += n % 10;\n        }\n        else{\n            sum2 += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var diff=0;\n    var num=n;\n    while(num>0){\n        var r=num%10;\n        if(r%2==0){\n            sum1=sum1+r;\n        }\n        else{\n            sum2=sum2+r;\n        }\n        num=Math.floor(num/10);\n    }\n    diff=sum1-sum2;\n    if(diff%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nvar res=is_Diff(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkypn1y8_.js:32:10)\n    at Object.<anonymous> (/tmp/tmpkypn1y8_.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var n1 = n.toString();\n    var sum1 = 0;\n    var sum2 = 0;\n    for(var i = 0; i < n1.length; i++){\n        if(i % 2 == 0){\n            sum1 = sum1 + parseInt(n1[i]);\n        }\n        else{\n            sum2 = sum2 + parseInt(n1[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nis_Diff(1234);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if (n % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    while(n != 0){\n        if(i % 2 == 0){\n            sum1 += n % 10;\n        }\n        else{\n            sum2 += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    return (sum1 - sum2) % 11 == 0;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1=sum1+parseInt(str[i]);\n        }\n        else{\n            sum2=sum2+parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if (n % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    var j = 0;\n    var str = n.toString();\n    var len = str.length;\n    if(len % 2 == 0){\n        while(i < len/2){\n            sum1 += parseInt(str[i]);\n            i++;\n        }\n        while(j < len/2){\n            sum2 += parseInt(str[len-1-j]);\n            j++;\n        }\n    }\n    else{\n        while(i < (len-1)/2){\n            sum1 += parseInt(str[i]);\n            i++;\n        }\n        while(j < (len-1)/2){\n            sum2 += parseInt(str[len-1-j]);\n            j++;\n        }\n        sum2 += parseInt(str[len/2]);\n    }\n    if(Math.abs(sum1-sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpm7283u87.js:43:10)\n    at Object.<anonymous> (/tmp/tmpm7283u87.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i=0; i<str.length; i++){\n        if(i%2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2)%11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    while(n > 0){\n        var r = n % 10;\n        if(i % 2 == 0){\n            sum1 = sum1 + r;\n        }\n        else{\n            sum2 = sum2 + r;\n        }\n        n = parseInt(n / 10);\n        i++;\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum_even = 0;\n    var sum_odd = 0;\n    var i = 0;\n    while(n!=0){\n        var rem = n%10;\n        if(i%2==0){\n            sum_even = sum_even + rem;\n        }\n        else{\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = parseInt(n/10);\n    }\n    var diff = sum_even - sum_odd;\n    if(diff%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    var j = 1;\n    while(i < n.length){\n        sum1 = sum1 + parseInt(n[i]);\n        i = i + 2;\n    }\n    while(j < n.length){\n        sum2 = sum2 + parseInt(n[j]);\n        j = j + 2;\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpk237bvty.js:27:10)\n    at Object.<anonymous> (/tmp/tmpk237bvty.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1+=parseInt(str[i]);\n        }\n        else{\n            sum2+=parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1+=parseInt(str[i]);\n        }\n        else{\n            sum2+=parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum_even = 0;\n    var sum_odd = 0;\n    var i = 0;\n    while(n > 0){\n        var rem = n % 10;\n        if(i % 2 == 0){\n            sum_even = sum_even + rem;\n        }\n        else{\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = parseInt(n / 10);\n    }\n    if(sum_even - sum_odd == 0 || sum_even - sum_odd == 11 || sum_even - sum_odd == -11){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    while(n > 0){\n        if(i % 2 == 0){\n            sum1 += n % 10;\n            i++;\n        }\n        else{\n            sum2 += n % 10;\n            i++;\n        }\n        n = Math.floor(n / 10);\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1=sum1+parseInt(str[i]);\n        }\n        else{\n            sum2=sum2+parseInt(str[i]);\n        }\n    }\n    if(sum1-sum2==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var diff = 0;\n    var num = n.toString();\n    for(var i = 0; i < num.length; i++){\n        if(i % 2 == 0){\n            diff += parseInt(num[i]);\n        }\n        else{\n            diff -= parseInt(num[i]);\n        }\n    }\n    if(diff % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var num = n;\n    while(n > 0){\n        var rem = n % 10;\n        if(rem % 2 == 0){\n            sum1 += rem;\n        }\n        else{\n            sum2 += rem;\n        }\n        n = parseInt(n / 10);\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpa98u4ajj.js:29:10)\n    at Object.<anonymous> (/tmp/tmpa98u4ajj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum = 0;\n    var diff = 0;\n    while(n > 0 || sum > 9){\n        if(n == 0){\n            n = sum;\n            sum = 0;\n        }\n        sum += n % 10;\n        n = Math.floor(n / 10);\n        if(n == 0){\n            n = sum;\n            sum = 0;\n        }\n        diff += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return diff == sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpww6d43b2.js:27:10)\n    at Object.<anonymous> (/tmp/tmpww6d43b2.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum_odd = 0;\n    var sum_even = 0;\n    var str = n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum_even += parseInt(str[i]);\n        }\n        else{\n            sum_odd += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum_even-sum_odd)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    var j = 0;\n    var rem = 0;\n    while(n > 0){\n        rem = n % 10;\n        if(i % 2 == 0){\n            sum1 = sum1 + rem;\n        }\n        else{\n            sum2 = sum2 + rem;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nvar res = is_Diff(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    while(n>0){\n        if(i%2==0){\n            sum1 += n%10;\n        }\n        else{\n            sum2 += n%10;\n        }\n        i++;\n        n = parseInt(n/10);\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1+=parseInt(str[i]);\n        }\n        else{\n            sum2+=parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var num = n.toString();\n    for(var i = 0; i < num.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(num[i]);\n        }\n        else{\n            sum2 += parseInt(num[i]);\n        }\n    }\n    var diff = sum1 - sum2;\n    if(diff % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    while(n > 0){\n        var r = n % 10;\n        if(i % 2 == 0){\n            sum1 = sum1 + r;\n        }\n        else{\n            sum2 = sum2 + r;\n        }\n        n = parseInt(n / 10);\n        i++;\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(i%2==0){\n            sum1+=parseInt(str[i]);\n        }\n        else{\n            sum2+=parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i=0; i<str.length; i++){\n        if(i%2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1-sum2)%11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    var j = 0;\n    var num = n;\n    while(num > 0){\n        sum1 = sum1 + num%10;\n        num = parseInt(num/10);\n        i++;\n    }\n    num = n;\n    while(num > 0){\n        sum2 = sum2 + num%10;\n        num = parseInt(num/10);\n        j++;\n        if(j == 2){\n            j = 0;\n            num = num/10;\n        }\n    }\n    if(Math.abs(sum1 - sum2)%11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxn8ftlok.js:36:10)\n    at Object.<anonymous> (/tmp/tmpxn8ftlok.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var num = n.toString();\n    var sum1 = 0;\n    var sum2 = 0;\n    for(var i = 0; i < num.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(num[i]);\n        }\n        else{\n            sum2 += parseInt(num[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1=0;\n    var sum2=0;\n    var i=0;\n    while(n>0){\n        var rem=n%10;\n        if(i%2==0){\n            sum1=sum1+rem;\n        }\n        else{\n            sum2=sum2+rem;\n        }\n        i++;\n        n=parseInt(n/10);\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nvar res=is_Diff(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if (n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum_odd = 0;\n    var sum_even = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum_odd += parseInt(str[i]);\n        }\n        else{\n            sum_even += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum_odd - sum_even) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var s = n.toString();\n    var l = s.length;\n    var sum1 = 0;\n    var sum2 = 0;\n    for(var i = 0; i < l; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(s[i]);\n        }\n        else{\n            sum2 += parseInt(s[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        console.log(n + \" is divisible by 11\");\n    }\n    else{\n        console.log(n + \" is not divisible by 11\");\n    }\n}\nis_Diff(121);\nis_Diff(12);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "121 is divisible by 11\n12 is not divisible by 11\n12345 is not divisible by 11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmppi3p32dm.js:30:10)\n    at Object.<anonymous> (/tmp/tmppi3p32dm.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    while(n>0){\n        var r = n%10;\n        if(i%2==0){\n            sum1 = sum1+r;\n        }\n        else{\n            sum2 = sum2+r;\n        }\n        i++;\n        n = parseInt(n/10);\n    }\n    if(Math.abs(sum1-sum2)%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nvar res = is_Diff(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    if(n%11==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(i % 2 == 0){\n            sum1 += parseInt(str[i]);\n        }\n        else{\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if(Math.abs(sum1 - sum2) % 11 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n){\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    while(n > 0){\n        if(i % 2 == 0){\n            sum1 += n % 10;\n        }\n        else{\n            sum2 += n % 10;\n        }\n        i++;\n        n = parseInt(n / 10);\n    }\n    if(sum1 - sum2 == 0 || sum1 - sum2 == 11 || sum1 - sum2 == -11){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
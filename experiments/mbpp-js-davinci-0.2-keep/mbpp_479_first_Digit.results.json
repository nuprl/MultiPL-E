{
  "name": "mbpp_479_first_Digit",
  "language": "js",
  "prompt": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_479_first_Digit.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar n = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar n = 1234;\nvar result = first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar num = first_Digit(123);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a = n.toString();\n    var b = a.split(\"\");\n    for(var i=0;i<b.length;i++){\n        if(b[i]>=0){\n            return b[i];\n        }\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str=n.toString();\n    var res=str.split(\"\");\n    for(var i=0;i<res.length;i++){\n        if(res[i]>=0){\n            return res[i];\n        }\n    }\n}\nvar result=first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var s = n.toString();\n    var i = 0;\n    while(i < s.length){\n        if(s[i] != 0){\n            return s[i];\n        }\n        i++;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var num = n.toString();\n    var first = num.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var num = n.toString();\n    var first = num.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar n=12345;\nvar result=first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var s = n.toString();\n    var first = s.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar result=first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nfirst_Digit(123);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar num = first_Digit(123);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var n = n.toString();\n    return n[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var num = n.toString();\n    var first = num.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar result=first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var digit = str.charAt(0);\n    return digit;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a = n.toString();\n    var b = a.split(\"\");\n    var c = b[0];\n    return c;\n}\nvar result = first_Digit(123);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar result=first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a = n.toString();\n    var b = a.split(\"\");\n    var c = b[0];\n    return c;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar num = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a = n.toString();\n    var b = a.split(\"\");\n    var c = b[0];\n    return c;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a=n.toString();\n    return a[0];\n}\nvar result=first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var num = n.toString();\n    var first = num.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a = n.toString();\n    var b = a.split(\"\");\n    var c = b[0];\n    return c;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar result=first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a = n.toString();\n    var b = a.split(\"\");\n    var c = b[0];\n    return c;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var n = n.toString();\n    return n[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var num = n.toString();\n    var first = num.charAt(0);\n    return first;\n}\nvar n = prompt(\"Enter the number\");\nvar result = first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "/tmp/tmplr7yaj5z.js:7\nvar n = prompt(\"Enter the number\");\n        ^\n\nReferenceError: prompt is not defined\n    at Object.<anonymous> (/tmp/tmplr7yaj5z.js:7:9)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a = n.toString();\n    return a[0];\n}\nvar result = first_Digit(123);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar num = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nfirst_Digit(123);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    return str[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var s = n.toString();\n    var i = 0;\n    while (s[i] == \"0\"){\n        i++;\n    }\n    return s[i];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a = n.toString();\n    var b = a.split(\"\");\n    for(var i=0;i<b.length;i++){\n        if(b[i]>=0){\n            return b[i];\n        }\n    }\n}\nvar n = prompt(\"Enter a number\");\nvar result = first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "/tmp/tmpsrqp17k4.js:11\nvar n = prompt(\"Enter a number\");\n        ^\n\nReferenceError: prompt is not defined\n    at Object.<anonymous> (/tmp/tmpsrqp17k4.js:11:9)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar num = 12345;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var num = n.toString();\n    var first = num.charAt(0);\n    return first;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    return str[0];\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar result=first_Digit(123);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var num=n.toString();\n    var res=num.split(\"\");\n    return res[0];\n}\nvar n=12345;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var num=n.toString();\n    var first=num.charAt(0);\n    return parseInt(first);\n}\nvar result=first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar n = prompt(\"Enter a number\");\nvar result = first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "/tmp/tmp6g4uyx28.js:7\nvar n = prompt(\"Enter a number\");\n        ^\n\nReferenceError: prompt is not defined\n    at Object.<anonymous> (/tmp/tmp6g4uyx28.js:7:9)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar n = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            return str[i];\n        }\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar n = 1234;\nvar result = first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar n=1234;\nvar result=first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var num = n.toString();\n    var first = num.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var s = n.toString();\n    var first = s.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    return str[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar n = 1234;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str=n.toString();\n    var res=str.charAt(0);\n    return res;\n}\nvar n=12345;\nvar result=first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    for(var i=0;i<str.length;i++){\n        if(str[i]>=0){\n            return str[i];\n        }\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar n=12345;\nvar result=first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    for(var i=0;i<str.length;i++){\n        if(!isNaN(str[i])){\n            return str[i];\n        }\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar n=12345;\nvar result=first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(str[i]>=0){\n            return str[i];\n        }\n    }\n}\nvar result=first_Digit(26789);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar n = 12345;\nvar result = first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var s = n.toString();\n    var first = s[0];\n    return first;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var s = n.toString();\n    return s.charAt(0);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var n = n.toString();\n    var n = n.split(\"\");\n    var n = n[0];\n    return n;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a = n.toString();\n    var b = a.split(\"\");\n    var c = b[0];\n    return c;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar n = first_Digit(12345);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var num = n.toString();\n    var first = num[0];\n    return first;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var num = n.toString();\n    var first = num.charAt(0);\n    return first;\n}\nvar result = first_Digit(12);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    return n.toString().split(\"\")[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a = n.toString();\n    var b = a.split(\"\");\n    for(var i = 0; i < b.length; i++){\n        if(b[i] == \"0\" || b[i] == \"1\" || b[i] == \"2\" || b[i] == \"3\" || b[i] == \"4\" || b[i] == \"5\" || b[i] == \"6\" || b[i] == \"7\" || b[i] == \"8\" || b[i] == \"9\"){\n            return b[i];\n        }\n    }\n}\nvar n = prompt(\"Enter a number\");\nvar result = first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "/tmp/tmp9jcap4x6.js:11\nvar n = prompt(\"Enter a number\");\n        ^\n\nReferenceError: prompt is not defined\n    at Object.<anonymous> (/tmp/tmp9jcap4x6.js:11:9)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar result = first_Digit(123);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar n=prompt(\"Enter a number\");\nalert(first_Digit(n));\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "/tmp/tmp32hogkh8.js:8\nvar n=prompt(\"Enter a number\");\n      ^\n\nReferenceError: prompt is not defined\n    at Object.<anonymous> (/tmp/tmp32hogkh8.js:8:7)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    n = n + \"\";\n    return n[0];\n}\nvar result = first_Digit(26);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var n = n.toString();\n    return n.charAt(0);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar n = prompt(\"Enter a number\");\nvar result = first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "/tmp/tmp6g4uyx28.js:7\nvar n = prompt(\"Enter a number\");\n        ^\n\nReferenceError: prompt is not defined\n    at Object.<anonymous> (/tmp/tmp6g4uyx28.js:7:9)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var digit = str.charAt(0);\n    return digit;\n}\nvar result = first_Digit(123);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar num = first_Digit(123);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    for(var i=0;i<str.length;i++){\n        if(!isNaN(str[i])){\n            return str[i];\n        }\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar n = 1234;\nvar result = first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    return str[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a = n.toString();\n    var b = a.split(\"\");\n    var c = b[0];\n    return c;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            return str[i];\n        }\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar n=prompt(\"Enter a number\");\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "/tmp/tmp38ex33z1.js:8\nvar n=prompt(\"Enter a number\");\n      ^\n\nReferenceError: prompt is not defined\n    at Object.<anonymous> (/tmp/tmp38ex33z1.js:8:7)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nfirst_Digit(1234);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a = n.toString().split(\"\");\n    return a[0];\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    return str[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    return str[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar n=12345;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar n=12345;\nvar result=first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    return str[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    return n.toString().split(\"\")[0];\n}\nfirst_Digit(1234);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar n=12345;\nvar result=first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    return str[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a = n.toString();\n    var b = a.split(\"\");\n    for(var i=0;i<b.length;i++){\n        if(b[i]>=0){\n            console.log(b[i]);\n            break;\n        }\n    }\n}\nfirst_Digit(123);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpgi9cpxsb.js:19:10)\n    at Object.<anonymous> (/tmp/tmpgi9cpxsb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar n = 1234;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var num = n.toString();\n    var first = num.charAt(0);\n    return first;\n}\nvar result = first_Digit(2345);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var s = n.toString();\n    return s.charAt(0);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    return str[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    return str[0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return parseInt(res[0]);\n}\nvar n = 1234;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var n = n.toString();\n    var first = n.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar n=1234;\nvar result=first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var n = n.toString();\n    var n = n.split(\"\");\n    var n = n[0];\n    return n;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var s = n.toString();\n    return parseInt(s[0]);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar n = 1234;\nvar result = first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a=n.toString();\n    var b=a.split(\"\");\n    var c=b[0];\n    return c;\n}\nvar result=first_Digit(12345);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var s=n.toString();\n    var f=s.charAt(0);\n    return f;\n}\nvar n=12345;\nvar result=first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar n=12345;\nvar result=first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var s = n.toString();\n    var first = s.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a=n.toString();\n    return a[0];\n}\nvar result=first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var n = n.toString();\n    return n[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar num = first_Digit(12345);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var num = n.toString();\n    var first = num.charAt(0);\n    return first;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a = n.toString();\n    var b = a.split(\"\");\n    var c = parseInt(b[0]);\n    return c;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a = n.toString();\n    return a.charAt(0);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    return n.toString().split('')[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str=n.toString();\n    for(var i=0;i<str.length;i++){\n        if(!isNaN(str[i])){\n            return str[i];\n        }\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var n = n.toString();\n    var n = n.split(\"\");\n    var n = n[0];\n    return n;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar result=first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    return n.toString().split('')[0]\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a=n.toString();\n    return a[0];\n}\nvar result=first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    return str[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar num = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    return str.charAt(0);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var s = n.toString();\n    var first = s.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar num = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar num = prompt(\"Enter a number\");\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "/tmp/tmp1804l10k.js:7\nvar num = prompt(\"Enter a number\");\n          ^\n\nReferenceError: prompt is not defined\n    at Object.<anonymous> (/tmp/tmp1804l10k.js:7:11)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a=n.toString();\n    var b=a.split(\"\");\n    var c=b[0];\n    return c;\n}\nvar result=first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var num = n.toString();\n    var first = num.charAt(0);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar num = 1234;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar n = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    return n.toString().split('')[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a = n.toString();\n    var b = a.split(\"\");\n    var c = b[0];\n    return c;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar result=first_Digit(123);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar n = 1234;\nvar result = first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar result=first_Digit(123);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar num = 123;\nvar result = first_Digit(num);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar result=first_Digit(2648);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar num = first_Digit(12345);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var n=n.toString();\n    var n=n.split(\"\");\n    var n=n[0];\n    return n;\n}\nvar num=first_Digit(123);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    return str[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    return n.toString().split('')[0];\n}\nfirst_Digit(123);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            return str[i];\n        }\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str=n.toString();\n    var res=str.split(\"\");\n    return res[0];\n}\nvar n=1234;\nvar result=first_Digit(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    return str[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar n = 123;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    var digit = str.charAt(0);\n    return digit;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var a = n.toString();\n    var b = a.split(\"\");\n    var c = b[0];\n    return c;\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var n = n.toString();\n    var n = n.split(\"\");\n    var n = n[0];\n    return n;\n}\nfirst_Digit(123);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    for(var i=0;i<str.length;i++){\n        if(str[i]=='0'||str[i]=='1'||str[i]=='2'||str[i]=='3'||str[i]=='4'||str[i]=='5'||str[i]=='6'||str[i]=='7'||str[i]=='8'||str[i]=='9'){\n            return str[i];\n        }\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n    var str = n.toString();\n    return str[0];\n}\nvar result = first_Digit(1234);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
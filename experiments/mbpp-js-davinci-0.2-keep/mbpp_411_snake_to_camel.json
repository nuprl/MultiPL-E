{
  "name": "mbpp_411_snake_to_camel",
  "language": "js",
  "prompt": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_411_snake_to_camel.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var words = word.split('_');\n    var camel = words[0];\n    for(var i = 1; i < words.length; i++){\n        camel += words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    }\n    return camel;\n}",
    "    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\n",
    "    let newWord = word.split(\"_\");\n    let camelWord = newWord[0];\n    for(let i = 1; i < newWord.length; i++){\n        camelWord += newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return camelWord;\n}",
    "    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}",
    "    var newWord = word.split(\"_\");\n    var result = newWord[0];\n    for(var i = 1; i < newWord.length; i++){\n        result += newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return result;\n}",
    "    var result = word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n    return result;\n}",
    "    var newWord = word.split(\"_\");\n    var newWord2 = newWord.map(function(val,index){\n        if(index!=0){\n            return val.charAt(0).toUpperCase()+val.slice(1);\n        }\n        else{\n            return val;\n        }\n    });\n    return newWord2.join(\"\");\n}",
    "    var arr = word.split('_');\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        var newWord = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n        newArr.push(newWord);\n    }\n    return newArr.join('');\n}",
    "    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}",
    "    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].substring(1);\n    }\n    return newWord.join(\"\");\n}\n",
    "    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}",
    "    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}",
    "    var newWord = word.split(\"_\");\n    var camelWord = newWord[0];\n    for(var i = 1; i < newWord.length; i++){\n        camelWord += newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return camelWord;\n}",
    "    return word.replace(/([-_][a-z])/ig, ($1) => {\n        return $1.toUpperCase()\n            .replace('-', '')\n            .replace('_', '');\n    });\n}",
    "    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i === 0){\n            newArr.push(arr[i]);\n        }else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}",
    "    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].substring(1);\n    }\n    return newWord.join(\"\");\n}",
    "    var result = word.split(\"_\");\n    for(var i = 1; i < result.length; i++){\n        result[i] = result[i].charAt(0).toUpperCase() + result[i].slice(1);\n    }\n    return result.join(\"\");\n}",
    "    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}",
    "    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}",
    "    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\n"
  ]
}
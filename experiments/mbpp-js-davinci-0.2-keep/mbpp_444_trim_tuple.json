{
  "name": "mbpp_444_trim_tuple",
  "language": "js",
  "prompt": "//Write a function to trim each tuple by k in the given tuple list.\nfunction trim_tuple(test_list, K){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_444_trim_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = trim_tuple;\n  assert.deepEqual(candidate([[5, 3, 2, 1, 4], [3, 4, 9, 2, 1], [9, 1, 2, 3, 5], [4, 8, 2, 1, 7]], 2),\"[(2,), (9,), (2,), (2,)]\");\n  assert.deepEqual(candidate([[5, 3, 2, 1, 4], [3, 4, 9, 2, 1], [9, 1, 2, 3, 5], [4, 8, 2, 1, 7]], 1),\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\");\n  assert.deepEqual(candidate([[7, 8, 4, 9], [11, 8, 12, 4], [4, 1, 7, 8], [3, 6, 9, 7]], 1),\"[(8, 4), (8, 12), (1, 7), (6, 9)]\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var temp = [];\n        for (var j = 0; j < test_list[i].length; j++){\n            if (j != K){\n                temp.push(test_list[i][j]);\n            }\n        }\n        result.push(temp);\n    }\n    return result;\n}\n",
    "    var res = [];\n    for (var i = 0; i < test_list.length; i++){\n        var temp = [];\n        for (var j = 0; j < test_list[i].length; j++){\n            if (j < K){\n                temp.push(test_list[i][j]);\n            }\n        }\n        res.push(temp);\n    }\n    return res;\n}\n",
    "    var result = test_list.map(function(x){\n        return x.slice(0, K);\n    });\n    return result;\n}\n\nvar test_list = [[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15]];\nvar K = 3;",
    "    var res = [];\n    for (var i = 0; i < test_list.length; i++){\n        var temp = test_list[i].slice(0, K);\n        res.push(temp);\n    }\n    return res;\n}\n",
    "    var result = test_list.map(function(sub_list){\n        return sub_list.slice(0, K);\n    });\n    return result;\n}\n\nvar test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]];\nvar K = 2;",
    "    var res = [];\n    for(var i = 0; i < test_list.length; i++){\n        var temp = [];\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] > K){\n                temp.push(test_list[i][j]);\n            }\n        }\n        res.push(temp);\n    }\n    return res;\n}",
    "    var res = [];\n    for (var i = 0; i < test_list.length; i++){\n        var temp = test_list[i];\n        var temp_list = [];\n        for (var j = 0; j < temp.length; j++){\n            if (j >= K){\n                temp_list.push(temp[j]);\n            }\n        }\n        res.push(temp_list);\n    }\n    return res;\n}\n",
    "    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var temp = test_list[i];\n        var temp_list = [];\n        for (var j = 0; j < temp.length; j++){\n            if (j < K){\n                temp_list.push(temp[j]);\n            }\n        }\n        result.push(temp_list);\n    }\n    return result;\n}\n",
    "    var res = test_list.map(function(sub_list){\n        return sub_list.slice(0, K);\n    });\n    return res;\n}",
    "    var res = test_list.map(function(sub_arr){\n        return sub_arr.slice(0, K);\n    });\n    return res;\n}\n\nvar test_list = [[(2, 4), (1, 2), (5, 10)], [(3, 5), (2, 3), (3, 4)]];\nvar K = 1;",
    "    var res = [];\n    for(var i = 0; i < test_list.length; i++){\n        var temp = [];\n        for(var j = 0; j < test_list[i].length; j++){\n            if(j >= K){\n                temp.push(test_list[i][j]);\n            }\n        }\n        res.push(temp);\n    }\n    return res;\n}\n",
    "    var result = test_list.map(function(sub_list){\n        return sub_list.slice(0, K);\n    });\n    return result;\n}\n\nvar test_list = [[(2, 4), (5, 2), (4, 0)], [(1, 2), (4, 1), (1, 0)]];\nvar K = 1;",
    "    var res = [];\n    for (var i = 0; i < test_list.length; i++){\n        var temp = [];\n        for (var j = 0; j < test_list[i].length; j++){\n            if (j >= K){\n                temp.push(test_list[i][j]);\n            }\n        }\n        res.push(temp);\n    }\n    return res;\n}\n",
    "    var res = [];\n    for (var i = 0; i < test_list.length; i++){\n        var temp = test_list[i].slice(0, K);\n        res.push(temp);\n    }\n    return res;\n}\n",
    "    var result = test_list.map(function(x){\n        return x.slice(0, K);\n    });\n    return result;\n}",
    "    var result = test_list.map(function(x){\n        return x.slice(0, K);\n    });\n    return result;\n}\n\nvar test_list = [[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15]];\nvar K = 3;",
    "    var result = test_list.map(function(sub_list){\n        return sub_list.slice(0, K);\n    });\n    return result;\n}\n\nvar test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nvar K = 2;",
    "    var res = [];\n    for (var i = 0; i < test_list.length; i++){\n        var temp = [];\n        for (var j = 0; j < test_list[i].length; j++){\n            if (j < K){\n                temp.push(test_list[i][j]);\n            }\n        }\n        res.push(temp);\n    }\n    return res;\n}\n",
    "    var res = [];\n    for (var i = 0; i < test_list.length; i++){\n        var temp = [];\n        for (var j = 0; j < test_list[i].length; j++){\n            if (j < K){\n                temp.push(test_list[i][j]);\n            }\n        }\n        res.push(temp);\n    }\n    return res;\n}\n",
    "    var res = [];\n    for (var i = 0; i < test_list.length; i++){\n        var temp = test_list[i].slice(0, K);\n        res.push(temp);\n    }\n    return res;\n}\n"
  ]
}
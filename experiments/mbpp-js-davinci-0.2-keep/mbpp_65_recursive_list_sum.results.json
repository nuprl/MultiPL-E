{
  "name": "mbpp_65_recursive_list_sum",
  "language": "js",
  "prompt": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_65_recursive_list_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n  var sum = 0;\n  for(var i = 0; i < data_list.length; i++){\n    if(typeof(data_list[i]) == 'number'){\n      sum += data_list[i];\n    }\n    else{\n      sum += recursive_list_sum(data_list[i]);\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,[3,4,[5,6],7],8];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++) {\n        if (typeof(data_list[i]) == typeof([])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else if(typeof data_list[i] == \"object\"){\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4,5,6,7,8,9,10];\nvar data2 = [1,2,3,[4,5,6,[7,8,9,10]]];\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data_list = [1, 2, [3,4], [5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nvar data_list = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof data_list[i] == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n  var sum = 0;\n  for(var i = 0; i < data_list.length; i++){\n    if(typeof data_list[i] == \"number\"){\n      sum += data_list[i];\n    }\n    else{\n      sum += recursive_list_sum(data_list[i]);\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nvar data = [1, 2, [3, 4, [5, 6]]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n  var sum = 0;\n  for(var i = 0; i < data_list.length; i++){\n    if(typeof data_list[i] === 'object'){\n      sum += recursive_list_sum(data_list[i]);\n    } else {\n      sum += data_list[i];\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof data_list[i] == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4,5,6,7,8,9,10];\nvar data2 = [1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10]];\nvar data3 = [1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10]]];\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i]) == typeof([])){\n            sum = sum + recursive_list_sum(data_list[i]);\n        } else {\n            sum = sum + data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i < data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nvar data = [1, 2, [3,4], [5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"object\"){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4,5,6,7,8,9,10];\nvar data2 = [1,2,3,4,5,6,7,8,9,10, [1,2,3,4,5,6,7,8,9,10]];\nvar data3 = [1,2,3,4,5,6,7,8,9,10, [1,2,3,4,5,6,7,8,9,10, [1,2,3,4,5,6,7,8,9,10]]];\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data_list = [1, 2, [3, 4, [5, 6]], [7, 8], 9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4];\nvar data2 = [1,2,[3,4,[5,6]]];\nvar data3 = [[3,4,[5,6]],[7,8]];\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i < data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] === 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nvar test_list = [1, [2, [3, 4], 5], 6];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,[3,4,[5,6],7],8];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nvar data = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i < data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof(data_list[i]) == typeof([])){\n            sum = sum + recursive_list_sum(data_list[i]);\n        } else {\n            sum = sum + data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] === 'number'){\n            sum += data_list[i];\n        }else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n  var sum = 0;\n  for(var i = 0; i < data_list.length; i++){\n    if(typeof(data_list[i]) == 'number'){\n      sum += data_list[i];\n    }\n    else{\n      sum += recursive_list_sum(data_list[i]);\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    if (data_list.length == 1){\n        return data_list[0];\n    }\n    else{\n        return data_list[0] + recursive_list_sum(data_list.slice(1));\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'123,45,6'\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpl_f47mq4.js:16:10)\n    at Object.<anonymous> (/tmp/tmpl_f47mq4.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '123,45,6',\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\nvar data = [1,2,3,4,5,6,7,8,9,10];\nvar data2 = [1,2,3,4,5,6,7,8,9,10, [1,2,3,4,5,6,7,8,9,10]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nvar data_list = [1, 2, [3, 4, [5, 6]], [7, 8], 9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i < data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nvar data = [1, 2, [3, 4, [5, 6]], [7, 8], 9, 10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }\n        else if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i < data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i < data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nvar data_list = [1, [2, [3, 4], 5], 6, [7, 8]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4,5,6,7,8,9,10];\nvar data2 = [1,2,3,4,5,6,7,8,9,10, [11,12,13,14,15,16,17,18,19,20]];\nvar data3 = [1,2,3,4,5,6,7,8,9,10, [11,12,13,14,15,16,17,18,19,20, [21,22,23,24,25,26,27,28,29,30]]];\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i]) == typeof([1,2])){\n            sum = sum + recursive_list_sum(data_list[i]);\n        } else {\n            sum = sum + data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i]) == typeof([])){\n            sum = sum + recursive_list_sum(data_list[i]);\n        } else {\n            sum = sum + data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i < data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n  var sum = 0;\n  for(var i = 0; i < data_list.length; i++){\n    if(typeof data_list[i] == 'number'){\n      sum += data_list[i];\n    }else{\n      sum += recursive_list_sum(data_list[i]);\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4,5,6,[7,8,9,10,[11,12,13,14,15,[16,17,18,19,20]]]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"object\"){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n  var sum = 0;\n  for(var i = 0; i < data_list.length; i++){\n    if(Array.isArray(data_list[i])){\n      sum += recursive_list_sum(data_list[i]);\n    }\n    else{\n      sum += data_list[i];\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nvar data = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i < data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i < data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == typeof([])){\n            sum = sum + recursive_list_sum(data_list[i]);\n        } else {\n            sum = sum + data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var total = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == 'number'){\n            total += data_list[i];\n        }\n        else{\n            total += recursive_list_sum(data_list[i]);\n        }\n    }\n    return total;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4];\nvar data2 = [[1,2],[3,4],[5,6]];\nvar data3 = [[[1,2],[3,4]],[[5,6],[7,8]]];\nvar data4 = [1,[2,3,[4]],5];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n  var sum = 0;\n  for(var i = 0; i < data_list.length; i++){\n    if(typeof data_list[i] === 'number'){\n      sum += data_list[i];\n    }\n    else if(typeof data_list[i] === 'object'){\n      sum += recursive_list_sum(data_list[i]);\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n  var sum = 0;\n  for(var i = 0; i < data_list.length; i++){\n    if(typeof data_list[i] === 'number'){\n      sum += data_list[i];\n    }else{\n      sum += recursive_list_sum(data_list[i]);\n    }\n  }\n  return sum;\n}\n\nvar data = [1, 2, [3, 4, [5, 6], 7], 8];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    if(data_list.length == 0){\n        return 0;\n    }\n    else if(data_list[0] instanceof Array){\n        return recursive_list_sum(data_list[0]) + recursive_list_sum(data_list.slice(1));\n    }\n    else{\n        return data_list[0] + recursive_list_sum(data_list.slice(1));\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof data_list[i] === 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\nvar data_list = [1,2,3,[1,2,3,4,[2,3,4]],5];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i < data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    if(data_list.length == 0){\n        return 0;\n    }\n    else{\n        if(typeof(data_list[0]) == 'number'){\n            return data_list[0] + recursive_list_sum(data_list.slice(1));\n        }\n        else{\n            return recursive_list_sum(data_list[0]) + recursive_list_sum(data_list.slice(1));\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof data_list[i] == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4,5,6,7,8,9,10];\nvar data2 = [1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10]];\nvar data3 = [1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10]]];\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i < data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,[3,4,[5,6],7],8];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof data_list[i] == \"number\"){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i < data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data_list = [1,2,[3,4,[5,6],7],8];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nvar data = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        }\n        else{\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof(data_list[i]) == typeof([])){\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for (var i = 0; i < data_list.length; i++){\n        if (typeof data_list[i] == 'number'){\n            sum += data_list[i];\n        }\n        else if (typeof data_list[i] == 'object'){\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i = 0; i < data_list.length; i++){\n        if(typeof(data_list[i]) == 'number'){\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(Array.isArray(data_list[i])){\n            sum += recursive_list_sum(data_list[i]);\n        }else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list){\n    var sum = 0;\n    for(var i=0; i<data_list.length; i++){\n        if(typeof(data_list[i])=='object'){\n            sum += recursive_list_sum(data_list[i]);\n        } else{\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123320,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}